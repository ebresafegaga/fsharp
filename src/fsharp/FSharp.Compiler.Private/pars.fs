// Implementation file for parser generated by fsyacc
module internal FSharp.Compiler.Parser
#nowarn "64";; // turn off warnings that type variables used in production annotations are instantiated to concrete type
open FSharp.Compiler
open Internal.Utilities.Text.Lexing
open Internal.Utilities.Text.Parsing.ParseHelpers
# 3 "../pars.fsy"


#nowarn "1182"  // generated code has lots of unused "parseState"

open System

open Internal.Utilities
open Internal.Utilities.Text.Parsing

open FSharp.Compiler
open FSharp.Compiler.AbstractIL
open FSharp.Compiler.AbstractIL.Internal
open FSharp.Compiler.AbstractIL.Internal.Library
open FSharp.Compiler.ErrorLogger
open FSharp.Compiler.Features
open FSharp.Compiler.Lib
open FSharp.Compiler.ParseHelpers
open FSharp.Compiler.PrettyNaming
open FSharp.Compiler.Range
open FSharp.Compiler.SyntaxTree
open FSharp.Compiler.SyntaxTreeOps
open FSharp.Compiler.XmlDoc

#if DEBUG
let debugPrint s =
    if Internal.Utilities.Text.Parsing.Flags.debug then 
        printfn "\n%s" s
#else
let debugPrint s = ignore s
#endif

let exprFromParseError (e:SynExpr) = SynExpr.FromParseError (e, e.Range)

let patFromParseError (e:SynPat) = SynPat.FromParseError(e, e.Range)

let mkSynOptionalExpr (m: range) xopt = 
    let m = m.MakeSynthetic()
    match xopt with 
    | None -> mkSynLidGet m FSharpLib.CorePath "None"
    | Some x  -> SynExpr.App (ExprAtomicFlag.NonAtomic, false, mkSynLidGet m FSharpLib.CorePath "Some", x, m)

// record bindings returned by the recdExprBindings rule has shape:
// (binding, separator-before-this-binding)
// this function converts arguments from form
// binding1 (binding2*sep1, binding3*sep2...) sepN
// to form
// binding1*sep1, binding2*sep2
let rebindRanges first fields lastSep = 
    let rec run (name, value) l acc = 
        match l with
        | [] -> List.rev ((name, value, lastSep) :: acc)
        | (f, m) :: xs -> run f xs ((name, value, m) :: acc)
    run first fields []

let mkUnderscoreRecdField m = LongIdentWithDots([ident("_", m)], []), false

let mkRecdField lidwd = lidwd, true

let mkSynDoBinding (vis, strict, expr, m) = 
    match vis with
    | Some vis -> errorR(Error(FSComp.SR.parsDoCannotHaveVisibilityDeclarations (vis.ToString()), m))
    | None -> ()
    Binding (None,
             (if strict then DoBinding else StandaloneExpression),
             false, false, [], PreXmlDoc.Empty, SynInfo.emptySynValData,
             (if strict then SynPat.Const(SynConst.Unit, m) else SynPat.Wild m),
             None, expr, m, NoDebugPointAtDoBinding)

let mkSynDoDecl (e: SynExpr) = 
    let spExpr = if IsControlFlowExpression e then NoDebugPointAtDoBinding else DebugPointAtBinding e.Range in
    SynModuleDecl.DoExpr(spExpr, e, e.Range)

let addAttribs attrs p =  SynPat.Attrib(p, attrs, p.Range)


// This function is called by the generated parser code. Returning initiates error recovery 
// It must be called precisely "parse_error_rich"
let parse_error_rich = Some (fun (ctxt: ParseErrorContext<_>) -> 
    errorR(SyntaxError(box ctxt, ctxt.ParseState.LexBuffer.LexemeRange)))

let reportParseErrorAt m s = errorR(Error(s, m))

let unionRangeWithPos (r:range) p =
    let r2 = mkRange r.FileName p p
    unionRanges r r2

let raiseParseErrorAt m s = 
    reportParseErrorAt m s; 
    // This initiates error recovery
    raise RecoverableParseError 

let checkEndOfFileError t = 
  match t with 
  | LexCont.IfDefSkip(_, _, m)                      -> reportParseErrorAt m (FSComp.SR.parsEofInHashIf())
  | LexCont.String (_, m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInString())
  | LexCont.TripleQuoteString (_, m)               -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteString())
  | LexCont.VerbatimString (_, m)                  -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimString())
  | LexCont.Comment (_, _, m)                       -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.SingleLineComment (_, _, m)             -> reportParseErrorAt m (FSComp.SR.parsEofInComment())
  | LexCont.StringInComment (_, _, m)               -> reportParseErrorAt m (FSComp.SR.parsEofInStringInComment())
  | LexCont.VerbatimStringInComment (_, _, m)       -> reportParseErrorAt m (FSComp.SR.parsEofInVerbatimStringInComment())
  | LexCont.TripleQuoteStringInComment (_, _, m)    -> reportParseErrorAt m (FSComp.SR.parsEofInTripleQuoteStringInComment())
  | LexCont.MLOnly (_, m)                          -> reportParseErrorAt m (FSComp.SR.parsEofInIfOcaml())
  | LexCont.EndLine(LexerEndlineContinuation.Skip(_, _, m)) -> reportParseErrorAt m (FSComp.SR.parsEofInDirective())
  | LexCont.EndLine(LexerEndlineContinuation.Token(stack))
  | LexCont.Token(stack) -> 
      match stack with 
      | [] -> ()
      | (_, m) :: _  -> reportParseErrorAt m (FSComp.SR.parsNoHashEndIfFound())

type BindingSet = BindingSetPreAttrs of range * bool * bool * (SynAttributes -> SynAccess option -> SynAttributes * SynBinding list) * range

let mkClassMemberLocalBindings(isStatic, initialRangeOpt, attrs, vis, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, bindingSetRange)) = 
   let ignoredFreeAttrs, decls = declsPreAttrs attrs vis
   let wholeRange = 
       match initialRangeOpt with 
       | None -> bindingSetRange
       | Some m -> unionRanges m bindingSetRange
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), wholeRange));
   if isUse then errorR(Error(FSComp.SR.parsUseBindingsIllegalInImplicitClassConstructors(), wholeRange))
   SynMemberDefn.LetBindings (decls, isStatic, isRec, wholeRange)

let mkLocalBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _), body) = 
   let ignoredFreeAttrs, decls = declsPreAttrs [] None 
   if not (isNil ignoredFreeAttrs) then warning(Error(FSComp.SR.parsAttributesIgnored(), mWhole))
   SynExpr.LetOrUse (isRec, isUse, decls, body, mWhole) 

let mkDefnBindings (mWhole, BindingSetPreAttrs(_, isRec, isUse, declsPreAttrs, _bindingSetRange), attrs, vis, attrsm) = 
    if isUse then warning(Error(FSComp.SR.parsUseBindingsIllegalInModules(), mWhole))
    let freeAttrs, decls = declsPreAttrs attrs vis 
    let letDecls = [ SynModuleDecl.Let (isRec, decls, mWhole) ] 
    let attrDecls = if not (isNil freeAttrs) then [ SynModuleDecl.Attributes (freeAttrs, attrsm) ] else [] 
    attrDecls @ letDecls

let idOfPat (parseState:IParseState) m p = 
    match p with
    | SynPat.Wild r when parseState.LexBuffer.SupportsFeature LanguageFeature.WildCardInForLoop ->
        mkSynId r "_"
    | SynPat.Named (SynPat.Wild _, id, false, _, _) -> id
    | SynPat.LongIdent(LongIdentWithDots([id], _), _, None, SynArgPats.Pats [], None, _) -> id
    | _ -> raiseParseErrorAt m (FSComp.SR.parsIntegerForLoopRequiresSimpleIdentifier())

let checkForMultipleAugmentations m a1 a2 = 
    if not (isNil a1) && not (isNil a2) then raiseParseErrorAt m (FSComp.SR.parsOnlyOneWithAugmentationAllowed())
    a1 @ a2

let grabXmlDoc(parseState:IParseState, elemIdx) = 
    LexbufLocalXmlDocStore.GrabXmlDocBeforeMarker(parseState.LexBuffer, rhs parseState elemIdx)

let rangeOfLongIdent(lid:LongIdent) =
    System.Diagnostics.Debug.Assert(not lid.IsEmpty, "the parser should never produce a long-id that is the empty list") 
    (lid.Head.idRange, lid) ||> unionRangeWithListBy (fun id -> id.idRange) 


# 162 "pars.fs"
// This type is the type of tokens accepted by the parser
type token = 
  | HASH_IF of (range * string * ParseHelpers.LexerWhitespaceContinuation)
  | HASH_ELSE of (range * string * ParseHelpers.LexerWhitespaceContinuation)
  | HASH_ENDIF of (range * string * ParseHelpers.LexerWhitespaceContinuation)
  | COMMENT of (ParseHelpers.LexerWhitespaceContinuation)
  | WHITESPACE of (ParseHelpers.LexerWhitespaceContinuation)
  | HASH_LINE of (ParseHelpers.LexerWhitespaceContinuation)
  | HASH_LIGHT of (ParseHelpers.LexerWhitespaceContinuation)
  | INACTIVECODE of (ParseHelpers.LexerWhitespaceContinuation)
  | LINE_COMMENT of (ParseHelpers.LexerWhitespaceContinuation)
  | STRING_TEXT of (ParseHelpers.LexerWhitespaceContinuation)
  | EOF of (ParseHelpers.LexerWhitespaceContinuation)
  | LEX_FAILURE of (string)
  | ODUMMY of (token)
  | FIXED
  | OINTERFACE_MEMBER
  | OBLOCKEND
  | OBLOCKEND_COMING_SOON
  | OBLOCKEND_IS_HERE
  | ORIGHT_BLOCK_END
  | ODECLEND
  | OEND
  | OBLOCKSEP
  | OBLOCKBEGIN
  | ORESET
  | OFUN
  | OFUNCTION
  | OWITH
  | OELSE
  | OTHEN
  | ODO_BANG
  | ODO
  | OAND_BANG of (bool)
  | OBINDER of (string)
  | OLET of (bool)
  | HIGH_PRECEDENCE_TYAPP
  | HIGH_PRECEDENCE_PAREN_APP
  | HIGH_PRECEDENCE_BRACK_APP
  | TYPE_COMING_SOON
  | TYPE_IS_HERE
  | MODULE_COMING_SOON
  | MODULE_IS_HERE
  | EXTERN
  | VOID
  | PUBLIC
  | PRIVATE
  | INTERNAL
  | GLOBAL
  | STATIC
  | MEMBER
  | CLASS
  | ABSTRACT
  | OVERRIDE
  | DEFAULT
  | CONSTRUCTOR
  | INHERIT
  | GREATER_RBRACK
  | STRUCT
  | SIG
  | BAR
  | RBRACK
  | RBRACE
  | RBRACE_COMING_SOON
  | RBRACE_IS_HERE
  | MINUS
  | DOLLAR
  | BAR_RBRACK
  | BAR_RBRACE
  | UNDERSCORE
  | SEMICOLON_SEMICOLON
  | LARROW
  | EQUALS
  | LBRACK
  | LBRACK_BAR
  | LBRACE_BAR
  | LBRACK_LESS
  | LBRACE
  | QMARK
  | QMARK_QMARK
  | DOT
  | COLON
  | COLON_COLON
  | COLON_GREATER
  | COLON_QMARK_GREATER
  | COLON_QMARK
  | COLON_EQUALS
  | SEMICOLON
  | WHEN
  | WHILE
  | WITH
  | HASH
  | AMP
  | AMP_AMP
  | QUOTE
  | LPAREN
  | RPAREN
  | RPAREN_COMING_SOON
  | RPAREN_IS_HERE
  | STAR
  | COMMA
  | RARROW
  | GREATER_BAR_RBRACK
  | LPAREN_STAR_RPAREN
  | OPEN
  | OR
  | REC
  | THEN
  | TO
  | TRUE
  | TRY
  | TYPE
  | VAL
  | INLINE
  | INTERFACE
  | INSTANCE
  | CONST
  | LAZY
  | OLAZY
  | MATCH
  | MATCH_BANG
  | MUTABLE
  | NEW
  | OF
  | EXCEPTION
  | FALSE
  | FOR
  | FUN
  | FUNCTION
  | IF
  | IN
  | JOIN_IN
  | FINALLY
  | DO_BANG
  | AND
  | AS
  | ASSERT
  | OASSERT
  | ASR
  | BEGIN
  | DO
  | DONE
  | DOWNTO
  | ELSE
  | ELIF
  | END
  | DOT_DOT
  | DOT_DOT_HAT
  | BAR_BAR
  | UPCAST
  | DOWNCAST
  | NULL
  | RESERVED
  | MODULE
  | NAMESPACE
  | DELEGATE
  | CONSTRAINT
  | BASE
  | LQUOTE of (string * bool)
  | RQUOTE of (string * bool)
  | RQUOTE_DOT of (string * bool)
  | PERCENT_OP of (string)
  | BINDER of (string)
  | LESS of (bool)
  | GREATER of (bool)
  | LET of (bool)
  | YIELD of (bool)
  | YIELD_BANG of (bool)
  | AND_BANG of (bool)
  | BIGNUM of ((string * string))
  | DECIMAL of (System.Decimal)
  | CHAR of (char)
  | IEEE64 of (double)
  | IEEE32 of (single)
  | NATIVEINT of (int64)
  | UNATIVEINT of (uint64)
  | UINT64 of (uint64)
  | UINT32 of (uint32)
  | UINT16 of (uint16)
  | UINT8 of (byte)
  | INT64 of (int64 * bool)
  | INT32 of (int32 * bool)
  | INT32_DOT_DOT of (int32 * bool)
  | INT16 of (int16 * bool)
  | INT8 of (sbyte * bool)
  | FUNKY_OPERATOR_NAME of (string)
  | ADJACENT_PREFIX_OP of (string)
  | PLUS_MINUS_OP of (string)
  | INFIX_AMP_OP of (string)
  | INFIX_STAR_DIV_MOD_OP of (string)
  | PREFIX_OP of (string)
  | INFIX_BAR_OP of (string)
  | INFIX_AT_HAT_OP of (string)
  | INFIX_COMPARE_OP of (string)
  | INFIX_STAR_STAR_OP of (string)
  | IDENT of (string)
  | KEYWORD_STRING of (string)
  | STRING of (string)
  | BYTEARRAY of (byte[])
// This type is used to give symbolic names to token indexes, useful for error messages
type tokenId = 
    | TOKEN_HASH_IF
    | TOKEN_HASH_ELSE
    | TOKEN_HASH_ENDIF
    | TOKEN_COMMENT
    | TOKEN_WHITESPACE
    | TOKEN_HASH_LINE
    | TOKEN_HASH_LIGHT
    | TOKEN_INACTIVECODE
    | TOKEN_LINE_COMMENT
    | TOKEN_STRING_TEXT
    | TOKEN_EOF
    | TOKEN_LEX_FAILURE
    | TOKEN_ODUMMY
    | TOKEN_FIXED
    | TOKEN_OINTERFACE_MEMBER
    | TOKEN_OBLOCKEND
    | TOKEN_OBLOCKEND_COMING_SOON
    | TOKEN_OBLOCKEND_IS_HERE
    | TOKEN_ORIGHT_BLOCK_END
    | TOKEN_ODECLEND
    | TOKEN_OEND
    | TOKEN_OBLOCKSEP
    | TOKEN_OBLOCKBEGIN
    | TOKEN_ORESET
    | TOKEN_OFUN
    | TOKEN_OFUNCTION
    | TOKEN_OWITH
    | TOKEN_OELSE
    | TOKEN_OTHEN
    | TOKEN_ODO_BANG
    | TOKEN_ODO
    | TOKEN_OAND_BANG
    | TOKEN_OBINDER
    | TOKEN_OLET
    | TOKEN_HIGH_PRECEDENCE_TYAPP
    | TOKEN_HIGH_PRECEDENCE_PAREN_APP
    | TOKEN_HIGH_PRECEDENCE_BRACK_APP
    | TOKEN_TYPE_COMING_SOON
    | TOKEN_TYPE_IS_HERE
    | TOKEN_MODULE_COMING_SOON
    | TOKEN_MODULE_IS_HERE
    | TOKEN_EXTERN
    | TOKEN_VOID
    | TOKEN_PUBLIC
    | TOKEN_PRIVATE
    | TOKEN_INTERNAL
    | TOKEN_GLOBAL
    | TOKEN_STATIC
    | TOKEN_MEMBER
    | TOKEN_CLASS
    | TOKEN_ABSTRACT
    | TOKEN_OVERRIDE
    | TOKEN_DEFAULT
    | TOKEN_CONSTRUCTOR
    | TOKEN_INHERIT
    | TOKEN_GREATER_RBRACK
    | TOKEN_STRUCT
    | TOKEN_SIG
    | TOKEN_BAR
    | TOKEN_RBRACK
    | TOKEN_RBRACE
    | TOKEN_RBRACE_COMING_SOON
    | TOKEN_RBRACE_IS_HERE
    | TOKEN_MINUS
    | TOKEN_DOLLAR
    | TOKEN_BAR_RBRACK
    | TOKEN_BAR_RBRACE
    | TOKEN_UNDERSCORE
    | TOKEN_SEMICOLON_SEMICOLON
    | TOKEN_LARROW
    | TOKEN_EQUALS
    | TOKEN_LBRACK
    | TOKEN_LBRACK_BAR
    | TOKEN_LBRACE_BAR
    | TOKEN_LBRACK_LESS
    | TOKEN_LBRACE
    | TOKEN_QMARK
    | TOKEN_QMARK_QMARK
    | TOKEN_DOT
    | TOKEN_COLON
    | TOKEN_COLON_COLON
    | TOKEN_COLON_GREATER
    | TOKEN_COLON_QMARK_GREATER
    | TOKEN_COLON_QMARK
    | TOKEN_COLON_EQUALS
    | TOKEN_SEMICOLON
    | TOKEN_WHEN
    | TOKEN_WHILE
    | TOKEN_WITH
    | TOKEN_HASH
    | TOKEN_AMP
    | TOKEN_AMP_AMP
    | TOKEN_QUOTE
    | TOKEN_LPAREN
    | TOKEN_RPAREN
    | TOKEN_RPAREN_COMING_SOON
    | TOKEN_RPAREN_IS_HERE
    | TOKEN_STAR
    | TOKEN_COMMA
    | TOKEN_RARROW
    | TOKEN_GREATER_BAR_RBRACK
    | TOKEN_LPAREN_STAR_RPAREN
    | TOKEN_OPEN
    | TOKEN_OR
    | TOKEN_REC
    | TOKEN_THEN
    | TOKEN_TO
    | TOKEN_TRUE
    | TOKEN_TRY
    | TOKEN_TYPE
    | TOKEN_VAL
    | TOKEN_INLINE
    | TOKEN_INTERFACE
    | TOKEN_INSTANCE
    | TOKEN_CONST
    | TOKEN_LAZY
    | TOKEN_OLAZY
    | TOKEN_MATCH
    | TOKEN_MATCH_BANG
    | TOKEN_MUTABLE
    | TOKEN_NEW
    | TOKEN_OF
    | TOKEN_EXCEPTION
    | TOKEN_FALSE
    | TOKEN_FOR
    | TOKEN_FUN
    | TOKEN_FUNCTION
    | TOKEN_IF
    | TOKEN_IN
    | TOKEN_JOIN_IN
    | TOKEN_FINALLY
    | TOKEN_DO_BANG
    | TOKEN_AND
    | TOKEN_AS
    | TOKEN_ASSERT
    | TOKEN_OASSERT
    | TOKEN_ASR
    | TOKEN_BEGIN
    | TOKEN_DO
    | TOKEN_DONE
    | TOKEN_DOWNTO
    | TOKEN_ELSE
    | TOKEN_ELIF
    | TOKEN_END
    | TOKEN_DOT_DOT
    | TOKEN_DOT_DOT_HAT
    | TOKEN_BAR_BAR
    | TOKEN_UPCAST
    | TOKEN_DOWNCAST
    | TOKEN_NULL
    | TOKEN_RESERVED
    | TOKEN_MODULE
    | TOKEN_NAMESPACE
    | TOKEN_DELEGATE
    | TOKEN_CONSTRAINT
    | TOKEN_BASE
    | TOKEN_LQUOTE
    | TOKEN_RQUOTE
    | TOKEN_RQUOTE_DOT
    | TOKEN_PERCENT_OP
    | TOKEN_BINDER
    | TOKEN_LESS
    | TOKEN_GREATER
    | TOKEN_LET
    | TOKEN_YIELD
    | TOKEN_YIELD_BANG
    | TOKEN_AND_BANG
    | TOKEN_BIGNUM
    | TOKEN_DECIMAL
    | TOKEN_CHAR
    | TOKEN_IEEE64
    | TOKEN_IEEE32
    | TOKEN_NATIVEINT
    | TOKEN_UNATIVEINT
    | TOKEN_UINT64
    | TOKEN_UINT32
    | TOKEN_UINT16
    | TOKEN_UINT8
    | TOKEN_INT64
    | TOKEN_INT32
    | TOKEN_INT32_DOT_DOT
    | TOKEN_INT16
    | TOKEN_INT8
    | TOKEN_FUNKY_OPERATOR_NAME
    | TOKEN_ADJACENT_PREFIX_OP
    | TOKEN_PLUS_MINUS_OP
    | TOKEN_INFIX_AMP_OP
    | TOKEN_INFIX_STAR_DIV_MOD_OP
    | TOKEN_PREFIX_OP
    | TOKEN_INFIX_BAR_OP
    | TOKEN_INFIX_AT_HAT_OP
    | TOKEN_INFIX_COMPARE_OP
    | TOKEN_INFIX_STAR_STAR_OP
    | TOKEN_IDENT
    | TOKEN_KEYWORD_STRING
    | TOKEN_STRING
    | TOKEN_BYTEARRAY
    | TOKEN_end_of_input
    | TOKEN_error
// This type is used to give symbolic names to token indexes, useful for error messages
type nonTerminalId = 
    | NONTERM__startsignatureFile
    | NONTERM__startimplementationFile
    | NONTERM__startinteraction
    | NONTERM__starttypedSeqExprEOF
    | NONTERM__starttypEOF
    | NONTERM_interaction
    | NONTERM_interactiveTerminator
    | NONTERM_interactiveItemsTerminator
    | NONTERM_interactiveDefns
    | NONTERM_interactiveExpr
    | NONTERM_interactiveHash
    | NONTERM_interactiveSeparators
    | NONTERM_interactiveSeparator
    | NONTERM_hashDirective
    | NONTERM_hashDirectiveArgs
    | NONTERM_hashDirectiveArg
    | NONTERM_signatureFile
    | NONTERM_moduleIntro
    | NONTERM_namespaceIntro
    | NONTERM_fileNamespaceSpecs
    | NONTERM_fileNamespaceSpecList
    | NONTERM_fileNamespaceSpec
    | NONTERM_fileModuleSpec
    | NONTERM_moduleSpfnsPossiblyEmptyBlock
    | NONTERM_moduleSpfnsPossiblyEmpty
    | NONTERM_moduleSpfns
    | NONTERM_moduleSpfn
    | NONTERM_valSpfn
    | NONTERM_optLiteralValueSpfn
    | NONTERM_moduleSpecBlock
    | NONTERM_tyconSpfns
    | NONTERM_tyconSpfnList
    | NONTERM_tyconSpfn
    | NONTERM_tyconSpfnRhsBlock
    | NONTERM_tyconSpfnRhs
    | NONTERM_tyconClassSpfn
    | NONTERM_classSpfnBlockKindUnspecified
    | NONTERM_classSpfnBlock
    | NONTERM_classSpfnMembers
    | NONTERM_classSpfnMembersAtLeastOne
    | NONTERM_classMemberSpfn
    | NONTERM_classMemberSpfnGetSet
    | NONTERM_classMemberSpfnGetSetElements
    | NONTERM_memberSpecFlags
    | NONTERM_exconSpfn
    | NONTERM_opt_classSpfn
    | NONTERM_implementationFile
    | NONTERM_fileNamespaceImpls
    | NONTERM_fileNamespaceImplList
    | NONTERM_fileNamespaceImpl
    | NONTERM_fileModuleImpl
    | NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock
    | NONTERM_moduleDefnsOrExprPossiblyEmpty
    | NONTERM_moduleDefnsOrExpr
    | NONTERM_moduleDefns
    | NONTERM_moduleDefnOrDirective
    | NONTERM_moduleDefn
    | NONTERM_namedModuleAbbrevBlock
    | NONTERM_namedModuleDefnBlock
    | NONTERM_wrappedNamedModuleDefn
    | NONTERM_tyconDefnAugmentation
    | NONTERM_opt_attributes
    | NONTERM_attributes
    | NONTERM_attributeList
    | NONTERM_attributeListElements
    | NONTERM_attribute
    | NONTERM_attributeTarget
    | NONTERM_memberFlags
    | NONTERM_typeNameInfo
    | NONTERM_tyconDefnList
    | NONTERM_tyconDefn
    | NONTERM_tyconDefnRhsBlock
    | NONTERM_tyconDefnRhs
    | NONTERM_tyconClassDefn
    | NONTERM_classDefnBlockKindUnspecified
    | NONTERM_classDefnBlock
    | NONTERM_classDefnMembers
    | NONTERM_classDefnMembersAtLeastOne
    | NONTERM_classDefnMemberGetSet
    | NONTERM_classDefnMemberGetSetElements
    | NONTERM_classDefnMemberGetSetElement
    | NONTERM_memberCore
    | NONTERM_abstractMemberFlags
    | NONTERM_classDefnMember
    | NONTERM_valDefnDecl
    | NONTERM_autoPropsDefnDecl
    | NONTERM_opt_typ
    | NONTERM_atomicPatternLongIdent
    | NONTERM_opt_access
    | NONTERM_access
    | NONTERM_opt_declVisibility
    | NONTERM_opt_interfaceImplDefn
    | NONTERM_opt_classDefn
    | NONTERM_inheritsDefn
    | NONTERM_optAsSpec
    | NONTERM_asSpec
    | NONTERM_optBaseSpec
    | NONTERM_baseSpec
    | NONTERM_objectImplementationBlock
    | NONTERM_objectImplementationMembers
    | NONTERM_objectImplementationMember
    | NONTERM_memberOrOverride
    | NONTERM_tyconDefnOrSpfnSimpleRepr
    | NONTERM_braceFieldDeclList
    | NONTERM_anonRecdType
    | NONTERM_braceBarFieldDeclListCore
    | NONTERM_inlineAssemblyTyconRepr
    | NONTERM_classOrInterfaceOrStruct
    | NONTERM_interfaceMember
    | NONTERM_tyconNameAndTyparDecls
    | NONTERM_prefixTyparDecls
    | NONTERM_typarDeclList
    | NONTERM_typarDecl
    | NONTERM_postfixTyparDecls
    | NONTERM_explicitValTyparDeclsCore
    | NONTERM_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls
    | NONTERM_opt_explicitValTyparDecls2
    | NONTERM_opt_typeConstraints
    | NONTERM_typeConstraints
    | NONTERM_typeConstraint
    | NONTERM_typarAlts
    | NONTERM_unionTypeRepr
    | NONTERM_barAndgrabXmlDoc
    | NONTERM_attrUnionCaseDecls
    | NONTERM_attrUnionCaseDecl
    | NONTERM_unionCaseName
    | NONTERM_firstUnionCaseDeclOfMany
    | NONTERM_firstUnionCaseDecl
    | NONTERM_unionCaseReprElements
    | NONTERM_unionCaseReprElement
    | NONTERM_unionCaseRepr
    | NONTERM_recdFieldDeclList
    | NONTERM_recdFieldDecl
    | NONTERM_fieldDecl
    | NONTERM_exconDefn
    | NONTERM_exceptionAndGrabDoc
    | NONTERM_exconCore
    | NONTERM_exconIntro
    | NONTERM_exconRepr
    | NONTERM_openDecl
    | NONTERM_defnBindings
    | NONTERM_doBinding
    | NONTERM_hardwhiteLetBindings
    | NONTERM_hardwhiteDoBinding
    | NONTERM_classDefnBindings
    | NONTERM_hardwhiteDefnBindingsTerminator
    | NONTERM_cPrototype
    | NONTERM_cArgs
    | NONTERM_cMoreArgs
    | NONTERM_cArg
    | NONTERM_cType
    | NONTERM_cRetType
    | NONTERM_localBindings
    | NONTERM_moreLocalBindings
    | NONTERM_attr_localBinding
    | NONTERM_localBinding
    | NONTERM_typedExprWithStaticOptimizationsBlock
    | NONTERM_typedExprWithStaticOptimizations
    | NONTERM_opt_staticOptimizations
    | NONTERM_staticOptimization
    | NONTERM_staticOptimizationConditions
    | NONTERM_staticOptimizationCondition
    | NONTERM_rawConstant
    | NONTERM_rationalConstant
    | NONTERM_atomicUnsignedRationalConstant
    | NONTERM_atomicRationalConstant
    | NONTERM_constant
    | NONTERM_bindingPattern
    | NONTERM_simplePattern
    | NONTERM_simplePatternCommaList
    | NONTERM_simplePatterns
    | NONTERM_headBindingPattern
    | NONTERM_tuplePatternElements
    | NONTERM_conjPatternElements
    | NONTERM_namePatPairs
    | NONTERM_namePatPair
    | NONTERM_constrPattern
    | NONTERM_atomicPatsOrNamePatPairs
    | NONTERM_atomicPatterns
    | NONTERM_atomicPattern
    | NONTERM_parenPatternBody
    | NONTERM_parenPattern
    | NONTERM_tupleParenPatternElements
    | NONTERM_conjParenPatternElements
    | NONTERM_recordPatternElementsAux
    | NONTERM_recordPatternElement
    | NONTERM_listPatternElements
    | NONTERM_typedSeqExprBlock
    | NONTERM_declExprBlock
    | NONTERM_typedSeqExprBlockR
    | NONTERM_typedSeqExpr
    | NONTERM_typedSeqExprEOF
    | NONTERM_seqExpr
    | NONTERM_recover
    | NONTERM_moreBinders
    | NONTERM_declExpr
    | NONTERM_dynamicArg
    | NONTERM_withClauses
    | NONTERM_withPatternClauses
    | NONTERM_patternAndGuard
    | NONTERM_patternClauses
    | NONTERM_patternGuard
    | NONTERM_patternResult
    | NONTERM_ifExprCases
    | NONTERM_ifExprThen
    | NONTERM_ifExprElifs
    | NONTERM_tupleExpr
    | NONTERM_minusExpr
    | NONTERM_appExpr
    | NONTERM_argExpr
    | NONTERM_atomicExpr
    | NONTERM_atomicExprQualification
    | NONTERM_optRangeSeqExpr
    | NONTERM_optRange
    | NONTERM_rangeDeclExpr
    | NONTERM_atomicExprAfterType
    | NONTERM_beginEndExpr
    | NONTERM_quoteExpr
    | NONTERM_arrayExpr
    | NONTERM_parenExpr
    | NONTERM_parenExprBody
    | NONTERM_staticallyKnownHeadTypars
    | NONTERM_staticallyKnownHeadTyparAlts
    | NONTERM_braceExpr
    | NONTERM_braceExprBody
    | NONTERM_listExprElements
    | NONTERM_monadicExprInitial
    | NONTERM_rangeSequenceExpr
    | NONTERM_arrowThenExprR
    | NONTERM_forLoopBinder
    | NONTERM_forLoopRange
    | NONTERM_forLoopDirection
    | NONTERM_inlineAssemblyExpr
    | NONTERM_optCurriedArgExprs
    | NONTERM_opt_atomicExprAfterType
    | NONTERM_opt_inlineAssemblyTypeArg
    | NONTERM_optInlineAssemblyReturnTypes
    | NONTERM_recdExpr
    | NONTERM_recdExprCore
    | NONTERM_opt_seps_recd
    | NONTERM_seps_recd
    | NONTERM_pathOrUnderscore
    | NONTERM_recdExprBindings
    | NONTERM_recdBinding
    | NONTERM_objExpr
    | NONTERM_objExprBaseCall
    | NONTERM_opt_objExprBindings
    | NONTERM_objExprBindings
    | NONTERM_objExprInterfaces
    | NONTERM_opt_objExprInterfaces
    | NONTERM_objExprInterface
    | NONTERM_braceBarExpr
    | NONTERM_braceBarExprCore
    | NONTERM_anonLambdaExpr
    | NONTERM_anonMatchingExpr
    | NONTERM_typeWithTypeConstraints
    | NONTERM_topTypeWithTypeConstraints
    | NONTERM_opt_topReturnTypeWithTypeConstraints
    | NONTERM_topType
    | NONTERM_topTupleType
    | NONTERM_topTupleTypeElements
    | NONTERM_topAppType
    | NONTERM_typ
    | NONTERM_typEOF
    | NONTERM_tupleType
    | NONTERM_tupleOrQuotTypeElements
    | NONTERM_appTypeCon
    | NONTERM_appTypeConPower
    | NONTERM_appType
    | NONTERM_arrayTypeSuffix
    | NONTERM_appTypePrefixArguments
    | NONTERM_typeArgListElements
    | NONTERM_powerType
    | NONTERM_atomTypeNonAtomicDeprecated
    | NONTERM_atomTypeOrAnonRecdType
    | NONTERM_atomType
    | NONTERM_typeArgsNoHpaDeprecated
    | NONTERM_typeArgsActual
    | NONTERM_typeArgActual
    | NONTERM_typeArgActualOrDummyIfEmpty
    | NONTERM_dummyTypeArg
    | NONTERM_measureTypeArg
    | NONTERM_measureTypeAtom
    | NONTERM_measureTypePower
    | NONTERM_measureTypeSeq
    | NONTERM_measureTypeExpr
    | NONTERM_typar
    | NONTERM_staticallyKnownHeadTypar
    | NONTERM_ident
    | NONTERM_path
    | NONTERM_opName
    | NONTERM_operatorName
    | NONTERM_activePatternCaseName
    | NONTERM_activePatternCaseNames
    | NONTERM_identOrOp
    | NONTERM_pathOp
    | NONTERM_nameop
    | NONTERM_topSeparator
    | NONTERM_topSeparators
    | NONTERM_opt_topSeparators
    | NONTERM_seps
    | NONTERM_declEnd
    | NONTERM_opt_declEnd
    | NONTERM_opt_ODECLEND
    | NONTERM_deprecated_opt_equals
    | NONTERM_opt_OBLOCKSEP
    | NONTERM_opt_seps
    | NONTERM_opt_rec
    | NONTERM_opt_bar
    | NONTERM_opt_inline
    | NONTERM_opt_mutable
    | NONTERM_doToken
    | NONTERM_doneDeclEnd
    | NONTERM_structOrBegin
    | NONTERM_sigOrBegin
    | NONTERM_colonOrEquals
    | NONTERM_stringOrKeywordString
    | NONTERM_opt_HIGH_PRECEDENCE_APP
    | NONTERM_opt_HIGH_PRECEDENCE_TYAPP
    | NONTERM_typeKeyword
    | NONTERM_moduleKeyword
    | NONTERM_rbrace
    | NONTERM_bar_rbrace
    | NONTERM_rparen
    | NONTERM_oblockend
    | NONTERM_ends_other_than_rparen_coming_soon_or_recover
    | NONTERM_ends_coming_soon_or_recover

// This function maps tokens to integer indexes
let tagOfToken (t:token) = 
  match t with
  | HASH_IF _ -> 0 
  | HASH_ELSE _ -> 1 
  | HASH_ENDIF _ -> 2 
  | COMMENT _ -> 3 
  | WHITESPACE _ -> 4 
  | HASH_LINE _ -> 5 
  | HASH_LIGHT _ -> 6 
  | INACTIVECODE _ -> 7 
  | LINE_COMMENT _ -> 8 
  | STRING_TEXT _ -> 9 
  | EOF _ -> 10 
  | LEX_FAILURE _ -> 11 
  | ODUMMY _ -> 12 
  | FIXED  -> 13 
  | OINTERFACE_MEMBER  -> 14 
  | OBLOCKEND  -> 15 
  | OBLOCKEND_COMING_SOON  -> 16 
  | OBLOCKEND_IS_HERE  -> 17 
  | ORIGHT_BLOCK_END  -> 18 
  | ODECLEND  -> 19 
  | OEND  -> 20 
  | OBLOCKSEP  -> 21 
  | OBLOCKBEGIN  -> 22 
  | ORESET  -> 23 
  | OFUN  -> 24 
  | OFUNCTION  -> 25 
  | OWITH  -> 26 
  | OELSE  -> 27 
  | OTHEN  -> 28 
  | ODO_BANG  -> 29 
  | ODO  -> 30 
  | OAND_BANG _ -> 31 
  | OBINDER _ -> 32 
  | OLET _ -> 33 
  | HIGH_PRECEDENCE_TYAPP  -> 34 
  | HIGH_PRECEDENCE_PAREN_APP  -> 35 
  | HIGH_PRECEDENCE_BRACK_APP  -> 36 
  | TYPE_COMING_SOON  -> 37 
  | TYPE_IS_HERE  -> 38 
  | MODULE_COMING_SOON  -> 39 
  | MODULE_IS_HERE  -> 40 
  | EXTERN  -> 41 
  | VOID  -> 42 
  | PUBLIC  -> 43 
  | PRIVATE  -> 44 
  | INTERNAL  -> 45 
  | GLOBAL  -> 46 
  | STATIC  -> 47 
  | MEMBER  -> 48 
  | CLASS  -> 49 
  | ABSTRACT  -> 50 
  | OVERRIDE  -> 51 
  | DEFAULT  -> 52 
  | CONSTRUCTOR  -> 53 
  | INHERIT  -> 54 
  | GREATER_RBRACK  -> 55 
  | STRUCT  -> 56 
  | SIG  -> 57 
  | BAR  -> 58 
  | RBRACK  -> 59 
  | RBRACE  -> 60 
  | RBRACE_COMING_SOON  -> 61 
  | RBRACE_IS_HERE  -> 62 
  | MINUS  -> 63 
  | DOLLAR  -> 64 
  | BAR_RBRACK  -> 65 
  | BAR_RBRACE  -> 66 
  | UNDERSCORE  -> 67 
  | SEMICOLON_SEMICOLON  -> 68 
  | LARROW  -> 69 
  | EQUALS  -> 70 
  | LBRACK  -> 71 
  | LBRACK_BAR  -> 72 
  | LBRACE_BAR  -> 73 
  | LBRACK_LESS  -> 74 
  | LBRACE  -> 75 
  | QMARK  -> 76 
  | QMARK_QMARK  -> 77 
  | DOT  -> 78 
  | COLON  -> 79 
  | COLON_COLON  -> 80 
  | COLON_GREATER  -> 81 
  | COLON_QMARK_GREATER  -> 82 
  | COLON_QMARK  -> 83 
  | COLON_EQUALS  -> 84 
  | SEMICOLON  -> 85 
  | WHEN  -> 86 
  | WHILE  -> 87 
  | WITH  -> 88 
  | HASH  -> 89 
  | AMP  -> 90 
  | AMP_AMP  -> 91 
  | QUOTE  -> 92 
  | LPAREN  -> 93 
  | RPAREN  -> 94 
  | RPAREN_COMING_SOON  -> 95 
  | RPAREN_IS_HERE  -> 96 
  | STAR  -> 97 
  | COMMA  -> 98 
  | RARROW  -> 99 
  | GREATER_BAR_RBRACK  -> 100 
  | LPAREN_STAR_RPAREN  -> 101 
  | OPEN  -> 102 
  | OR  -> 103 
  | REC  -> 104 
  | THEN  -> 105 
  | TO  -> 106 
  | TRUE  -> 107 
  | TRY  -> 108 
  | TYPE  -> 109 
  | VAL  -> 110 
  | INLINE  -> 111 
  | INTERFACE  -> 112 
  | INSTANCE  -> 113 
  | CONST  -> 114 
  | LAZY  -> 115 
  | OLAZY  -> 116 
  | MATCH  -> 117 
  | MATCH_BANG  -> 118 
  | MUTABLE  -> 119 
  | NEW  -> 120 
  | OF  -> 121 
  | EXCEPTION  -> 122 
  | FALSE  -> 123 
  | FOR  -> 124 
  | FUN  -> 125 
  | FUNCTION  -> 126 
  | IF  -> 127 
  | IN  -> 128 
  | JOIN_IN  -> 129 
  | FINALLY  -> 130 
  | DO_BANG  -> 131 
  | AND  -> 132 
  | AS  -> 133 
  | ASSERT  -> 134 
  | OASSERT  -> 135 
  | ASR  -> 136 
  | BEGIN  -> 137 
  | DO  -> 138 
  | DONE  -> 139 
  | DOWNTO  -> 140 
  | ELSE  -> 141 
  | ELIF  -> 142 
  | END  -> 143 
  | DOT_DOT  -> 144 
  | DOT_DOT_HAT  -> 145 
  | BAR_BAR  -> 146 
  | UPCAST  -> 147 
  | DOWNCAST  -> 148 
  | NULL  -> 149 
  | RESERVED  -> 150 
  | MODULE  -> 151 
  | NAMESPACE  -> 152 
  | DELEGATE  -> 153 
  | CONSTRAINT  -> 154 
  | BASE  -> 155 
  | LQUOTE _ -> 156 
  | RQUOTE _ -> 157 
  | RQUOTE_DOT _ -> 158 
  | PERCENT_OP _ -> 159 
  | BINDER _ -> 160 
  | LESS _ -> 161 
  | GREATER _ -> 162 
  | LET _ -> 163 
  | YIELD _ -> 164 
  | YIELD_BANG _ -> 165 
  | AND_BANG _ -> 166 
  | BIGNUM _ -> 167 
  | DECIMAL _ -> 168 
  | CHAR _ -> 169 
  | IEEE64 _ -> 170 
  | IEEE32 _ -> 171 
  | NATIVEINT _ -> 172 
  | UNATIVEINT _ -> 173 
  | UINT64 _ -> 174 
  | UINT32 _ -> 175 
  | UINT16 _ -> 176 
  | UINT8 _ -> 177 
  | INT64 _ -> 178 
  | INT32 _ -> 179 
  | INT32_DOT_DOT _ -> 180 
  | INT16 _ -> 181 
  | INT8 _ -> 182 
  | FUNKY_OPERATOR_NAME _ -> 183 
  | ADJACENT_PREFIX_OP _ -> 184 
  | PLUS_MINUS_OP _ -> 185 
  | INFIX_AMP_OP _ -> 186 
  | INFIX_STAR_DIV_MOD_OP _ -> 187 
  | PREFIX_OP _ -> 188 
  | INFIX_BAR_OP _ -> 189 
  | INFIX_AT_HAT_OP _ -> 190 
  | INFIX_COMPARE_OP _ -> 191 
  | INFIX_STAR_STAR_OP _ -> 192 
  | IDENT _ -> 193 
  | KEYWORD_STRING _ -> 194 
  | STRING _ -> 195 
  | BYTEARRAY _ -> 196 

// This function maps integer indexes to symbolic token ids
let tokenTagToTokenId (tokenIdx:int) = 
  match tokenIdx with
  | 0 -> TOKEN_HASH_IF 
  | 1 -> TOKEN_HASH_ELSE 
  | 2 -> TOKEN_HASH_ENDIF 
  | 3 -> TOKEN_COMMENT 
  | 4 -> TOKEN_WHITESPACE 
  | 5 -> TOKEN_HASH_LINE 
  | 6 -> TOKEN_HASH_LIGHT 
  | 7 -> TOKEN_INACTIVECODE 
  | 8 -> TOKEN_LINE_COMMENT 
  | 9 -> TOKEN_STRING_TEXT 
  | 10 -> TOKEN_EOF 
  | 11 -> TOKEN_LEX_FAILURE 
  | 12 -> TOKEN_ODUMMY 
  | 13 -> TOKEN_FIXED 
  | 14 -> TOKEN_OINTERFACE_MEMBER 
  | 15 -> TOKEN_OBLOCKEND 
  | 16 -> TOKEN_OBLOCKEND_COMING_SOON 
  | 17 -> TOKEN_OBLOCKEND_IS_HERE 
  | 18 -> TOKEN_ORIGHT_BLOCK_END 
  | 19 -> TOKEN_ODECLEND 
  | 20 -> TOKEN_OEND 
  | 21 -> TOKEN_OBLOCKSEP 
  | 22 -> TOKEN_OBLOCKBEGIN 
  | 23 -> TOKEN_ORESET 
  | 24 -> TOKEN_OFUN 
  | 25 -> TOKEN_OFUNCTION 
  | 26 -> TOKEN_OWITH 
  | 27 -> TOKEN_OELSE 
  | 28 -> TOKEN_OTHEN 
  | 29 -> TOKEN_ODO_BANG 
  | 30 -> TOKEN_ODO 
  | 31 -> TOKEN_OAND_BANG 
  | 32 -> TOKEN_OBINDER 
  | 33 -> TOKEN_OLET 
  | 34 -> TOKEN_HIGH_PRECEDENCE_TYAPP 
  | 35 -> TOKEN_HIGH_PRECEDENCE_PAREN_APP 
  | 36 -> TOKEN_HIGH_PRECEDENCE_BRACK_APP 
  | 37 -> TOKEN_TYPE_COMING_SOON 
  | 38 -> TOKEN_TYPE_IS_HERE 
  | 39 -> TOKEN_MODULE_COMING_SOON 
  | 40 -> TOKEN_MODULE_IS_HERE 
  | 41 -> TOKEN_EXTERN 
  | 42 -> TOKEN_VOID 
  | 43 -> TOKEN_PUBLIC 
  | 44 -> TOKEN_PRIVATE 
  | 45 -> TOKEN_INTERNAL 
  | 46 -> TOKEN_GLOBAL 
  | 47 -> TOKEN_STATIC 
  | 48 -> TOKEN_MEMBER 
  | 49 -> TOKEN_CLASS 
  | 50 -> TOKEN_ABSTRACT 
  | 51 -> TOKEN_OVERRIDE 
  | 52 -> TOKEN_DEFAULT 
  | 53 -> TOKEN_CONSTRUCTOR 
  | 54 -> TOKEN_INHERIT 
  | 55 -> TOKEN_GREATER_RBRACK 
  | 56 -> TOKEN_STRUCT 
  | 57 -> TOKEN_SIG 
  | 58 -> TOKEN_BAR 
  | 59 -> TOKEN_RBRACK 
  | 60 -> TOKEN_RBRACE 
  | 61 -> TOKEN_RBRACE_COMING_SOON 
  | 62 -> TOKEN_RBRACE_IS_HERE 
  | 63 -> TOKEN_MINUS 
  | 64 -> TOKEN_DOLLAR 
  | 65 -> TOKEN_BAR_RBRACK 
  | 66 -> TOKEN_BAR_RBRACE 
  | 67 -> TOKEN_UNDERSCORE 
  | 68 -> TOKEN_SEMICOLON_SEMICOLON 
  | 69 -> TOKEN_LARROW 
  | 70 -> TOKEN_EQUALS 
  | 71 -> TOKEN_LBRACK 
  | 72 -> TOKEN_LBRACK_BAR 
  | 73 -> TOKEN_LBRACE_BAR 
  | 74 -> TOKEN_LBRACK_LESS 
  | 75 -> TOKEN_LBRACE 
  | 76 -> TOKEN_QMARK 
  | 77 -> TOKEN_QMARK_QMARK 
  | 78 -> TOKEN_DOT 
  | 79 -> TOKEN_COLON 
  | 80 -> TOKEN_COLON_COLON 
  | 81 -> TOKEN_COLON_GREATER 
  | 82 -> TOKEN_COLON_QMARK_GREATER 
  | 83 -> TOKEN_COLON_QMARK 
  | 84 -> TOKEN_COLON_EQUALS 
  | 85 -> TOKEN_SEMICOLON 
  | 86 -> TOKEN_WHEN 
  | 87 -> TOKEN_WHILE 
  | 88 -> TOKEN_WITH 
  | 89 -> TOKEN_HASH 
  | 90 -> TOKEN_AMP 
  | 91 -> TOKEN_AMP_AMP 
  | 92 -> TOKEN_QUOTE 
  | 93 -> TOKEN_LPAREN 
  | 94 -> TOKEN_RPAREN 
  | 95 -> TOKEN_RPAREN_COMING_SOON 
  | 96 -> TOKEN_RPAREN_IS_HERE 
  | 97 -> TOKEN_STAR 
  | 98 -> TOKEN_COMMA 
  | 99 -> TOKEN_RARROW 
  | 100 -> TOKEN_GREATER_BAR_RBRACK 
  | 101 -> TOKEN_LPAREN_STAR_RPAREN 
  | 102 -> TOKEN_OPEN 
  | 103 -> TOKEN_OR 
  | 104 -> TOKEN_REC 
  | 105 -> TOKEN_THEN 
  | 106 -> TOKEN_TO 
  | 107 -> TOKEN_TRUE 
  | 108 -> TOKEN_TRY 
  | 109 -> TOKEN_TYPE 
  | 110 -> TOKEN_VAL 
  | 111 -> TOKEN_INLINE 
  | 112 -> TOKEN_INTERFACE 
  | 113 -> TOKEN_INSTANCE 
  | 114 -> TOKEN_CONST 
  | 115 -> TOKEN_LAZY 
  | 116 -> TOKEN_OLAZY 
  | 117 -> TOKEN_MATCH 
  | 118 -> TOKEN_MATCH_BANG 
  | 119 -> TOKEN_MUTABLE 
  | 120 -> TOKEN_NEW 
  | 121 -> TOKEN_OF 
  | 122 -> TOKEN_EXCEPTION 
  | 123 -> TOKEN_FALSE 
  | 124 -> TOKEN_FOR 
  | 125 -> TOKEN_FUN 
  | 126 -> TOKEN_FUNCTION 
  | 127 -> TOKEN_IF 
  | 128 -> TOKEN_IN 
  | 129 -> TOKEN_JOIN_IN 
  | 130 -> TOKEN_FINALLY 
  | 131 -> TOKEN_DO_BANG 
  | 132 -> TOKEN_AND 
  | 133 -> TOKEN_AS 
  | 134 -> TOKEN_ASSERT 
  | 135 -> TOKEN_OASSERT 
  | 136 -> TOKEN_ASR 
  | 137 -> TOKEN_BEGIN 
  | 138 -> TOKEN_DO 
  | 139 -> TOKEN_DONE 
  | 140 -> TOKEN_DOWNTO 
  | 141 -> TOKEN_ELSE 
  | 142 -> TOKEN_ELIF 
  | 143 -> TOKEN_END 
  | 144 -> TOKEN_DOT_DOT 
  | 145 -> TOKEN_DOT_DOT_HAT 
  | 146 -> TOKEN_BAR_BAR 
  | 147 -> TOKEN_UPCAST 
  | 148 -> TOKEN_DOWNCAST 
  | 149 -> TOKEN_NULL 
  | 150 -> TOKEN_RESERVED 
  | 151 -> TOKEN_MODULE 
  | 152 -> TOKEN_NAMESPACE 
  | 153 -> TOKEN_DELEGATE 
  | 154 -> TOKEN_CONSTRAINT 
  | 155 -> TOKEN_BASE 
  | 156 -> TOKEN_LQUOTE 
  | 157 -> TOKEN_RQUOTE 
  | 158 -> TOKEN_RQUOTE_DOT 
  | 159 -> TOKEN_PERCENT_OP 
  | 160 -> TOKEN_BINDER 
  | 161 -> TOKEN_LESS 
  | 162 -> TOKEN_GREATER 
  | 163 -> TOKEN_LET 
  | 164 -> TOKEN_YIELD 
  | 165 -> TOKEN_YIELD_BANG 
  | 166 -> TOKEN_AND_BANG 
  | 167 -> TOKEN_BIGNUM 
  | 168 -> TOKEN_DECIMAL 
  | 169 -> TOKEN_CHAR 
  | 170 -> TOKEN_IEEE64 
  | 171 -> TOKEN_IEEE32 
  | 172 -> TOKEN_NATIVEINT 
  | 173 -> TOKEN_UNATIVEINT 
  | 174 -> TOKEN_UINT64 
  | 175 -> TOKEN_UINT32 
  | 176 -> TOKEN_UINT16 
  | 177 -> TOKEN_UINT8 
  | 178 -> TOKEN_INT64 
  | 179 -> TOKEN_INT32 
  | 180 -> TOKEN_INT32_DOT_DOT 
  | 181 -> TOKEN_INT16 
  | 182 -> TOKEN_INT8 
  | 183 -> TOKEN_FUNKY_OPERATOR_NAME 
  | 184 -> TOKEN_ADJACENT_PREFIX_OP 
  | 185 -> TOKEN_PLUS_MINUS_OP 
  | 186 -> TOKEN_INFIX_AMP_OP 
  | 187 -> TOKEN_INFIX_STAR_DIV_MOD_OP 
  | 188 -> TOKEN_PREFIX_OP 
  | 189 -> TOKEN_INFIX_BAR_OP 
  | 190 -> TOKEN_INFIX_AT_HAT_OP 
  | 191 -> TOKEN_INFIX_COMPARE_OP 
  | 192 -> TOKEN_INFIX_STAR_STAR_OP 
  | 193 -> TOKEN_IDENT 
  | 194 -> TOKEN_KEYWORD_STRING 
  | 195 -> TOKEN_STRING 
  | 196 -> TOKEN_BYTEARRAY 
  | 199 -> TOKEN_end_of_input
  | 197 -> TOKEN_error
  | _ -> failwith "tokenTagToTokenId: bad token"

/// This function maps production indexes returned in syntax errors to strings representing the non terminal that would be produced by that production
let prodIdxToNonTerminal (prodIdx:int) = 
  match prodIdx with
    | 0 -> NONTERM__startsignatureFile 
    | 1 -> NONTERM__startimplementationFile 
    | 2 -> NONTERM__startinteraction 
    | 3 -> NONTERM__starttypedSeqExprEOF 
    | 4 -> NONTERM__starttypEOF 
    | 5 -> NONTERM_interaction 
    | 6 -> NONTERM_interaction 
    | 7 -> NONTERM_interaction 
    | 8 -> NONTERM_interactiveTerminator 
    | 9 -> NONTERM_interactiveTerminator 
    | 10 -> NONTERM_interactiveItemsTerminator 
    | 11 -> NONTERM_interactiveItemsTerminator 
    | 12 -> NONTERM_interactiveItemsTerminator 
    | 13 -> NONTERM_interactiveItemsTerminator 
    | 14 -> NONTERM_interactiveItemsTerminator 
    | 15 -> NONTERM_interactiveItemsTerminator 
    | 16 -> NONTERM_interactiveItemsTerminator 
    | 17 -> NONTERM_interactiveDefns 
    | 18 -> NONTERM_interactiveDefns 
    | 19 -> NONTERM_interactiveExpr 
    | 20 -> NONTERM_interactiveHash 
    | 21 -> NONTERM_interactiveSeparators 
    | 22 -> NONTERM_interactiveSeparators 
    | 23 -> NONTERM_interactiveSeparator 
    | 24 -> NONTERM_interactiveSeparator 
    | 25 -> NONTERM_hashDirective 
    | 26 -> NONTERM_hashDirectiveArgs 
    | 27 -> NONTERM_hashDirectiveArgs 
    | 28 -> NONTERM_hashDirectiveArg 
    | 29 -> NONTERM_signatureFile 
    | 30 -> NONTERM_signatureFile 
    | 31 -> NONTERM_signatureFile 
    | 32 -> NONTERM_moduleIntro 
    | 33 -> NONTERM_namespaceIntro 
    | 34 -> NONTERM_fileNamespaceSpecs 
    | 35 -> NONTERM_fileNamespaceSpecs 
    | 36 -> NONTERM_fileNamespaceSpecList 
    | 37 -> NONTERM_fileNamespaceSpecList 
    | 38 -> NONTERM_fileNamespaceSpec 
    | 39 -> NONTERM_fileModuleSpec 
    | 40 -> NONTERM_fileModuleSpec 
    | 41 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 42 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 43 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 44 -> NONTERM_moduleSpfnsPossiblyEmptyBlock 
    | 45 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 46 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 47 -> NONTERM_moduleSpfnsPossiblyEmpty 
    | 48 -> NONTERM_moduleSpfns 
    | 49 -> NONTERM_moduleSpfns 
    | 50 -> NONTERM_moduleSpfns 
    | 51 -> NONTERM_moduleSpfn 
    | 52 -> NONTERM_moduleSpfn 
    | 53 -> NONTERM_moduleSpfn 
    | 54 -> NONTERM_moduleSpfn 
    | 55 -> NONTERM_moduleSpfn 
    | 56 -> NONTERM_moduleSpfn 
    | 57 -> NONTERM_moduleSpfn 
    | 58 -> NONTERM_valSpfn 
    | 59 -> NONTERM_optLiteralValueSpfn 
    | 60 -> NONTERM_optLiteralValueSpfn 
    | 61 -> NONTERM_optLiteralValueSpfn 
    | 62 -> NONTERM_moduleSpecBlock 
    | 63 -> NONTERM_moduleSpecBlock 
    | 64 -> NONTERM_moduleSpecBlock 
    | 65 -> NONTERM_tyconSpfns 
    | 66 -> NONTERM_tyconSpfnList 
    | 67 -> NONTERM_tyconSpfnList 
    | 68 -> NONTERM_tyconSpfn 
    | 69 -> NONTERM_tyconSpfn 
    | 70 -> NONTERM_tyconSpfnRhsBlock 
    | 71 -> NONTERM_tyconSpfnRhsBlock 
    | 72 -> NONTERM_tyconSpfnRhs 
    | 73 -> NONTERM_tyconSpfnRhs 
    | 74 -> NONTERM_tyconSpfnRhs 
    | 75 -> NONTERM_tyconClassSpfn 
    | 76 -> NONTERM_tyconClassSpfn 
    | 77 -> NONTERM_tyconClassSpfn 
    | 78 -> NONTERM_tyconClassSpfn 
    | 79 -> NONTERM_classSpfnBlockKindUnspecified 
    | 80 -> NONTERM_classSpfnBlockKindUnspecified 
    | 81 -> NONTERM_classSpfnBlockKindUnspecified 
    | 82 -> NONTERM_classSpfnBlockKindUnspecified 
    | 83 -> NONTERM_classSpfnBlock 
    | 84 -> NONTERM_classSpfnBlock 
    | 85 -> NONTERM_classSpfnBlock 
    | 86 -> NONTERM_classSpfnMembers 
    | 87 -> NONTERM_classSpfnMembers 
    | 88 -> NONTERM_classSpfnMembersAtLeastOne 
    | 89 -> NONTERM_classMemberSpfn 
    | 90 -> NONTERM_classMemberSpfn 
    | 91 -> NONTERM_classMemberSpfn 
    | 92 -> NONTERM_classMemberSpfn 
    | 93 -> NONTERM_classMemberSpfn 
    | 94 -> NONTERM_classMemberSpfn 
    | 95 -> NONTERM_classMemberSpfn 
    | 96 -> NONTERM_classMemberSpfnGetSet 
    | 97 -> NONTERM_classMemberSpfnGetSet 
    | 98 -> NONTERM_classMemberSpfnGetSet 
    | 99 -> NONTERM_classMemberSpfnGetSet 
    | 100 -> NONTERM_classMemberSpfnGetSetElements 
    | 101 -> NONTERM_classMemberSpfnGetSetElements 
    | 102 -> NONTERM_memberSpecFlags 
    | 103 -> NONTERM_memberSpecFlags 
    | 104 -> NONTERM_memberSpecFlags 
    | 105 -> NONTERM_exconSpfn 
    | 106 -> NONTERM_opt_classSpfn 
    | 107 -> NONTERM_opt_classSpfn 
    | 108 -> NONTERM_implementationFile 
    | 109 -> NONTERM_implementationFile 
    | 110 -> NONTERM_implementationFile 
    | 111 -> NONTERM_fileNamespaceImpls 
    | 112 -> NONTERM_fileNamespaceImpls 
    | 113 -> NONTERM_fileNamespaceImplList 
    | 114 -> NONTERM_fileNamespaceImplList 
    | 115 -> NONTERM_fileNamespaceImpl 
    | 116 -> NONTERM_fileModuleImpl 
    | 117 -> NONTERM_fileModuleImpl 
    | 118 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 119 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 120 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 121 -> NONTERM_moduleDefnsOrExprPossiblyEmptyOrBlock 
    | 122 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 123 -> NONTERM_moduleDefnsOrExprPossiblyEmpty 
    | 124 -> NONTERM_moduleDefnsOrExpr 
    | 125 -> NONTERM_moduleDefnsOrExpr 
    | 126 -> NONTERM_moduleDefnsOrExpr 
    | 127 -> NONTERM_moduleDefnsOrExpr 
    | 128 -> NONTERM_moduleDefnsOrExpr 
    | 129 -> NONTERM_moduleDefns 
    | 130 -> NONTERM_moduleDefns 
    | 131 -> NONTERM_moduleDefns 
    | 132 -> NONTERM_moduleDefns 
    | 133 -> NONTERM_moduleDefns 
    | 134 -> NONTERM_moduleDefnOrDirective 
    | 135 -> NONTERM_moduleDefnOrDirective 
    | 136 -> NONTERM_moduleDefn 
    | 137 -> NONTERM_moduleDefn 
    | 138 -> NONTERM_moduleDefn 
    | 139 -> NONTERM_moduleDefn 
    | 140 -> NONTERM_moduleDefn 
    | 141 -> NONTERM_moduleDefn 
    | 142 -> NONTERM_moduleDefn 
    | 143 -> NONTERM_moduleDefn 
    | 144 -> NONTERM_namedModuleAbbrevBlock 
    | 145 -> NONTERM_namedModuleAbbrevBlock 
    | 146 -> NONTERM_namedModuleDefnBlock 
    | 147 -> NONTERM_namedModuleDefnBlock 
    | 148 -> NONTERM_namedModuleDefnBlock 
    | 149 -> NONTERM_namedModuleDefnBlock 
    | 150 -> NONTERM_namedModuleDefnBlock 
    | 151 -> NONTERM_namedModuleDefnBlock 
    | 152 -> NONTERM_namedModuleDefnBlock 
    | 153 -> NONTERM_wrappedNamedModuleDefn 
    | 154 -> NONTERM_wrappedNamedModuleDefn 
    | 155 -> NONTERM_wrappedNamedModuleDefn 
    | 156 -> NONTERM_tyconDefnAugmentation 
    | 157 -> NONTERM_opt_attributes 
    | 158 -> NONTERM_opt_attributes 
    | 159 -> NONTERM_attributes 
    | 160 -> NONTERM_attributes 
    | 161 -> NONTERM_attributeList 
    | 162 -> NONTERM_attributeList 
    | 163 -> NONTERM_attributeList 
    | 164 -> NONTERM_attributeList 
    | 165 -> NONTERM_attributeListElements 
    | 166 -> NONTERM_attributeListElements 
    | 167 -> NONTERM_attribute 
    | 168 -> NONTERM_attribute 
    | 169 -> NONTERM_attribute 
    | 170 -> NONTERM_attributeTarget 
    | 171 -> NONTERM_attributeTarget 
    | 172 -> NONTERM_attributeTarget 
    | 173 -> NONTERM_attributeTarget 
    | 174 -> NONTERM_memberFlags 
    | 175 -> NONTERM_memberFlags 
    | 176 -> NONTERM_memberFlags 
    | 177 -> NONTERM_memberFlags 
    | 178 -> NONTERM_typeNameInfo 
    | 179 -> NONTERM_tyconDefnList 
    | 180 -> NONTERM_tyconDefnList 
    | 181 -> NONTERM_tyconDefn 
    | 182 -> NONTERM_tyconDefn 
    | 183 -> NONTERM_tyconDefn 
    | 184 -> NONTERM_tyconDefn 
    | 185 -> NONTERM_tyconDefnRhsBlock 
    | 186 -> NONTERM_tyconDefnRhsBlock 
    | 187 -> NONTERM_tyconDefnRhsBlock 
    | 188 -> NONTERM_tyconDefnRhs 
    | 189 -> NONTERM_tyconDefnRhs 
    | 190 -> NONTERM_tyconDefnRhs 
    | 191 -> NONTERM_tyconClassDefn 
    | 192 -> NONTERM_tyconClassDefn 
    | 193 -> NONTERM_tyconClassDefn 
    | 194 -> NONTERM_tyconClassDefn 
    | 195 -> NONTERM_classDefnBlockKindUnspecified 
    | 196 -> NONTERM_classDefnBlockKindUnspecified 
    | 197 -> NONTERM_classDefnBlock 
    | 198 -> NONTERM_classDefnBlock 
    | 199 -> NONTERM_classDefnBlock 
    | 200 -> NONTERM_classDefnMembers 
    | 201 -> NONTERM_classDefnMembers 
    | 202 -> NONTERM_classDefnMembers 
    | 203 -> NONTERM_classDefnMembersAtLeastOne 
    | 204 -> NONTERM_classDefnMemberGetSet 
    | 205 -> NONTERM_classDefnMemberGetSet 
    | 206 -> NONTERM_classDefnMemberGetSet 
    | 207 -> NONTERM_classDefnMemberGetSetElements 
    | 208 -> NONTERM_classDefnMemberGetSetElements 
    | 209 -> NONTERM_classDefnMemberGetSetElement 
    | 210 -> NONTERM_memberCore 
    | 211 -> NONTERM_memberCore 
    | 212 -> NONTERM_abstractMemberFlags 
    | 213 -> NONTERM_abstractMemberFlags 
    | 214 -> NONTERM_classDefnMember 
    | 215 -> NONTERM_classDefnMember 
    | 216 -> NONTERM_classDefnMember 
    | 217 -> NONTERM_classDefnMember 
    | 218 -> NONTERM_classDefnMember 
    | 219 -> NONTERM_classDefnMember 
    | 220 -> NONTERM_classDefnMember 
    | 221 -> NONTERM_classDefnMember 
    | 222 -> NONTERM_classDefnMember 
    | 223 -> NONTERM_classDefnMember 
    | 224 -> NONTERM_classDefnMember 
    | 225 -> NONTERM_valDefnDecl 
    | 226 -> NONTERM_autoPropsDefnDecl 
    | 227 -> NONTERM_opt_typ 
    | 228 -> NONTERM_opt_typ 
    | 229 -> NONTERM_atomicPatternLongIdent 
    | 230 -> NONTERM_atomicPatternLongIdent 
    | 231 -> NONTERM_atomicPatternLongIdent 
    | 232 -> NONTERM_atomicPatternLongIdent 
    | 233 -> NONTERM_atomicPatternLongIdent 
    | 234 -> NONTERM_opt_access 
    | 235 -> NONTERM_opt_access 
    | 236 -> NONTERM_access 
    | 237 -> NONTERM_access 
    | 238 -> NONTERM_access 
    | 239 -> NONTERM_opt_declVisibility 
    | 240 -> NONTERM_opt_declVisibility 
    | 241 -> NONTERM_opt_interfaceImplDefn 
    | 242 -> NONTERM_opt_interfaceImplDefn 
    | 243 -> NONTERM_opt_classDefn 
    | 244 -> NONTERM_opt_classDefn 
    | 245 -> NONTERM_inheritsDefn 
    | 246 -> NONTERM_inheritsDefn 
    | 247 -> NONTERM_inheritsDefn 
    | 248 -> NONTERM_optAsSpec 
    | 249 -> NONTERM_optAsSpec 
    | 250 -> NONTERM_asSpec 
    | 251 -> NONTERM_optBaseSpec 
    | 252 -> NONTERM_optBaseSpec 
    | 253 -> NONTERM_baseSpec 
    | 254 -> NONTERM_baseSpec 
    | 255 -> NONTERM_objectImplementationBlock 
    | 256 -> NONTERM_objectImplementationBlock 
    | 257 -> NONTERM_objectImplementationBlock 
    | 258 -> NONTERM_objectImplementationMembers 
    | 259 -> NONTERM_objectImplementationMembers 
    | 260 -> NONTERM_objectImplementationMember 
    | 261 -> NONTERM_objectImplementationMember 
    | 262 -> NONTERM_objectImplementationMember 
    | 263 -> NONTERM_objectImplementationMember 
    | 264 -> NONTERM_memberOrOverride 
    | 265 -> NONTERM_memberOrOverride 
    | 266 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 267 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 268 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 269 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 270 -> NONTERM_tyconDefnOrSpfnSimpleRepr 
    | 271 -> NONTERM_braceFieldDeclList 
    | 272 -> NONTERM_braceFieldDeclList 
    | 273 -> NONTERM_braceFieldDeclList 
    | 274 -> NONTERM_anonRecdType 
    | 275 -> NONTERM_anonRecdType 
    | 276 -> NONTERM_braceBarFieldDeclListCore 
    | 277 -> NONTERM_braceBarFieldDeclListCore 
    | 278 -> NONTERM_braceBarFieldDeclListCore 
    | 279 -> NONTERM_inlineAssemblyTyconRepr 
    | 280 -> NONTERM_classOrInterfaceOrStruct 
    | 281 -> NONTERM_classOrInterfaceOrStruct 
    | 282 -> NONTERM_classOrInterfaceOrStruct 
    | 283 -> NONTERM_interfaceMember 
    | 284 -> NONTERM_interfaceMember 
    | 285 -> NONTERM_tyconNameAndTyparDecls 
    | 286 -> NONTERM_tyconNameAndTyparDecls 
    | 287 -> NONTERM_tyconNameAndTyparDecls 
    | 288 -> NONTERM_prefixTyparDecls 
    | 289 -> NONTERM_prefixTyparDecls 
    | 290 -> NONTERM_typarDeclList 
    | 291 -> NONTERM_typarDeclList 
    | 292 -> NONTERM_typarDecl 
    | 293 -> NONTERM_postfixTyparDecls 
    | 294 -> NONTERM_explicitValTyparDeclsCore 
    | 295 -> NONTERM_explicitValTyparDeclsCore 
    | 296 -> NONTERM_explicitValTyparDeclsCore 
    | 297 -> NONTERM_explicitValTyparDecls 
    | 298 -> NONTERM_opt_explicitValTyparDecls 
    | 299 -> NONTERM_opt_explicitValTyparDecls 
    | 300 -> NONTERM_opt_explicitValTyparDecls2 
    | 301 -> NONTERM_opt_explicitValTyparDecls2 
    | 302 -> NONTERM_opt_typeConstraints 
    | 303 -> NONTERM_opt_typeConstraints 
    | 304 -> NONTERM_typeConstraints 
    | 305 -> NONTERM_typeConstraints 
    | 306 -> NONTERM_typeConstraint 
    | 307 -> NONTERM_typeConstraint 
    | 308 -> NONTERM_typeConstraint 
    | 309 -> NONTERM_typeConstraint 
    | 310 -> NONTERM_typeConstraint 
    | 311 -> NONTERM_typeConstraint 
    | 312 -> NONTERM_typeConstraint 
    | 313 -> NONTERM_typeConstraint 
    | 314 -> NONTERM_typeConstraint 
    | 315 -> NONTERM_typeConstraint 
    | 316 -> NONTERM_typarAlts 
    | 317 -> NONTERM_typarAlts 
    | 318 -> NONTERM_unionTypeRepr 
    | 319 -> NONTERM_unionTypeRepr 
    | 320 -> NONTERM_unionTypeRepr 
    | 321 -> NONTERM_barAndgrabXmlDoc 
    | 322 -> NONTERM_attrUnionCaseDecls 
    | 323 -> NONTERM_attrUnionCaseDecls 
    | 324 -> NONTERM_attrUnionCaseDecl 
    | 325 -> NONTERM_attrUnionCaseDecl 
    | 326 -> NONTERM_attrUnionCaseDecl 
    | 327 -> NONTERM_attrUnionCaseDecl 
    | 328 -> NONTERM_unionCaseName 
    | 329 -> NONTERM_unionCaseName 
    | 330 -> NONTERM_unionCaseName 
    | 331 -> NONTERM_firstUnionCaseDeclOfMany 
    | 332 -> NONTERM_firstUnionCaseDeclOfMany 
    | 333 -> NONTERM_firstUnionCaseDeclOfMany 
    | 334 -> NONTERM_firstUnionCaseDecl 
    | 335 -> NONTERM_firstUnionCaseDecl 
    | 336 -> NONTERM_unionCaseReprElements 
    | 337 -> NONTERM_unionCaseReprElements 
    | 338 -> NONTERM_unionCaseReprElement 
    | 339 -> NONTERM_unionCaseReprElement 
    | 340 -> NONTERM_unionCaseRepr 
    | 341 -> NONTERM_unionCaseRepr 
    | 342 -> NONTERM_recdFieldDeclList 
    | 343 -> NONTERM_recdFieldDeclList 
    | 344 -> NONTERM_recdFieldDecl 
    | 345 -> NONTERM_fieldDecl 
    | 346 -> NONTERM_exconDefn 
    | 347 -> NONTERM_exceptionAndGrabDoc 
    | 348 -> NONTERM_exconCore 
    | 349 -> NONTERM_exconIntro 
    | 350 -> NONTERM_exconIntro 
    | 351 -> NONTERM_exconRepr 
    | 352 -> NONTERM_exconRepr 
    | 353 -> NONTERM_openDecl 
    | 354 -> NONTERM_defnBindings 
    | 355 -> NONTERM_defnBindings 
    | 356 -> NONTERM_doBinding 
    | 357 -> NONTERM_hardwhiteLetBindings 
    | 358 -> NONTERM_hardwhiteDoBinding 
    | 359 -> NONTERM_classDefnBindings 
    | 360 -> NONTERM_classDefnBindings 
    | 361 -> NONTERM_classDefnBindings 
    | 362 -> NONTERM_classDefnBindings 
    | 363 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 364 -> NONTERM_hardwhiteDefnBindingsTerminator 
    | 365 -> NONTERM_cPrototype 
    | 366 -> NONTERM_cArgs 
    | 367 -> NONTERM_cArgs 
    | 368 -> NONTERM_cArgs 
    | 369 -> NONTERM_cMoreArgs 
    | 370 -> NONTERM_cMoreArgs 
    | 371 -> NONTERM_cArg 
    | 372 -> NONTERM_cArg 
    | 373 -> NONTERM_cType 
    | 374 -> NONTERM_cType 
    | 375 -> NONTERM_cType 
    | 376 -> NONTERM_cType 
    | 377 -> NONTERM_cType 
    | 378 -> NONTERM_cRetType 
    | 379 -> NONTERM_cRetType 
    | 380 -> NONTERM_localBindings 
    | 381 -> NONTERM_moreLocalBindings 
    | 382 -> NONTERM_moreLocalBindings 
    | 383 -> NONTERM_attr_localBinding 
    | 384 -> NONTERM_attr_localBinding 
    | 385 -> NONTERM_localBinding 
    | 386 -> NONTERM_localBinding 
    | 387 -> NONTERM_localBinding 
    | 388 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 389 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 390 -> NONTERM_typedExprWithStaticOptimizationsBlock 
    | 391 -> NONTERM_typedExprWithStaticOptimizations 
    | 392 -> NONTERM_opt_staticOptimizations 
    | 393 -> NONTERM_opt_staticOptimizations 
    | 394 -> NONTERM_staticOptimization 
    | 395 -> NONTERM_staticOptimizationConditions 
    | 396 -> NONTERM_staticOptimizationConditions 
    | 397 -> NONTERM_staticOptimizationCondition 
    | 398 -> NONTERM_staticOptimizationCondition 
    | 399 -> NONTERM_rawConstant 
    | 400 -> NONTERM_rawConstant 
    | 401 -> NONTERM_rawConstant 
    | 402 -> NONTERM_rawConstant 
    | 403 -> NONTERM_rawConstant 
    | 404 -> NONTERM_rawConstant 
    | 405 -> NONTERM_rawConstant 
    | 406 -> NONTERM_rawConstant 
    | 407 -> NONTERM_rawConstant 
    | 408 -> NONTERM_rawConstant 
    | 409 -> NONTERM_rawConstant 
    | 410 -> NONTERM_rawConstant 
    | 411 -> NONTERM_rawConstant 
    | 412 -> NONTERM_rawConstant 
    | 413 -> NONTERM_rawConstant 
    | 414 -> NONTERM_rawConstant 
    | 415 -> NONTERM_rawConstant 
    | 416 -> NONTERM_rationalConstant 
    | 417 -> NONTERM_rationalConstant 
    | 418 -> NONTERM_rationalConstant 
    | 419 -> NONTERM_rationalConstant 
    | 420 -> NONTERM_atomicUnsignedRationalConstant 
    | 421 -> NONTERM_atomicUnsignedRationalConstant 
    | 422 -> NONTERM_atomicRationalConstant 
    | 423 -> NONTERM_atomicRationalConstant 
    | 424 -> NONTERM_constant 
    | 425 -> NONTERM_constant 
    | 426 -> NONTERM_bindingPattern 
    | 427 -> NONTERM_simplePattern 
    | 428 -> NONTERM_simplePattern 
    | 429 -> NONTERM_simplePattern 
    | 430 -> NONTERM_simplePattern 
    | 431 -> NONTERM_simplePatternCommaList 
    | 432 -> NONTERM_simplePatternCommaList 
    | 433 -> NONTERM_simplePatterns 
    | 434 -> NONTERM_simplePatterns 
    | 435 -> NONTERM_simplePatterns 
    | 436 -> NONTERM_simplePatterns 
    | 437 -> NONTERM_simplePatterns 
    | 438 -> NONTERM_headBindingPattern 
    | 439 -> NONTERM_headBindingPattern 
    | 440 -> NONTERM_headBindingPattern 
    | 441 -> NONTERM_headBindingPattern 
    | 442 -> NONTERM_headBindingPattern 
    | 443 -> NONTERM_headBindingPattern 
    | 444 -> NONTERM_tuplePatternElements 
    | 445 -> NONTERM_tuplePatternElements 
    | 446 -> NONTERM_conjPatternElements 
    | 447 -> NONTERM_conjPatternElements 
    | 448 -> NONTERM_namePatPairs 
    | 449 -> NONTERM_namePatPairs 
    | 450 -> NONTERM_namePatPair 
    | 451 -> NONTERM_constrPattern 
    | 452 -> NONTERM_constrPattern 
    | 453 -> NONTERM_constrPattern 
    | 454 -> NONTERM_constrPattern 
    | 455 -> NONTERM_constrPattern 
    | 456 -> NONTERM_constrPattern 
    | 457 -> NONTERM_atomicPatsOrNamePatPairs 
    | 458 -> NONTERM_atomicPatsOrNamePatPairs 
    | 459 -> NONTERM_atomicPatterns 
    | 460 -> NONTERM_atomicPatterns 
    | 461 -> NONTERM_atomicPatterns 
    | 462 -> NONTERM_atomicPatterns 
    | 463 -> NONTERM_atomicPattern 
    | 464 -> NONTERM_atomicPattern 
    | 465 -> NONTERM_atomicPattern 
    | 466 -> NONTERM_atomicPattern 
    | 467 -> NONTERM_atomicPattern 
    | 468 -> NONTERM_atomicPattern 
    | 469 -> NONTERM_atomicPattern 
    | 470 -> NONTERM_atomicPattern 
    | 471 -> NONTERM_atomicPattern 
    | 472 -> NONTERM_atomicPattern 
    | 473 -> NONTERM_atomicPattern 
    | 474 -> NONTERM_atomicPattern 
    | 475 -> NONTERM_atomicPattern 
    | 476 -> NONTERM_atomicPattern 
    | 477 -> NONTERM_atomicPattern 
    | 478 -> NONTERM_atomicPattern 
    | 479 -> NONTERM_atomicPattern 
    | 480 -> NONTERM_atomicPattern 
    | 481 -> NONTERM_atomicPattern 
    | 482 -> NONTERM_atomicPattern 
    | 483 -> NONTERM_parenPatternBody 
    | 484 -> NONTERM_parenPatternBody 
    | 485 -> NONTERM_parenPattern 
    | 486 -> NONTERM_parenPattern 
    | 487 -> NONTERM_parenPattern 
    | 488 -> NONTERM_parenPattern 
    | 489 -> NONTERM_parenPattern 
    | 490 -> NONTERM_parenPattern 
    | 491 -> NONTERM_parenPattern 
    | 492 -> NONTERM_parenPattern 
    | 493 -> NONTERM_tupleParenPatternElements 
    | 494 -> NONTERM_tupleParenPatternElements 
    | 495 -> NONTERM_conjParenPatternElements 
    | 496 -> NONTERM_conjParenPatternElements 
    | 497 -> NONTERM_recordPatternElementsAux 
    | 498 -> NONTERM_recordPatternElementsAux 
    | 499 -> NONTERM_recordPatternElement 
    | 500 -> NONTERM_listPatternElements 
    | 501 -> NONTERM_listPatternElements 
    | 502 -> NONTERM_listPatternElements 
    | 503 -> NONTERM_typedSeqExprBlock 
    | 504 -> NONTERM_typedSeqExprBlock 
    | 505 -> NONTERM_typedSeqExprBlock 
    | 506 -> NONTERM_declExprBlock 
    | 507 -> NONTERM_declExprBlock 
    | 508 -> NONTERM_typedSeqExprBlockR 
    | 509 -> NONTERM_typedSeqExprBlockR 
    | 510 -> NONTERM_typedSeqExpr 
    | 511 -> NONTERM_typedSeqExpr 
    | 512 -> NONTERM_typedSeqExprEOF 
    | 513 -> NONTERM_seqExpr 
    | 514 -> NONTERM_seqExpr 
    | 515 -> NONTERM_seqExpr 
    | 516 -> NONTERM_seqExpr 
    | 517 -> NONTERM_seqExpr 
    | 518 -> NONTERM_seqExpr 
    | 519 -> NONTERM_recover 
    | 520 -> NONTERM_recover 
    | 521 -> NONTERM_moreBinders 
    | 522 -> NONTERM_moreBinders 
    | 523 -> NONTERM_moreBinders 
    | 524 -> NONTERM_declExpr 
    | 525 -> NONTERM_declExpr 
    | 526 -> NONTERM_declExpr 
    | 527 -> NONTERM_declExpr 
    | 528 -> NONTERM_declExpr 
    | 529 -> NONTERM_declExpr 
    | 530 -> NONTERM_declExpr 
    | 531 -> NONTERM_declExpr 
    | 532 -> NONTERM_declExpr 
    | 533 -> NONTERM_declExpr 
    | 534 -> NONTERM_declExpr 
    | 535 -> NONTERM_declExpr 
    | 536 -> NONTERM_declExpr 
    | 537 -> NONTERM_declExpr 
    | 538 -> NONTERM_declExpr 
    | 539 -> NONTERM_declExpr 
    | 540 -> NONTERM_declExpr 
    | 541 -> NONTERM_declExpr 
    | 542 -> NONTERM_declExpr 
    | 543 -> NONTERM_declExpr 
    | 544 -> NONTERM_declExpr 
    | 545 -> NONTERM_declExpr 
    | 546 -> NONTERM_declExpr 
    | 547 -> NONTERM_declExpr 
    | 548 -> NONTERM_declExpr 
    | 549 -> NONTERM_declExpr 
    | 550 -> NONTERM_declExpr 
    | 551 -> NONTERM_declExpr 
    | 552 -> NONTERM_declExpr 
    | 553 -> NONTERM_declExpr 
    | 554 -> NONTERM_declExpr 
    | 555 -> NONTERM_declExpr 
    | 556 -> NONTERM_declExpr 
    | 557 -> NONTERM_declExpr 
    | 558 -> NONTERM_declExpr 
    | 559 -> NONTERM_declExpr 
    | 560 -> NONTERM_declExpr 
    | 561 -> NONTERM_declExpr 
    | 562 -> NONTERM_declExpr 
    | 563 -> NONTERM_declExpr 
    | 564 -> NONTERM_declExpr 
    | 565 -> NONTERM_declExpr 
    | 566 -> NONTERM_declExpr 
    | 567 -> NONTERM_declExpr 
    | 568 -> NONTERM_declExpr 
    | 569 -> NONTERM_declExpr 
    | 570 -> NONTERM_declExpr 
    | 571 -> NONTERM_declExpr 
    | 572 -> NONTERM_declExpr 
    | 573 -> NONTERM_declExpr 
    | 574 -> NONTERM_declExpr 
    | 575 -> NONTERM_declExpr 
    | 576 -> NONTERM_declExpr 
    | 577 -> NONTERM_declExpr 
    | 578 -> NONTERM_declExpr 
    | 579 -> NONTERM_declExpr 
    | 580 -> NONTERM_declExpr 
    | 581 -> NONTERM_declExpr 
    | 582 -> NONTERM_declExpr 
    | 583 -> NONTERM_declExpr 
    | 584 -> NONTERM_declExpr 
    | 585 -> NONTERM_declExpr 
    | 586 -> NONTERM_declExpr 
    | 587 -> NONTERM_declExpr 
    | 588 -> NONTERM_declExpr 
    | 589 -> NONTERM_declExpr 
    | 590 -> NONTERM_declExpr 
    | 591 -> NONTERM_declExpr 
    | 592 -> NONTERM_declExpr 
    | 593 -> NONTERM_declExpr 
    | 594 -> NONTERM_declExpr 
    | 595 -> NONTERM_declExpr 
    | 596 -> NONTERM_declExpr 
    | 597 -> NONTERM_declExpr 
    | 598 -> NONTERM_declExpr 
    | 599 -> NONTERM_declExpr 
    | 600 -> NONTERM_declExpr 
    | 601 -> NONTERM_declExpr 
    | 602 -> NONTERM_declExpr 
    | 603 -> NONTERM_declExpr 
    | 604 -> NONTERM_declExpr 
    | 605 -> NONTERM_declExpr 
    | 606 -> NONTERM_declExpr 
    | 607 -> NONTERM_declExpr 
    | 608 -> NONTERM_declExpr 
    | 609 -> NONTERM_declExpr 
    | 610 -> NONTERM_declExpr 
    | 611 -> NONTERM_declExpr 
    | 612 -> NONTERM_declExpr 
    | 613 -> NONTERM_declExpr 
    | 614 -> NONTERM_declExpr 
    | 615 -> NONTERM_declExpr 
    | 616 -> NONTERM_declExpr 
    | 617 -> NONTERM_declExpr 
    | 618 -> NONTERM_declExpr 
    | 619 -> NONTERM_declExpr 
    | 620 -> NONTERM_declExpr 
    | 621 -> NONTERM_declExpr 
    | 622 -> NONTERM_declExpr 
    | 623 -> NONTERM_declExpr 
    | 624 -> NONTERM_declExpr 
    | 625 -> NONTERM_declExpr 
    | 626 -> NONTERM_declExpr 
    | 627 -> NONTERM_declExpr 
    | 628 -> NONTERM_declExpr 
    | 629 -> NONTERM_dynamicArg 
    | 630 -> NONTERM_dynamicArg 
    | 631 -> NONTERM_withClauses 
    | 632 -> NONTERM_withClauses 
    | 633 -> NONTERM_withClauses 
    | 634 -> NONTERM_withPatternClauses 
    | 635 -> NONTERM_withPatternClauses 
    | 636 -> NONTERM_withPatternClauses 
    | 637 -> NONTERM_withPatternClauses 
    | 638 -> NONTERM_patternAndGuard 
    | 639 -> NONTERM_patternClauses 
    | 640 -> NONTERM_patternClauses 
    | 641 -> NONTERM_patternClauses 
    | 642 -> NONTERM_patternClauses 
    | 643 -> NONTERM_patternClauses 
    | 644 -> NONTERM_patternGuard 
    | 645 -> NONTERM_patternGuard 
    | 646 -> NONTERM_patternResult 
    | 647 -> NONTERM_ifExprCases 
    | 648 -> NONTERM_ifExprThen 
    | 649 -> NONTERM_ifExprThen 
    | 650 -> NONTERM_ifExprThen 
    | 651 -> NONTERM_ifExprElifs 
    | 652 -> NONTERM_ifExprElifs 
    | 653 -> NONTERM_ifExprElifs 
    | 654 -> NONTERM_ifExprElifs 
    | 655 -> NONTERM_ifExprElifs 
    | 656 -> NONTERM_ifExprElifs 
    | 657 -> NONTERM_tupleExpr 
    | 658 -> NONTERM_tupleExpr 
    | 659 -> NONTERM_tupleExpr 
    | 660 -> NONTERM_tupleExpr 
    | 661 -> NONTERM_minusExpr 
    | 662 -> NONTERM_minusExpr 
    | 663 -> NONTERM_minusExpr 
    | 664 -> NONTERM_minusExpr 
    | 665 -> NONTERM_minusExpr 
    | 666 -> NONTERM_minusExpr 
    | 667 -> NONTERM_minusExpr 
    | 668 -> NONTERM_minusExpr 
    | 669 -> NONTERM_minusExpr 
    | 670 -> NONTERM_minusExpr 
    | 671 -> NONTERM_minusExpr 
    | 672 -> NONTERM_minusExpr 
    | 673 -> NONTERM_appExpr 
    | 674 -> NONTERM_appExpr 
    | 675 -> NONTERM_argExpr 
    | 676 -> NONTERM_argExpr 
    | 677 -> NONTERM_atomicExpr 
    | 678 -> NONTERM_atomicExpr 
    | 679 -> NONTERM_atomicExpr 
    | 680 -> NONTERM_atomicExpr 
    | 681 -> NONTERM_atomicExpr 
    | 682 -> NONTERM_atomicExpr 
    | 683 -> NONTERM_atomicExpr 
    | 684 -> NONTERM_atomicExpr 
    | 685 -> NONTERM_atomicExpr 
    | 686 -> NONTERM_atomicExpr 
    | 687 -> NONTERM_atomicExpr 
    | 688 -> NONTERM_atomicExpr 
    | 689 -> NONTERM_atomicExpr 
    | 690 -> NONTERM_atomicExpr 
    | 691 -> NONTERM_atomicExpr 
    | 692 -> NONTERM_atomicExpr 
    | 693 -> NONTERM_atomicExpr 
    | 694 -> NONTERM_atomicExprQualification 
    | 695 -> NONTERM_atomicExprQualification 
    | 696 -> NONTERM_atomicExprQualification 
    | 697 -> NONTERM_atomicExprQualification 
    | 698 -> NONTERM_atomicExprQualification 
    | 699 -> NONTERM_atomicExprQualification 
    | 700 -> NONTERM_atomicExprQualification 
    | 701 -> NONTERM_atomicExprQualification 
    | 702 -> NONTERM_atomicExprQualification 
    | 703 -> NONTERM_atomicExprQualification 
    | 704 -> NONTERM_atomicExprQualification 
    | 705 -> NONTERM_optRangeSeqExpr 
    | 706 -> NONTERM_optRangeSeqExpr 
    | 707 -> NONTERM_optRange 
    | 708 -> NONTERM_optRange 
    | 709 -> NONTERM_optRange 
    | 710 -> NONTERM_optRange 
    | 711 -> NONTERM_optRange 
    | 712 -> NONTERM_rangeDeclExpr 
    | 713 -> NONTERM_rangeDeclExpr 
    | 714 -> NONTERM_atomicExprAfterType 
    | 715 -> NONTERM_atomicExprAfterType 
    | 716 -> NONTERM_atomicExprAfterType 
    | 717 -> NONTERM_atomicExprAfterType 
    | 718 -> NONTERM_atomicExprAfterType 
    | 719 -> NONTERM_atomicExprAfterType 
    | 720 -> NONTERM_atomicExprAfterType 
    | 721 -> NONTERM_atomicExprAfterType 
    | 722 -> NONTERM_atomicExprAfterType 
    | 723 -> NONTERM_atomicExprAfterType 
    | 724 -> NONTERM_beginEndExpr 
    | 725 -> NONTERM_beginEndExpr 
    | 726 -> NONTERM_beginEndExpr 
    | 727 -> NONTERM_beginEndExpr 
    | 728 -> NONTERM_quoteExpr 
    | 729 -> NONTERM_quoteExpr 
    | 730 -> NONTERM_quoteExpr 
    | 731 -> NONTERM_quoteExpr 
    | 732 -> NONTERM_arrayExpr 
    | 733 -> NONTERM_arrayExpr 
    | 734 -> NONTERM_arrayExpr 
    | 735 -> NONTERM_arrayExpr 
    | 736 -> NONTERM_parenExpr 
    | 737 -> NONTERM_parenExpr 
    | 738 -> NONTERM_parenExpr 
    | 739 -> NONTERM_parenExpr 
    | 740 -> NONTERM_parenExpr 
    | 741 -> NONTERM_parenExpr 
    | 742 -> NONTERM_parenExpr 
    | 743 -> NONTERM_parenExpr 
    | 744 -> NONTERM_parenExpr 
    | 745 -> NONTERM_parenExprBody 
    | 746 -> NONTERM_parenExprBody 
    | 747 -> NONTERM_parenExprBody 
    | 748 -> NONTERM_staticallyKnownHeadTypars 
    | 749 -> NONTERM_staticallyKnownHeadTypars 
    | 750 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 751 -> NONTERM_staticallyKnownHeadTyparAlts 
    | 752 -> NONTERM_braceExpr 
    | 753 -> NONTERM_braceExpr 
    | 754 -> NONTERM_braceExpr 
    | 755 -> NONTERM_braceExpr 
    | 756 -> NONTERM_braceExpr 
    | 757 -> NONTERM_braceExprBody 
    | 758 -> NONTERM_braceExprBody 
    | 759 -> NONTERM_braceExprBody 
    | 760 -> NONTERM_listExprElements 
    | 761 -> NONTERM_listExprElements 
    | 762 -> NONTERM_monadicExprInitial 
    | 763 -> NONTERM_monadicExprInitial 
    | 764 -> NONTERM_rangeSequenceExpr 
    | 765 -> NONTERM_rangeSequenceExpr 
    | 766 -> NONTERM_rangeSequenceExpr 
    | 767 -> NONTERM_arrowThenExprR 
    | 768 -> NONTERM_forLoopBinder 
    | 769 -> NONTERM_forLoopBinder 
    | 770 -> NONTERM_forLoopBinder 
    | 771 -> NONTERM_forLoopBinder 
    | 772 -> NONTERM_forLoopRange 
    | 773 -> NONTERM_forLoopRange 
    | 774 -> NONTERM_forLoopDirection 
    | 775 -> NONTERM_forLoopDirection 
    | 776 -> NONTERM_inlineAssemblyExpr 
    | 777 -> NONTERM_optCurriedArgExprs 
    | 778 -> NONTERM_optCurriedArgExprs 
    | 779 -> NONTERM_opt_atomicExprAfterType 
    | 780 -> NONTERM_opt_atomicExprAfterType 
    | 781 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 782 -> NONTERM_opt_inlineAssemblyTypeArg 
    | 783 -> NONTERM_optInlineAssemblyReturnTypes 
    | 784 -> NONTERM_optInlineAssemblyReturnTypes 
    | 785 -> NONTERM_optInlineAssemblyReturnTypes 
    | 786 -> NONTERM_recdExpr 
    | 787 -> NONTERM_recdExpr 
    | 788 -> NONTERM_recdExprCore 
    | 789 -> NONTERM_recdExprCore 
    | 790 -> NONTERM_recdExprCore 
    | 791 -> NONTERM_recdExprCore 
    | 792 -> NONTERM_recdExprCore 
    | 793 -> NONTERM_recdExprCore 
    | 794 -> NONTERM_recdExprCore 
    | 795 -> NONTERM_opt_seps_recd 
    | 796 -> NONTERM_opt_seps_recd 
    | 797 -> NONTERM_seps_recd 
    | 798 -> NONTERM_seps_recd 
    | 799 -> NONTERM_seps_recd 
    | 800 -> NONTERM_seps_recd 
    | 801 -> NONTERM_pathOrUnderscore 
    | 802 -> NONTERM_pathOrUnderscore 
    | 803 -> NONTERM_recdExprBindings 
    | 804 -> NONTERM_recdExprBindings 
    | 805 -> NONTERM_recdBinding 
    | 806 -> NONTERM_recdBinding 
    | 807 -> NONTERM_recdBinding 
    | 808 -> NONTERM_recdBinding 
    | 809 -> NONTERM_recdBinding 
    | 810 -> NONTERM_objExpr 
    | 811 -> NONTERM_objExpr 
    | 812 -> NONTERM_objExpr 
    | 813 -> NONTERM_objExprBaseCall 
    | 814 -> NONTERM_objExprBaseCall 
    | 815 -> NONTERM_objExprBaseCall 
    | 816 -> NONTERM_opt_objExprBindings 
    | 817 -> NONTERM_opt_objExprBindings 
    | 818 -> NONTERM_objExprBindings 
    | 819 -> NONTERM_objExprBindings 
    | 820 -> NONTERM_objExprBindings 
    | 821 -> NONTERM_objExprInterfaces 
    | 822 -> NONTERM_opt_objExprInterfaces 
    | 823 -> NONTERM_opt_objExprInterfaces 
    | 824 -> NONTERM_opt_objExprInterfaces 
    | 825 -> NONTERM_objExprInterface 
    | 826 -> NONTERM_braceBarExpr 
    | 827 -> NONTERM_braceBarExpr 
    | 828 -> NONTERM_braceBarExprCore 
    | 829 -> NONTERM_braceBarExprCore 
    | 830 -> NONTERM_braceBarExprCore 
    | 831 -> NONTERM_braceBarExprCore 
    | 832 -> NONTERM_braceBarExprCore 
    | 833 -> NONTERM_anonLambdaExpr 
    | 834 -> NONTERM_anonLambdaExpr 
    | 835 -> NONTERM_anonLambdaExpr 
    | 836 -> NONTERM_anonLambdaExpr 
    | 837 -> NONTERM_anonLambdaExpr 
    | 838 -> NONTERM_anonLambdaExpr 
    | 839 -> NONTERM_anonLambdaExpr 
    | 840 -> NONTERM_anonLambdaExpr 
    | 841 -> NONTERM_anonMatchingExpr 
    | 842 -> NONTERM_anonMatchingExpr 
    | 843 -> NONTERM_typeWithTypeConstraints 
    | 844 -> NONTERM_typeWithTypeConstraints 
    | 845 -> NONTERM_topTypeWithTypeConstraints 
    | 846 -> NONTERM_topTypeWithTypeConstraints 
    | 847 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 848 -> NONTERM_opt_topReturnTypeWithTypeConstraints 
    | 849 -> NONTERM_topType 
    | 850 -> NONTERM_topType 
    | 851 -> NONTERM_topTupleType 
    | 852 -> NONTERM_topTupleType 
    | 853 -> NONTERM_topTupleTypeElements 
    | 854 -> NONTERM_topTupleTypeElements 
    | 855 -> NONTERM_topAppType 
    | 856 -> NONTERM_topAppType 
    | 857 -> NONTERM_topAppType 
    | 858 -> NONTERM_topAppType 
    | 859 -> NONTERM_topAppType 
    | 860 -> NONTERM_topAppType 
    | 861 -> NONTERM_typ 
    | 862 -> NONTERM_typ 
    | 863 -> NONTERM_typEOF 
    | 864 -> NONTERM_tupleType 
    | 865 -> NONTERM_tupleType 
    | 866 -> NONTERM_tupleType 
    | 867 -> NONTERM_tupleType 
    | 868 -> NONTERM_tupleOrQuotTypeElements 
    | 869 -> NONTERM_tupleOrQuotTypeElements 
    | 870 -> NONTERM_tupleOrQuotTypeElements 
    | 871 -> NONTERM_appTypeCon 
    | 872 -> NONTERM_appTypeCon 
    | 873 -> NONTERM_appTypeConPower 
    | 874 -> NONTERM_appTypeConPower 
    | 875 -> NONTERM_appType 
    | 876 -> NONTERM_appType 
    | 877 -> NONTERM_appType 
    | 878 -> NONTERM_appType 
    | 879 -> NONTERM_appType 
    | 880 -> NONTERM_appType 
    | 881 -> NONTERM_appType 
    | 882 -> NONTERM_arrayTypeSuffix 
    | 883 -> NONTERM_arrayTypeSuffix 
    | 884 -> NONTERM_arrayTypeSuffix 
    | 885 -> NONTERM_arrayTypeSuffix 
    | 886 -> NONTERM_appTypePrefixArguments 
    | 887 -> NONTERM_typeArgListElements 
    | 888 -> NONTERM_typeArgListElements 
    | 889 -> NONTERM_typeArgListElements 
    | 890 -> NONTERM_powerType 
    | 891 -> NONTERM_powerType 
    | 892 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 893 -> NONTERM_atomTypeNonAtomicDeprecated 
    | 894 -> NONTERM_atomTypeOrAnonRecdType 
    | 895 -> NONTERM_atomTypeOrAnonRecdType 
    | 896 -> NONTERM_atomType 
    | 897 -> NONTERM_atomType 
    | 898 -> NONTERM_atomType 
    | 899 -> NONTERM_atomType 
    | 900 -> NONTERM_atomType 
    | 901 -> NONTERM_atomType 
    | 902 -> NONTERM_atomType 
    | 903 -> NONTERM_atomType 
    | 904 -> NONTERM_atomType 
    | 905 -> NONTERM_atomType 
    | 906 -> NONTERM_atomType 
    | 907 -> NONTERM_atomType 
    | 908 -> NONTERM_atomType 
    | 909 -> NONTERM_atomType 
    | 910 -> NONTERM_atomType 
    | 911 -> NONTERM_atomType 
    | 912 -> NONTERM_atomType 
    | 913 -> NONTERM_atomType 
    | 914 -> NONTERM_atomType 
    | 915 -> NONTERM_atomType 
    | 916 -> NONTERM_typeArgsNoHpaDeprecated 
    | 917 -> NONTERM_typeArgsNoHpaDeprecated 
    | 918 -> NONTERM_typeArgsActual 
    | 919 -> NONTERM_typeArgsActual 
    | 920 -> NONTERM_typeArgsActual 
    | 921 -> NONTERM_typeArgsActual 
    | 922 -> NONTERM_typeArgsActual 
    | 923 -> NONTERM_typeArgsActual 
    | 924 -> NONTERM_typeArgsActual 
    | 925 -> NONTERM_typeArgActual 
    | 926 -> NONTERM_typeArgActual 
    | 927 -> NONTERM_typeArgActual 
    | 928 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 929 -> NONTERM_typeArgActualOrDummyIfEmpty 
    | 930 -> NONTERM_dummyTypeArg 
    | 931 -> NONTERM_measureTypeArg 
    | 932 -> NONTERM_measureTypeArg 
    | 933 -> NONTERM_measureTypeAtom 
    | 934 -> NONTERM_measureTypeAtom 
    | 935 -> NONTERM_measureTypeAtom 
    | 936 -> NONTERM_measureTypePower 
    | 937 -> NONTERM_measureTypePower 
    | 938 -> NONTERM_measureTypePower 
    | 939 -> NONTERM_measureTypeSeq 
    | 940 -> NONTERM_measureTypeSeq 
    | 941 -> NONTERM_measureTypeExpr 
    | 942 -> NONTERM_measureTypeExpr 
    | 943 -> NONTERM_measureTypeExpr 
    | 944 -> NONTERM_measureTypeExpr 
    | 945 -> NONTERM_typar 
    | 946 -> NONTERM_typar 
    | 947 -> NONTERM_staticallyKnownHeadTypar 
    | 948 -> NONTERM_ident 
    | 949 -> NONTERM_path 
    | 950 -> NONTERM_path 
    | 951 -> NONTERM_path 
    | 952 -> NONTERM_path 
    | 953 -> NONTERM_opName 
    | 954 -> NONTERM_opName 
    | 955 -> NONTERM_opName 
    | 956 -> NONTERM_opName 
    | 957 -> NONTERM_opName 
    | 958 -> NONTERM_operatorName 
    | 959 -> NONTERM_operatorName 
    | 960 -> NONTERM_operatorName 
    | 961 -> NONTERM_operatorName 
    | 962 -> NONTERM_operatorName 
    | 963 -> NONTERM_operatorName 
    | 964 -> NONTERM_operatorName 
    | 965 -> NONTERM_operatorName 
    | 966 -> NONTERM_operatorName 
    | 967 -> NONTERM_operatorName 
    | 968 -> NONTERM_operatorName 
    | 969 -> NONTERM_operatorName 
    | 970 -> NONTERM_operatorName 
    | 971 -> NONTERM_operatorName 
    | 972 -> NONTERM_operatorName 
    | 973 -> NONTERM_operatorName 
    | 974 -> NONTERM_operatorName 
    | 975 -> NONTERM_operatorName 
    | 976 -> NONTERM_operatorName 
    | 977 -> NONTERM_operatorName 
    | 978 -> NONTERM_operatorName 
    | 979 -> NONTERM_operatorName 
    | 980 -> NONTERM_operatorName 
    | 981 -> NONTERM_operatorName 
    | 982 -> NONTERM_operatorName 
    | 983 -> NONTERM_operatorName 
    | 984 -> NONTERM_activePatternCaseName 
    | 985 -> NONTERM_activePatternCaseNames 
    | 986 -> NONTERM_activePatternCaseNames 
    | 987 -> NONTERM_identOrOp 
    | 988 -> NONTERM_identOrOp 
    | 989 -> NONTERM_pathOp 
    | 990 -> NONTERM_pathOp 
    | 991 -> NONTERM_pathOp 
    | 992 -> NONTERM_pathOp 
    | 993 -> NONTERM_nameop 
    | 994 -> NONTERM_topSeparator 
    | 995 -> NONTERM_topSeparator 
    | 996 -> NONTERM_topSeparator 
    | 997 -> NONTERM_topSeparators 
    | 998 -> NONTERM_topSeparators 
    | 999 -> NONTERM_opt_topSeparators 
    | 1000 -> NONTERM_opt_topSeparators 
    | 1001 -> NONTERM_seps 
    | 1002 -> NONTERM_seps 
    | 1003 -> NONTERM_seps 
    | 1004 -> NONTERM_seps 
    | 1005 -> NONTERM_declEnd 
    | 1006 -> NONTERM_declEnd 
    | 1007 -> NONTERM_declEnd 
    | 1008 -> NONTERM_opt_declEnd 
    | 1009 -> NONTERM_opt_declEnd 
    | 1010 -> NONTERM_opt_declEnd 
    | 1011 -> NONTERM_opt_declEnd 
    | 1012 -> NONTERM_opt_ODECLEND 
    | 1013 -> NONTERM_opt_ODECLEND 
    | 1014 -> NONTERM_deprecated_opt_equals 
    | 1015 -> NONTERM_deprecated_opt_equals 
    | 1016 -> NONTERM_opt_OBLOCKSEP 
    | 1017 -> NONTERM_opt_OBLOCKSEP 
    | 1018 -> NONTERM_opt_seps 
    | 1019 -> NONTERM_opt_seps 
    | 1020 -> NONTERM_opt_rec 
    | 1021 -> NONTERM_opt_rec 
    | 1022 -> NONTERM_opt_bar 
    | 1023 -> NONTERM_opt_bar 
    | 1024 -> NONTERM_opt_inline 
    | 1025 -> NONTERM_opt_inline 
    | 1026 -> NONTERM_opt_mutable 
    | 1027 -> NONTERM_opt_mutable 
    | 1028 -> NONTERM_doToken 
    | 1029 -> NONTERM_doToken 
    | 1030 -> NONTERM_doneDeclEnd 
    | 1031 -> NONTERM_doneDeclEnd 
    | 1032 -> NONTERM_structOrBegin 
    | 1033 -> NONTERM_structOrBegin 
    | 1034 -> NONTERM_sigOrBegin 
    | 1035 -> NONTERM_sigOrBegin 
    | 1036 -> NONTERM_colonOrEquals 
    | 1037 -> NONTERM_colonOrEquals 
    | 1038 -> NONTERM_stringOrKeywordString 
    | 1039 -> NONTERM_stringOrKeywordString 
    | 1040 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1041 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1042 -> NONTERM_opt_HIGH_PRECEDENCE_APP 
    | 1043 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1044 -> NONTERM_opt_HIGH_PRECEDENCE_TYAPP 
    | 1045 -> NONTERM_typeKeyword 
    | 1046 -> NONTERM_typeKeyword 
    | 1047 -> NONTERM_typeKeyword 
    | 1048 -> NONTERM_moduleKeyword 
    | 1049 -> NONTERM_moduleKeyword 
    | 1050 -> NONTERM_moduleKeyword 
    | 1051 -> NONTERM_rbrace 
    | 1052 -> NONTERM_rbrace 
    | 1053 -> NONTERM_rbrace 
    | 1054 -> NONTERM_bar_rbrace 
    | 1055 -> NONTERM_rparen 
    | 1056 -> NONTERM_rparen 
    | 1057 -> NONTERM_rparen 
    | 1058 -> NONTERM_oblockend 
    | 1059 -> NONTERM_oblockend 
    | 1060 -> NONTERM_oblockend 
    | 1061 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1062 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1063 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1064 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1065 -> NONTERM_ends_other_than_rparen_coming_soon_or_recover 
    | 1066 -> NONTERM_ends_coming_soon_or_recover 
    | 1067 -> NONTERM_ends_coming_soon_or_recover 
    | 1068 -> NONTERM_ends_coming_soon_or_recover 
    | 1069 -> NONTERM_ends_coming_soon_or_recover 
    | 1070 -> NONTERM_ends_coming_soon_or_recover 
    | 1071 -> NONTERM_ends_coming_soon_or_recover 
    | _ -> failwith "prodIdxToNonTerminal: bad production index"

let _fsyacc_endOfInputTag = 199 
let _fsyacc_tagOfErrorTerminal = 197

// This function gets the name of a token as a string
let token_to_string (t:token) = 
  match t with 
  | HASH_IF _ -> "HASH_IF" 
  | HASH_ELSE _ -> "HASH_ELSE" 
  | HASH_ENDIF _ -> "HASH_ENDIF" 
  | COMMENT _ -> "COMMENT" 
  | WHITESPACE _ -> "WHITESPACE" 
  | HASH_LINE _ -> "HASH_LINE" 
  | HASH_LIGHT _ -> "HASH_LIGHT" 
  | INACTIVECODE _ -> "INACTIVECODE" 
  | LINE_COMMENT _ -> "LINE_COMMENT" 
  | STRING_TEXT _ -> "STRING_TEXT" 
  | EOF _ -> "EOF" 
  | LEX_FAILURE _ -> "LEX_FAILURE" 
  | ODUMMY _ -> "ODUMMY" 
  | FIXED  -> "FIXED" 
  | OINTERFACE_MEMBER  -> "OINTERFACE_MEMBER" 
  | OBLOCKEND  -> "OBLOCKEND" 
  | OBLOCKEND_COMING_SOON  -> "OBLOCKEND_COMING_SOON" 
  | OBLOCKEND_IS_HERE  -> "OBLOCKEND_IS_HERE" 
  | ORIGHT_BLOCK_END  -> "ORIGHT_BLOCK_END" 
  | ODECLEND  -> "ODECLEND" 
  | OEND  -> "OEND" 
  | OBLOCKSEP  -> "OBLOCKSEP" 
  | OBLOCKBEGIN  -> "OBLOCKBEGIN" 
  | ORESET  -> "ORESET" 
  | OFUN  -> "OFUN" 
  | OFUNCTION  -> "OFUNCTION" 
  | OWITH  -> "OWITH" 
  | OELSE  -> "OELSE" 
  | OTHEN  -> "OTHEN" 
  | ODO_BANG  -> "ODO_BANG" 
  | ODO  -> "ODO" 
  | OAND_BANG _ -> "OAND_BANG" 
  | OBINDER _ -> "OBINDER" 
  | OLET _ -> "OLET" 
  | HIGH_PRECEDENCE_TYAPP  -> "HIGH_PRECEDENCE_TYAPP" 
  | HIGH_PRECEDENCE_PAREN_APP  -> "HIGH_PRECEDENCE_PAREN_APP" 
  | HIGH_PRECEDENCE_BRACK_APP  -> "HIGH_PRECEDENCE_BRACK_APP" 
  | TYPE_COMING_SOON  -> "TYPE_COMING_SOON" 
  | TYPE_IS_HERE  -> "TYPE_IS_HERE" 
  | MODULE_COMING_SOON  -> "MODULE_COMING_SOON" 
  | MODULE_IS_HERE  -> "MODULE_IS_HERE" 
  | EXTERN  -> "EXTERN" 
  | VOID  -> "VOID" 
  | PUBLIC  -> "PUBLIC" 
  | PRIVATE  -> "PRIVATE" 
  | INTERNAL  -> "INTERNAL" 
  | GLOBAL  -> "GLOBAL" 
  | STATIC  -> "STATIC" 
  | MEMBER  -> "MEMBER" 
  | CLASS  -> "CLASS" 
  | ABSTRACT  -> "ABSTRACT" 
  | OVERRIDE  -> "OVERRIDE" 
  | DEFAULT  -> "DEFAULT" 
  | CONSTRUCTOR  -> "CONSTRUCTOR" 
  | INHERIT  -> "INHERIT" 
  | GREATER_RBRACK  -> "GREATER_RBRACK" 
  | STRUCT  -> "STRUCT" 
  | SIG  -> "SIG" 
  | BAR  -> "BAR" 
  | RBRACK  -> "RBRACK" 
  | RBRACE  -> "RBRACE" 
  | RBRACE_COMING_SOON  -> "RBRACE_COMING_SOON" 
  | RBRACE_IS_HERE  -> "RBRACE_IS_HERE" 
  | MINUS  -> "MINUS" 
  | DOLLAR  -> "DOLLAR" 
  | BAR_RBRACK  -> "BAR_RBRACK" 
  | BAR_RBRACE  -> "BAR_RBRACE" 
  | UNDERSCORE  -> "UNDERSCORE" 
  | SEMICOLON_SEMICOLON  -> "SEMICOLON_SEMICOLON" 
  | LARROW  -> "LARROW" 
  | EQUALS  -> "EQUALS" 
  | LBRACK  -> "LBRACK" 
  | LBRACK_BAR  -> "LBRACK_BAR" 
  | LBRACE_BAR  -> "LBRACE_BAR" 
  | LBRACK_LESS  -> "LBRACK_LESS" 
  | LBRACE  -> "LBRACE" 
  | QMARK  -> "QMARK" 
  | QMARK_QMARK  -> "QMARK_QMARK" 
  | DOT  -> "DOT" 
  | COLON  -> "COLON" 
  | COLON_COLON  -> "COLON_COLON" 
  | COLON_GREATER  -> "COLON_GREATER" 
  | COLON_QMARK_GREATER  -> "COLON_QMARK_GREATER" 
  | COLON_QMARK  -> "COLON_QMARK" 
  | COLON_EQUALS  -> "COLON_EQUALS" 
  | SEMICOLON  -> "SEMICOLON" 
  | WHEN  -> "WHEN" 
  | WHILE  -> "WHILE" 
  | WITH  -> "WITH" 
  | HASH  -> "HASH" 
  | AMP  -> "AMP" 
  | AMP_AMP  -> "AMP_AMP" 
  | QUOTE  -> "QUOTE" 
  | LPAREN  -> "LPAREN" 
  | RPAREN  -> "RPAREN" 
  | RPAREN_COMING_SOON  -> "RPAREN_COMING_SOON" 
  | RPAREN_IS_HERE  -> "RPAREN_IS_HERE" 
  | STAR  -> "STAR" 
  | COMMA  -> "COMMA" 
  | RARROW  -> "RARROW" 
  | GREATER_BAR_RBRACK  -> "GREATER_BAR_RBRACK" 
  | LPAREN_STAR_RPAREN  -> "LPAREN_STAR_RPAREN" 
  | OPEN  -> "OPEN" 
  | OR  -> "OR" 
  | REC  -> "REC" 
  | THEN  -> "THEN" 
  | TO  -> "TO" 
  | TRUE  -> "TRUE" 
  | TRY  -> "TRY" 
  | TYPE  -> "TYPE" 
  | VAL  -> "VAL" 
  | INLINE  -> "INLINE" 
  | INTERFACE  -> "INTERFACE" 
  | INSTANCE  -> "INSTANCE" 
  | CONST  -> "CONST" 
  | LAZY  -> "LAZY" 
  | OLAZY  -> "OLAZY" 
  | MATCH  -> "MATCH" 
  | MATCH_BANG  -> "MATCH_BANG" 
  | MUTABLE  -> "MUTABLE" 
  | NEW  -> "NEW" 
  | OF  -> "OF" 
  | EXCEPTION  -> "EXCEPTION" 
  | FALSE  -> "FALSE" 
  | FOR  -> "FOR" 
  | FUN  -> "FUN" 
  | FUNCTION  -> "FUNCTION" 
  | IF  -> "IF" 
  | IN  -> "IN" 
  | JOIN_IN  -> "JOIN_IN" 
  | FINALLY  -> "FINALLY" 
  | DO_BANG  -> "DO_BANG" 
  | AND  -> "AND" 
  | AS  -> "AS" 
  | ASSERT  -> "ASSERT" 
  | OASSERT  -> "OASSERT" 
  | ASR  -> "ASR" 
  | BEGIN  -> "BEGIN" 
  | DO  -> "DO" 
  | DONE  -> "DONE" 
  | DOWNTO  -> "DOWNTO" 
  | ELSE  -> "ELSE" 
  | ELIF  -> "ELIF" 
  | END  -> "END" 
  | DOT_DOT  -> "DOT_DOT" 
  | DOT_DOT_HAT  -> "DOT_DOT_HAT" 
  | BAR_BAR  -> "BAR_BAR" 
  | UPCAST  -> "UPCAST" 
  | DOWNCAST  -> "DOWNCAST" 
  | NULL  -> "NULL" 
  | RESERVED  -> "RESERVED" 
  | MODULE  -> "MODULE" 
  | NAMESPACE  -> "NAMESPACE" 
  | DELEGATE  -> "DELEGATE" 
  | CONSTRAINT  -> "CONSTRAINT" 
  | BASE  -> "BASE" 
  | LQUOTE _ -> "LQUOTE" 
  | RQUOTE _ -> "RQUOTE" 
  | RQUOTE_DOT _ -> "RQUOTE_DOT" 
  | PERCENT_OP _ -> "PERCENT_OP" 
  | BINDER _ -> "BINDER" 
  | LESS _ -> "LESS" 
  | GREATER _ -> "GREATER" 
  | LET _ -> "LET" 
  | YIELD _ -> "YIELD" 
  | YIELD_BANG _ -> "YIELD_BANG" 
  | AND_BANG _ -> "AND_BANG" 
  | BIGNUM _ -> "BIGNUM" 
  | DECIMAL _ -> "DECIMAL" 
  | CHAR _ -> "CHAR" 
  | IEEE64 _ -> "IEEE64" 
  | IEEE32 _ -> "IEEE32" 
  | NATIVEINT _ -> "NATIVEINT" 
  | UNATIVEINT _ -> "UNATIVEINT" 
  | UINT64 _ -> "UINT64" 
  | UINT32 _ -> "UINT32" 
  | UINT16 _ -> "UINT16" 
  | UINT8 _ -> "UINT8" 
  | INT64 _ -> "INT64" 
  | INT32 _ -> "INT32" 
  | INT32_DOT_DOT _ -> "INT32_DOT_DOT" 
  | INT16 _ -> "INT16" 
  | INT8 _ -> "INT8" 
  | FUNKY_OPERATOR_NAME _ -> "FUNKY_OPERATOR_NAME" 
  | ADJACENT_PREFIX_OP _ -> "ADJACENT_PREFIX_OP" 
  | PLUS_MINUS_OP _ -> "PLUS_MINUS_OP" 
  | INFIX_AMP_OP _ -> "INFIX_AMP_OP" 
  | INFIX_STAR_DIV_MOD_OP _ -> "INFIX_STAR_DIV_MOD_OP" 
  | PREFIX_OP _ -> "PREFIX_OP" 
  | INFIX_BAR_OP _ -> "INFIX_BAR_OP" 
  | INFIX_AT_HAT_OP _ -> "INFIX_AT_HAT_OP" 
  | INFIX_COMPARE_OP _ -> "INFIX_COMPARE_OP" 
  | INFIX_STAR_STAR_OP _ -> "INFIX_STAR_STAR_OP" 
  | IDENT _ -> "IDENT" 
  | KEYWORD_STRING _ -> "KEYWORD_STRING" 
  | STRING _ -> "STRING" 
  | BYTEARRAY _ -> "BYTEARRAY" 

// This function gets the data carried by a token as an object
let _fsyacc_dataOfToken (t:token) = 
  match t with 
  | HASH_IF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ELSE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_ENDIF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | WHITESPACE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LINE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HASH_LIGHT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INACTIVECODE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LINE_COMMENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING_TEXT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | EOF _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LEX_FAILURE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ODUMMY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FIXED  -> (null : System.Object) 
  | OINTERFACE_MEMBER  -> (null : System.Object) 
  | OBLOCKEND  -> (null : System.Object) 
  | OBLOCKEND_COMING_SOON  -> (null : System.Object) 
  | OBLOCKEND_IS_HERE  -> (null : System.Object) 
  | ORIGHT_BLOCK_END  -> (null : System.Object) 
  | ODECLEND  -> (null : System.Object) 
  | OEND  -> (null : System.Object) 
  | OBLOCKSEP  -> (null : System.Object) 
  | OBLOCKBEGIN  -> (null : System.Object) 
  | ORESET  -> (null : System.Object) 
  | OFUN  -> (null : System.Object) 
  | OFUNCTION  -> (null : System.Object) 
  | OWITH  -> (null : System.Object) 
  | OELSE  -> (null : System.Object) 
  | OTHEN  -> (null : System.Object) 
  | ODO_BANG  -> (null : System.Object) 
  | ODO  -> (null : System.Object) 
  | OAND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OBINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | OLET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | HIGH_PRECEDENCE_TYAPP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_PAREN_APP  -> (null : System.Object) 
  | HIGH_PRECEDENCE_BRACK_APP  -> (null : System.Object) 
  | TYPE_COMING_SOON  -> (null : System.Object) 
  | TYPE_IS_HERE  -> (null : System.Object) 
  | MODULE_COMING_SOON  -> (null : System.Object) 
  | MODULE_IS_HERE  -> (null : System.Object) 
  | EXTERN  -> (null : System.Object) 
  | VOID  -> (null : System.Object) 
  | PUBLIC  -> (null : System.Object) 
  | PRIVATE  -> (null : System.Object) 
  | INTERNAL  -> (null : System.Object) 
  | GLOBAL  -> (null : System.Object) 
  | STATIC  -> (null : System.Object) 
  | MEMBER  -> (null : System.Object) 
  | CLASS  -> (null : System.Object) 
  | ABSTRACT  -> (null : System.Object) 
  | OVERRIDE  -> (null : System.Object) 
  | DEFAULT  -> (null : System.Object) 
  | CONSTRUCTOR  -> (null : System.Object) 
  | INHERIT  -> (null : System.Object) 
  | GREATER_RBRACK  -> (null : System.Object) 
  | STRUCT  -> (null : System.Object) 
  | SIG  -> (null : System.Object) 
  | BAR  -> (null : System.Object) 
  | RBRACK  -> (null : System.Object) 
  | RBRACE  -> (null : System.Object) 
  | RBRACE_COMING_SOON  -> (null : System.Object) 
  | RBRACE_IS_HERE  -> (null : System.Object) 
  | MINUS  -> (null : System.Object) 
  | DOLLAR  -> (null : System.Object) 
  | BAR_RBRACK  -> (null : System.Object) 
  | BAR_RBRACE  -> (null : System.Object) 
  | UNDERSCORE  -> (null : System.Object) 
  | SEMICOLON_SEMICOLON  -> (null : System.Object) 
  | LARROW  -> (null : System.Object) 
  | EQUALS  -> (null : System.Object) 
  | LBRACK  -> (null : System.Object) 
  | LBRACK_BAR  -> (null : System.Object) 
  | LBRACE_BAR  -> (null : System.Object) 
  | LBRACK_LESS  -> (null : System.Object) 
  | LBRACE  -> (null : System.Object) 
  | QMARK  -> (null : System.Object) 
  | QMARK_QMARK  -> (null : System.Object) 
  | DOT  -> (null : System.Object) 
  | COLON  -> (null : System.Object) 
  | COLON_COLON  -> (null : System.Object) 
  | COLON_GREATER  -> (null : System.Object) 
  | COLON_QMARK_GREATER  -> (null : System.Object) 
  | COLON_QMARK  -> (null : System.Object) 
  | COLON_EQUALS  -> (null : System.Object) 
  | SEMICOLON  -> (null : System.Object) 
  | WHEN  -> (null : System.Object) 
  | WHILE  -> (null : System.Object) 
  | WITH  -> (null : System.Object) 
  | HASH  -> (null : System.Object) 
  | AMP  -> (null : System.Object) 
  | AMP_AMP  -> (null : System.Object) 
  | QUOTE  -> (null : System.Object) 
  | LPAREN  -> (null : System.Object) 
  | RPAREN  -> (null : System.Object) 
  | RPAREN_COMING_SOON  -> (null : System.Object) 
  | RPAREN_IS_HERE  -> (null : System.Object) 
  | STAR  -> (null : System.Object) 
  | COMMA  -> (null : System.Object) 
  | RARROW  -> (null : System.Object) 
  | GREATER_BAR_RBRACK  -> (null : System.Object) 
  | LPAREN_STAR_RPAREN  -> (null : System.Object) 
  | OPEN  -> (null : System.Object) 
  | OR  -> (null : System.Object) 
  | REC  -> (null : System.Object) 
  | THEN  -> (null : System.Object) 
  | TO  -> (null : System.Object) 
  | TRUE  -> (null : System.Object) 
  | TRY  -> (null : System.Object) 
  | TYPE  -> (null : System.Object) 
  | VAL  -> (null : System.Object) 
  | INLINE  -> (null : System.Object) 
  | INTERFACE  -> (null : System.Object) 
  | INSTANCE  -> (null : System.Object) 
  | CONST  -> (null : System.Object) 
  | LAZY  -> (null : System.Object) 
  | OLAZY  -> (null : System.Object) 
  | MATCH  -> (null : System.Object) 
  | MATCH_BANG  -> (null : System.Object) 
  | MUTABLE  -> (null : System.Object) 
  | NEW  -> (null : System.Object) 
  | OF  -> (null : System.Object) 
  | EXCEPTION  -> (null : System.Object) 
  | FALSE  -> (null : System.Object) 
  | FOR  -> (null : System.Object) 
  | FUN  -> (null : System.Object) 
  | FUNCTION  -> (null : System.Object) 
  | IF  -> (null : System.Object) 
  | IN  -> (null : System.Object) 
  | JOIN_IN  -> (null : System.Object) 
  | FINALLY  -> (null : System.Object) 
  | DO_BANG  -> (null : System.Object) 
  | AND  -> (null : System.Object) 
  | AS  -> (null : System.Object) 
  | ASSERT  -> (null : System.Object) 
  | OASSERT  -> (null : System.Object) 
  | ASR  -> (null : System.Object) 
  | BEGIN  -> (null : System.Object) 
  | DO  -> (null : System.Object) 
  | DONE  -> (null : System.Object) 
  | DOWNTO  -> (null : System.Object) 
  | ELSE  -> (null : System.Object) 
  | ELIF  -> (null : System.Object) 
  | END  -> (null : System.Object) 
  | DOT_DOT  -> (null : System.Object) 
  | DOT_DOT_HAT  -> (null : System.Object) 
  | BAR_BAR  -> (null : System.Object) 
  | UPCAST  -> (null : System.Object) 
  | DOWNCAST  -> (null : System.Object) 
  | NULL  -> (null : System.Object) 
  | RESERVED  -> (null : System.Object) 
  | MODULE  -> (null : System.Object) 
  | NAMESPACE  -> (null : System.Object) 
  | DELEGATE  -> (null : System.Object) 
  | CONSTRAINT  -> (null : System.Object) 
  | BASE  -> (null : System.Object) 
  | LQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | RQUOTE_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PERCENT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BINDER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LESS _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | GREATER _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | LET _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | YIELD_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | AND_BANG _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BIGNUM _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | DECIMAL _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | CHAR _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IEEE32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | NATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UNATIVEINT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | UINT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT64 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT32_DOT_DOT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT16 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INT8 _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | FUNKY_OPERATOR_NAME _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | ADJACENT_PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PLUS_MINUS_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AMP_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_DIV_MOD_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | PREFIX_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_BAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_AT_HAT_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_COMPARE_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | INFIX_STAR_STAR_OP _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | IDENT _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | KEYWORD_STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | STRING _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
  | BYTEARRAY _fsyacc_x -> Microsoft.FSharp.Core.Operators.box _fsyacc_x 
let _fsyacc_gotos = [| 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 0us; 65535us; 1us; 65535us; 4us; 5us; 7us; 65535us; 4us; 15us; 16us; 17us; 18us; 19us; 20us; 21us; 22us; 15us; 24us; 15us; 26us; 15us; 4us; 65535us; 4us; 10us; 22us; 23us; 24us; 25us; 26us; 27us; 5us; 65535us; 4us; 16us; 22us; 16us; 24us; 16us; 26us; 16us; 28us; 29us; 4us; 65535us; 4us; 18us; 22us; 18us; 24us; 18us; 26us; 18us; 4us; 65535us; 4us; 20us; 22us; 20us; 24us; 20us; 26us; 20us; 4us; 65535us; 16us; 22us; 18us; 24us; 20us; 26us; 34us; 35us; 4us; 65535us; 16us; 34us; 18us; 34us; 20us; 34us; 34us; 34us; 23us; 65535us; 0us; 84us; 2us; 257us; 4us; 33us; 22us; 33us; 24us; 33us; 26us; 33us; 61us; 84us; 65us; 84us; 69us; 84us; 79us; 84us; 82us; 84us; 112us; 84us; 115us; 84us; 119us; 84us; 224us; 257us; 228us; 257us; 231us; 257us; 243us; 257us; 247us; 257us; 249us; 257us; 254us; 257us; 278us; 257us; 288us; 257us; 1us; 65535us; 39us; 40us; 1us; 65535us; 40us; 41us; 1us; 65535us; 0us; 1us; 6us; 65535us; 31us; 269us; 64us; 65us; 87us; 88us; 227us; 228us; 241us; 269us; 259us; 269us; 4us; 65535us; 56us; 60us; 58us; 60us; 219us; 223us; 221us; 223us; 1us; 65535us; 0us; 43us; 2us; 65535us; 56us; 57us; 58us; 59us; 2us; 65535us; 56us; 58us; 58us; 58us; 2us; 65535us; 0us; 56us; 61us; 62us; 3us; 65535us; 0us; 67us; 61us; 67us; 65us; 66us; 6us; 65535us; 0us; 68us; 61us; 68us; 65us; 68us; 69us; 70us; 115us; 116us; 119us; 120us; 9us; 65535us; 0us; 76us; 61us; 76us; 65us; 76us; 69us; 76us; 79us; 80us; 82us; 83us; 112us; 113us; 115us; 76us; 119us; 76us; 9us; 65535us; 0us; 78us; 61us; 78us; 65us; 78us; 69us; 78us; 79us; 78us; 82us; 78us; 112us; 78us; 115us; 78us; 119us; 78us; 9us; 65535us; 0us; 85us; 61us; 85us; 65us; 85us; 69us; 85us; 79us; 85us; 82us; 85us; 112us; 85us; 115us; 85us; 119us; 85us; 2us; 65535us; 104us; 105us; 180us; 181us; 1us; 65535us; 89us; 91us; 2us; 65535us; 64us; 92us; 87us; 92us; 2us; 65535us; 122us; 123us; 125us; 126us; 3us; 65535us; 122us; 124us; 125us; 124us; 191us; 192us; 1us; 65535us; 128us; 129us; 2us; 65535us; 128us; 138us; 131us; 132us; 2us; 65535us; 128us; 141us; 131us; 141us; 2us; 65535us; 128us; 145us; 131us; 145us; 3us; 65535us; 146us; 147us; 156us; 157us; 210us; 211us; 8us; 65535us; 131us; 153us; 133us; 134us; 146us; 164us; 152us; 153us; 156us; 164us; 160us; 161us; 167us; 168us; 210us; 164us; 8us; 65535us; 131us; 165us; 133us; 165us; 146us; 165us; 152us; 165us; 156us; 165us; 160us; 165us; 167us; 165us; 210us; 165us; 11us; 65535us; 131us; 166us; 133us; 166us; 146us; 166us; 152us; 166us; 156us; 166us; 160us; 166us; 167us; 166us; 210us; 166us; 606us; 607us; 613us; 614us; 1396us; 1397us; 3us; 65535us; 179us; 180us; 431us; 432us; 461us; 462us; 2us; 65535us; 196us; 197us; 198us; 199us; 2us; 65535us; 171us; 173us; 172us; 173us; 2us; 65535us; 64us; 93us; 87us; 93us; 5us; 65535us; 127us; 130us; 134us; 135us; 136us; 137us; 138us; 139us; 208us; 209us; 1us; 65535us; 2us; 3us; 1us; 65535us; 2us; 213us; 2us; 65535us; 219us; 220us; 221us; 222us; 2us; 65535us; 219us; 221us; 221us; 221us; 2us; 65535us; 2us; 219us; 224us; 225us; 3us; 65535us; 2us; 230us; 224us; 230us; 228us; 229us; 5us; 65535us; 2us; 238us; 224us; 238us; 228us; 238us; 231us; 232us; 288us; 289us; 9us; 65535us; 2us; 239us; 224us; 239us; 228us; 239us; 231us; 239us; 243us; 244us; 249us; 250us; 254us; 255us; 278us; 282us; 288us; 239us; 10us; 65535us; 2us; 245us; 224us; 245us; 228us; 245us; 231us; 245us; 243us; 245us; 247us; 248us; 249us; 245us; 254us; 245us; 278us; 245us; 288us; 245us; 10us; 65535us; 2us; 247us; 224us; 247us; 228us; 247us; 231us; 247us; 243us; 247us; 247us; 247us; 249us; 247us; 254us; 247us; 278us; 247us; 288us; 247us; 15us; 65535us; 2us; 256us; 4us; 28us; 22us; 28us; 24us; 28us; 26us; 28us; 28us; 28us; 224us; 256us; 228us; 256us; 231us; 256us; 243us; 256us; 247us; 256us; 249us; 256us; 254us; 256us; 278us; 256us; 288us; 256us; 1us; 65535us; 89us; 90us; 1us; 65535us; 270us; 271us; 2us; 65535us; 270us; 286us; 278us; 279us; 1us; 65535us; 343us; 346us; 81us; 65535us; 0us; 63us; 2us; 226us; 4us; 30us; 22us; 30us; 24us; 30us; 26us; 30us; 28us; 258us; 61us; 63us; 65us; 86us; 69us; 86us; 79us; 86us; 82us; 86us; 96us; 97us; 112us; 86us; 115us; 86us; 119us; 86us; 122us; 337us; 125us; 337us; 128us; 523us; 131us; 170us; 133us; 169us; 146us; 169us; 152us; 169us; 156us; 169us; 160us; 169us; 167us; 169us; 191us; 337us; 210us; 169us; 224us; 226us; 228us; 240us; 231us; 240us; 243us; 240us; 247us; 258us; 249us; 240us; 254us; 240us; 265us; 337us; 278us; 240us; 288us; 240us; 293us; 414us; 340us; 337us; 343us; 347us; 344us; 523us; 352us; 523us; 354us; 415us; 356us; 414us; 370us; 414us; 374us; 414us; 376us; 414us; 380us; 414us; 386us; 414us; 389us; 414us; 400us; 401us; 447us; 337us; 482us; 510us; 485us; 414us; 502us; 510us; 508us; 510us; 535us; 673us; 544us; 673us; 564us; 573us; 569us; 573us; 570us; 573us; 576us; 573us; 581us; 573us; 606us; 169us; 613us; 169us; 622us; 632us; 625us; 632us; 630us; 632us; 670us; 673us; 683us; 684us; 696us; 747us; 702us; 747us; 714us; 741us; 719us; 728us; 724us; 728us; 726us; 728us; 744us; 747us; 1396us; 169us; 1500us; 511us; 1502us; 747us; 118us; 65535us; 0us; 296us; 2us; 272us; 4us; 272us; 22us; 272us; 24us; 272us; 26us; 272us; 28us; 272us; 61us; 296us; 65us; 296us; 69us; 296us; 79us; 296us; 82us; 296us; 96us; 296us; 103us; 1566us; 112us; 296us; 115us; 296us; 119us; 296us; 122us; 296us; 125us; 296us; 128us; 296us; 131us; 296us; 133us; 296us; 143us; 1566us; 146us; 296us; 152us; 296us; 156us; 296us; 160us; 296us; 167us; 296us; 178us; 1566us; 191us; 296us; 194us; 1566us; 210us; 296us; 224us; 272us; 228us; 272us; 231us; 272us; 243us; 272us; 247us; 272us; 249us; 272us; 254us; 272us; 265us; 296us; 278us; 272us; 288us; 272us; 293us; 296us; 297us; 298us; 340us; 296us; 343us; 296us; 344us; 296us; 352us; 296us; 354us; 296us; 356us; 296us; 367us; 1566us; 370us; 296us; 374us; 296us; 376us; 296us; 380us; 296us; 386us; 296us; 389us; 296us; 400us; 296us; 430us; 1566us; 447us; 296us; 482us; 296us; 485us; 296us; 502us; 296us; 508us; 296us; 535us; 296us; 544us; 296us; 564us; 296us; 569us; 296us; 570us; 296us; 576us; 296us; 581us; 296us; 606us; 296us; 613us; 296us; 622us; 296us; 625us; 296us; 630us; 296us; 639us; 1566us; 670us; 296us; 683us; 296us; 696us; 296us; 702us; 296us; 714us; 296us; 719us; 296us; 724us; 296us; 726us; 296us; 744us; 296us; 820us; 820us; 821us; 820us; 823us; 820us; 858us; 935us; 870us; 935us; 886us; 935us; 889us; 935us; 900us; 935us; 908us; 935us; 930us; 935us; 935us; 935us; 936us; 935us; 938us; 935us; 939us; 935us; 940us; 935us; 941us; 935us; 947us; 935us; 949us; 935us; 1056us; 935us; 1206us; 935us; 1208us; 935us; 1213us; 935us; 1220us; 935us; 1396us; 296us; 1500us; 296us; 1502us; 296us; 1546us; 935us; 1548us; 935us; 1555us; 1566us; 1558us; 1566us; 1561us; 1566us; 1564us; 1566us; 118us; 65535us; 0us; 297us; 2us; 297us; 4us; 297us; 22us; 297us; 24us; 297us; 26us; 297us; 28us; 297us; 61us; 297us; 65us; 297us; 69us; 297us; 79us; 297us; 82us; 297us; 96us; 297us; 103us; 297us; 112us; 297us; 115us; 297us; 119us; 297us; 122us; 297us; 125us; 297us; 128us; 297us; 131us; 297us; 133us; 297us; 143us; 297us; 146us; 297us; 152us; 297us; 156us; 297us; 160us; 297us; 167us; 297us; 178us; 297us; 191us; 297us; 194us; 297us; 210us; 297us; 224us; 297us; 228us; 297us; 231us; 297us; 243us; 297us; 247us; 297us; 249us; 297us; 254us; 297us; 265us; 297us; 278us; 297us; 288us; 297us; 293us; 297us; 297us; 297us; 340us; 297us; 343us; 297us; 344us; 297us; 352us; 297us; 354us; 297us; 356us; 297us; 367us; 297us; 370us; 297us; 374us; 297us; 376us; 297us; 380us; 297us; 386us; 297us; 389us; 297us; 400us; 297us; 430us; 297us; 447us; 297us; 482us; 297us; 485us; 297us; 502us; 297us; 508us; 297us; 535us; 297us; 544us; 297us; 564us; 297us; 569us; 297us; 570us; 297us; 576us; 297us; 581us; 297us; 606us; 297us; 613us; 297us; 622us; 297us; 625us; 297us; 630us; 297us; 639us; 297us; 670us; 297us; 683us; 297us; 696us; 297us; 702us; 297us; 714us; 297us; 719us; 297us; 724us; 297us; 726us; 297us; 744us; 297us; 820us; 297us; 821us; 297us; 823us; 297us; 858us; 297us; 870us; 297us; 886us; 297us; 889us; 297us; 900us; 297us; 908us; 297us; 930us; 297us; 935us; 297us; 936us; 297us; 938us; 297us; 939us; 297us; 940us; 297us; 941us; 297us; 947us; 297us; 949us; 297us; 1056us; 297us; 1206us; 297us; 1208us; 297us; 1213us; 297us; 1220us; 297us; 1396us; 297us; 1500us; 297us; 1502us; 297us; 1546us; 297us; 1548us; 297us; 1555us; 297us; 1558us; 297us; 1561us; 297us; 1564us; 297us; 1us; 65535us; 299us; 300us; 2us; 65535us; 299us; 309us; 310us; 311us; 2us; 65535us; 299us; 315us; 310us; 315us; 4us; 65535us; 171us; 205us; 172us; 205us; 416us; 420us; 417us; 420us; 6us; 65535us; 122us; 127us; 125us; 127us; 191us; 127us; 265us; 343us; 340us; 343us; 447us; 343us; 2us; 65535us; 266us; 267us; 341us; 342us; 3us; 65535us; 265us; 266us; 340us; 341us; 447us; 448us; 2us; 65535us; 344us; 345us; 352us; 353us; 3us; 65535us; 344us; 362us; 352us; 362us; 354us; 355us; 3us; 65535us; 344us; 365us; 352us; 365us; 354us; 365us; 3us; 65535us; 344us; 369us; 352us; 369us; 354us; 369us; 3us; 65535us; 293us; 294us; 370us; 371us; 485us; 486us; 10us; 65535us; 293us; 384us; 354us; 377us; 356us; 357us; 370us; 384us; 374us; 387us; 376us; 377us; 380us; 381us; 386us; 387us; 389us; 390us; 485us; 384us; 10us; 65535us; 293us; 385us; 354us; 385us; 356us; 385us; 370us; 385us; 374us; 385us; 376us; 385us; 380us; 385us; 386us; 385us; 389us; 385us; 485us; 385us; 1us; 65535us; 408us; 411us; 2us; 65535us; 391us; 392us; 393us; 394us; 3us; 65535us; 391us; 397us; 393us; 397us; 398us; 399us; 3us; 65535us; 420us; 421us; 512us; 513us; 518us; 519us; 2us; 65535us; 416us; 426us; 417us; 426us; 10us; 65535us; 293us; 388us; 354us; 388us; 356us; 388us; 370us; 388us; 374us; 388us; 376us; 388us; 380us; 388us; 386us; 388us; 389us; 388us; 485us; 388us; 3us; 65535us; 332us; 437us; 416us; 435us; 417us; 435us; 2us; 65535us; 420us; 439us; 512us; 515us; 1us; 65535us; 458us; 459us; 44us; 65535us; 401us; 860us; 406us; 860us; 441us; 895us; 751us; 860us; 843us; 860us; 844us; 860us; 848us; 860us; 849us; 860us; 850us; 860us; 851us; 860us; 858us; 860us; 861us; 895us; 863us; 895us; 865us; 895us; 870us; 860us; 874us; 895us; 876us; 895us; 878us; 895us; 886us; 860us; 889us; 860us; 900us; 860us; 908us; 860us; 930us; 860us; 935us; 860us; 936us; 860us; 938us; 860us; 939us; 860us; 940us; 860us; 941us; 860us; 947us; 860us; 949us; 860us; 994us; 860us; 999us; 860us; 1056us; 860us; 1085us; 860us; 1092us; 860us; 1206us; 860us; 1208us; 860us; 1213us; 860us; 1220us; 860us; 1528us; 895us; 1533us; 895us; 1546us; 860us; 1548us; 860us; 10us; 65535us; 49us; 50us; 99us; 100us; 174us; 175us; 337us; 558us; 450us; 451us; 456us; 457us; 632us; 633us; 675us; 676us; 684us; 685us; 715us; 716us; 66us; 65535us; 30us; 481us; 49us; 477us; 63us; 481us; 86us; 481us; 99us; 477us; 169us; 481us; 170us; 481us; 174us; 477us; 226us; 481us; 240us; 481us; 258us; 481us; 337us; 477us; 347us; 481us; 401us; 472us; 406us; 472us; 414us; 481us; 415us; 481us; 441us; 472us; 450us; 477us; 456us; 477us; 523us; 481us; 632us; 477us; 675us; 477us; 684us; 477us; 715us; 477us; 751us; 472us; 843us; 472us; 844us; 472us; 848us; 472us; 849us; 472us; 850us; 472us; 851us; 472us; 858us; 472us; 861us; 472us; 863us; 472us; 865us; 472us; 870us; 472us; 874us; 472us; 876us; 472us; 878us; 472us; 886us; 472us; 889us; 472us; 900us; 472us; 908us; 472us; 930us; 472us; 935us; 472us; 936us; 472us; 938us; 472us; 939us; 472us; 940us; 472us; 941us; 472us; 947us; 472us; 949us; 472us; 994us; 472us; 999us; 472us; 1056us; 472us; 1085us; 472us; 1092us; 472us; 1206us; 472us; 1208us; 472us; 1213us; 472us; 1220us; 472us; 1528us; 472us; 1533us; 472us; 1546us; 472us; 1548us; 472us; 12us; 65535us; 30us; 31us; 63us; 64us; 86us; 87us; 169us; 171us; 170us; 172us; 226us; 227us; 240us; 241us; 258us; 259us; 347us; 348us; 414us; 416us; 415us; 417us; 523us; 524us; 1us; 65535us; 424us; 425us; 4us; 65535us; 357us; 358us; 359us; 360us; 362us; 363us; 680us; 681us; 2us; 65535us; 416us; 434us; 417us; 434us; 2us; 65535us; 350us; 351us; 442us; 443us; 2us; 65535us; 350us; 495us; 442us; 495us; 2us; 65535us; 489us; 490us; 492us; 493us; 3us; 65535us; 489us; 498us; 492us; 498us; 1274us; 1498us; 2us; 65535us; 482us; 483us; 1500us; 1505us; 4us; 65535us; 482us; 506us; 502us; 503us; 508us; 509us; 1500us; 506us; 4us; 65535us; 482us; 507us; 502us; 507us; 508us; 507us; 1500us; 507us; 2us; 65535us; 510us; 512us; 511us; 512us; 5us; 65535us; 128us; 140us; 131us; 140us; 344us; 364us; 352us; 364us; 354us; 364us; 6us; 65535us; 172us; 531us; 417us; 531us; 524us; 531us; 636us; 667us; 658us; 667us; 689us; 667us; 66us; 65535us; 8us; 1645us; 103us; 1645us; 143us; 1645us; 172us; 1645us; 178us; 1645us; 182us; 1645us; 184us; 1645us; 194us; 1645us; 367us; 1645us; 417us; 1645us; 423us; 1645us; 430us; 1645us; 453us; 1645us; 463us; 1645us; 524us; 1645us; 532us; 1645us; 596us; 1645us; 599us; 1645us; 609us; 1645us; 619us; 1645us; 636us; 1645us; 639us; 1645us; 658us; 1645us; 661us; 1645us; 664us; 1645us; 678us; 1645us; 689us; 1645us; 774us; 1645us; 818us; 1645us; 867us; 1645us; 933us; 1645us; 963us; 1645us; 1149us; 1645us; 1151us; 1645us; 1153us; 1645us; 1444us; 1645us; 1447us; 1645us; 1449us; 1645us; 1513us; 1645us; 1555us; 1645us; 1558us; 1645us; 1561us; 1645us; 1564us; 1645us; 1566us; 1645us; 1568us; 1645us; 1572us; 1645us; 1575us; 1645us; 1579us; 1645us; 1582us; 1645us; 1587us; 1645us; 1589us; 1645us; 1591us; 1645us; 1594us; 1645us; 1596us; 1645us; 1610us; 1645us; 1615us; 1645us; 1618us; 1645us; 1629us; 1645us; 1633us; 1645us; 1639us; 1645us; 1650us; 1645us; 1656us; 1645us; 1657us; 1645us; 1680us; 1645us; 1682us; 1645us; 1693us; 1645us; 67us; 65535us; 8us; 543us; 103us; 543us; 143us; 543us; 172us; 543us; 178us; 543us; 182us; 543us; 184us; 543us; 194us; 543us; 367us; 543us; 417us; 543us; 423us; 543us; 430us; 543us; 453us; 543us; 463us; 543us; 524us; 543us; 532us; 543us; 541us; 542us; 596us; 543us; 599us; 543us; 609us; 543us; 619us; 543us; 636us; 543us; 639us; 543us; 658us; 543us; 661us; 543us; 664us; 543us; 678us; 543us; 689us; 543us; 774us; 543us; 818us; 543us; 867us; 543us; 933us; 543us; 963us; 543us; 1149us; 543us; 1151us; 543us; 1153us; 543us; 1444us; 543us; 1447us; 543us; 1449us; 543us; 1513us; 543us; 1555us; 543us; 1558us; 543us; 1561us; 543us; 1564us; 543us; 1566us; 543us; 1568us; 543us; 1572us; 543us; 1575us; 543us; 1579us; 543us; 1582us; 543us; 1587us; 543us; 1589us; 543us; 1591us; 543us; 1594us; 543us; 1596us; 543us; 1610us; 543us; 1615us; 543us; 1618us; 543us; 1629us; 543us; 1633us; 543us; 1639us; 543us; 1650us; 543us; 1656us; 543us; 1657us; 543us; 1680us; 543us; 1682us; 543us; 1693us; 543us; 1us; 65535us; 532us; 533us; 5us; 65535us; 128us; 146us; 131us; 146us; 344us; 370us; 352us; 370us; 354us; 370us; 9us; 65535us; 171us; 182us; 172us; 182us; 416us; 423us; 417us; 423us; 1494us; 1513us; 1496us; 1513us; 1507us; 1513us; 1509us; 1513us; 1511us; 1513us; 1us; 65535us; 337us; 338us; 1us; 65535us; 558us; 560us; 3us; 65535us; 564us; 565us; 576us; 567us; 581us; 568us; 5us; 65535us; 564us; 572us; 569us; 571us; 570us; 571us; 576us; 572us; 581us; 572us; 1us; 65535us; 559us; 562us; 1us; 65535us; 581us; 582us; 4us; 65535us; 101us; 585us; 176us; 585us; 428us; 585us; 860us; 586us; 3us; 65535us; 101us; 102us; 176us; 177us; 428us; 429us; 1us; 65535us; 860us; 861us; 3us; 65535us; 338us; 339us; 567us; 577us; 582us; 583us; 3us; 65535us; 587us; 588us; 1552us; 589us; 1554us; 590us; 4us; 65535us; 587us; 593us; 591us; 592us; 1552us; 593us; 1554us; 593us; 1us; 65535us; 609us; 610us; 3us; 65535us; 172us; 530us; 417us; 530us; 524us; 530us; 5us; 65535us; 172us; 622us; 417us; 622us; 524us; 622us; 624us; 625us; 629us; 630us; 3us; 65535us; 622us; 623us; 625us; 626us; 630us; 631us; 3us; 65535us; 622us; 629us; 625us; 629us; 630us; 629us; 1us; 65535us; 633us; 634us; 3us; 65535us; 172us; 624us; 417us; 624us; 524us; 624us; 3us; 65535us; 172us; 627us; 417us; 627us; 524us; 627us; 4us; 65535us; 636us; 668us; 658us; 668us; 661us; 662us; 689us; 668us; 4us; 65535us; 636us; 660us; 658us; 660us; 661us; 660us; 689us; 660us; 3us; 65535us; 636us; 637us; 658us; 659us; 689us; 690us; 3us; 65535us; 535us; 536us; 544us; 545us; 670us; 671us; 3us; 65535us; 535us; 669us; 544us; 669us; 670us; 669us; 3us; 65535us; 186us; 187us; 189us; 190us; 673us; 674us; 4us; 65535us; 31us; 268us; 227us; 268us; 241us; 268us; 259us; 268us; 6us; 65535us; 31us; 683us; 64us; 683us; 87us; 683us; 227us; 683us; 241us; 683us; 259us; 683us; 6us; 65535us; 31us; 680us; 64us; 208us; 87us; 208us; 227us; 680us; 241us; 680us; 259us; 680us; 1us; 65535us; 685us; 686us; 1us; 65535us; 686us; 687us; 15us; 65535us; 2us; 274us; 4us; 274us; 22us; 274us; 24us; 274us; 26us; 274us; 28us; 274us; 224us; 274us; 228us; 274us; 231us; 274us; 243us; 274us; 247us; 274us; 249us; 274us; 254us; 274us; 278us; 274us; 288us; 274us; 116us; 65535us; 6us; 1005us; 31us; 261us; 106us; 1005us; 108us; 1005us; 227us; 261us; 241us; 261us; 259us; 260us; 263us; 1005us; 332us; 708us; 404us; 1005us; 409us; 1005us; 416us; 708us; 417us; 708us; 444us; 1005us; 460us; 1005us; 699us; 1005us; 705us; 1005us; 754us; 1005us; 758us; 1005us; 768us; 1005us; 951us; 1005us; 956us; 1005us; 970us; 1005us; 972us; 1005us; 975us; 1005us; 978us; 1005us; 995us; 1005us; 1000us; 1005us; 1006us; 1005us; 1009us; 1005us; 1012us; 1005us; 1018us; 1005us; 1022us; 1005us; 1026us; 1005us; 1030us; 1005us; 1032us; 1005us; 1037us; 1005us; 1039us; 1005us; 1041us; 1005us; 1043us; 1005us; 1045us; 1005us; 1047us; 1005us; 1058us; 1005us; 1066us; 1005us; 1073us; 1005us; 1079us; 1005us; 1081us; 1005us; 1086us; 1005us; 1090us; 1005us; 1093us; 1005us; 1097us; 1005us; 1100us; 1005us; 1103us; 1005us; 1105us; 1005us; 1110us; 1005us; 1112us; 1005us; 1155us; 1005us; 1157us; 1005us; 1161us; 1005us; 1162us; 1005us; 1163us; 1005us; 1164us; 1005us; 1165us; 1005us; 1166us; 1005us; 1167us; 1005us; 1168us; 1005us; 1169us; 1005us; 1170us; 1005us; 1171us; 1005us; 1173us; 1005us; 1174us; 1005us; 1175us; 1005us; 1176us; 1005us; 1177us; 1005us; 1178us; 1005us; 1179us; 1005us; 1180us; 1005us; 1181us; 1005us; 1203us; 1005us; 1225us; 1005us; 1226us; 1005us; 1230us; 1005us; 1232us; 1005us; 1236us; 1005us; 1238us; 1005us; 1242us; 1005us; 1245us; 1005us; 1247us; 1005us; 1311us; 1005us; 1318us; 1005us; 1325us; 1005us; 1332us; 1005us; 1341us; 1005us; 1344us; 1005us; 1346us; 1005us; 1349us; 1005us; 1360us; 1005us; 1367us; 1005us; 1368us; 1005us; 1374us; 1005us; 1380us; 1005us; 1381us; 1005us; 1382us; 1005us; 1398us; 1005us; 1408us; 1005us; 1421us; 1005us; 1422us; 1005us; 1424us; 1005us; 1426us; 1005us; 1430us; 1005us; 1431us; 1005us; 1458us; 1005us; 1463us; 1005us; 1488us; 1005us; 1530us; 1005us; 1535us; 1005us; 7us; 65535us; 31us; 264us; 227us; 264us; 241us; 264us; 259us; 264us; 332us; 709us; 416us; 709us; 417us; 709us; 116us; 65535us; 6us; 978us; 31us; 263us; 106us; 1009us; 108us; 1009us; 227us; 263us; 241us; 263us; 259us; 262us; 263us; 978us; 332us; 710us; 404us; 978us; 409us; 978us; 416us; 710us; 417us; 710us; 444us; 978us; 460us; 978us; 699us; 978us; 705us; 978us; 754us; 978us; 758us; 978us; 768us; 978us; 951us; 978us; 956us; 978us; 970us; 978us; 972us; 978us; 975us; 978us; 978us; 978us; 995us; 978us; 1000us; 978us; 1006us; 978us; 1009us; 978us; 1012us; 978us; 1018us; 978us; 1022us; 978us; 1026us; 978us; 1030us; 978us; 1032us; 1009us; 1037us; 1009us; 1039us; 1009us; 1041us; 1009us; 1043us; 1009us; 1045us; 1009us; 1047us; 978us; 1058us; 978us; 1066us; 978us; 1073us; 978us; 1079us; 1009us; 1081us; 1009us; 1086us; 978us; 1090us; 978us; 1093us; 978us; 1097us; 978us; 1100us; 978us; 1103us; 978us; 1105us; 978us; 1110us; 1009us; 1112us; 978us; 1155us; 1009us; 1157us; 1009us; 1161us; 1009us; 1162us; 1009us; 1163us; 1009us; 1164us; 1009us; 1165us; 1009us; 1166us; 1009us; 1167us; 1009us; 1168us; 1009us; 1169us; 1009us; 1170us; 1009us; 1171us; 1009us; 1173us; 1009us; 1174us; 1009us; 1175us; 1009us; 1176us; 1009us; 1177us; 1009us; 1178us; 1009us; 1179us; 1009us; 1180us; 1009us; 1181us; 1009us; 1203us; 978us; 1225us; 1009us; 1226us; 978us; 1230us; 1009us; 1232us; 978us; 1236us; 1009us; 1238us; 978us; 1242us; 1009us; 1245us; 1009us; 1247us; 1009us; 1311us; 978us; 1318us; 1009us; 1325us; 978us; 1332us; 978us; 1341us; 1009us; 1344us; 1009us; 1346us; 1009us; 1349us; 1009us; 1360us; 978us; 1367us; 978us; 1368us; 978us; 1374us; 978us; 1380us; 978us; 1381us; 978us; 1382us; 978us; 1398us; 978us; 1408us; 978us; 1421us; 1009us; 1422us; 1009us; 1424us; 978us; 1426us; 1009us; 1430us; 1009us; 1431us; 1009us; 1458us; 1009us; 1463us; 1009us; 1488us; 1009us; 1530us; 978us; 1535us; 978us; 115us; 65535us; 6us; 1015us; 31us; 1015us; 106us; 1015us; 108us; 1015us; 227us; 1015us; 241us; 1015us; 263us; 1015us; 332us; 711us; 404us; 1015us; 409us; 1015us; 416us; 711us; 417us; 711us; 444us; 1015us; 460us; 1015us; 699us; 1015us; 705us; 1015us; 754us; 1015us; 758us; 1015us; 768us; 1015us; 951us; 1015us; 956us; 1015us; 970us; 1015us; 972us; 1015us; 975us; 1015us; 978us; 1015us; 995us; 1015us; 1000us; 1015us; 1006us; 1015us; 1009us; 1015us; 1012us; 1015us; 1018us; 1015us; 1022us; 1015us; 1026us; 1015us; 1030us; 1015us; 1032us; 1015us; 1037us; 1015us; 1039us; 1015us; 1041us; 1015us; 1043us; 1015us; 1045us; 1015us; 1047us; 1015us; 1058us; 1015us; 1066us; 1015us; 1073us; 1015us; 1079us; 1015us; 1081us; 1015us; 1086us; 1015us; 1090us; 1015us; 1093us; 1015us; 1097us; 1015us; 1100us; 1015us; 1103us; 1015us; 1105us; 1015us; 1110us; 1015us; 1112us; 1015us; 1155us; 1015us; 1157us; 1015us; 1161us; 1015us; 1162us; 1015us; 1163us; 1015us; 1164us; 1015us; 1165us; 1015us; 1166us; 1015us; 1167us; 1015us; 1168us; 1015us; 1169us; 1015us; 1170us; 1015us; 1171us; 1015us; 1173us; 1015us; 1174us; 1015us; 1175us; 1015us; 1176us; 1015us; 1177us; 1015us; 1178us; 1015us; 1179us; 1015us; 1180us; 1015us; 1181us; 1015us; 1203us; 1015us; 1225us; 1015us; 1226us; 1015us; 1230us; 1015us; 1232us; 1015us; 1236us; 1015us; 1238us; 1015us; 1242us; 1015us; 1245us; 1015us; 1247us; 1015us; 1311us; 1015us; 1318us; 1015us; 1325us; 1015us; 1332us; 1015us; 1341us; 1015us; 1344us; 1015us; 1346us; 1015us; 1349us; 1015us; 1360us; 1015us; 1367us; 1015us; 1368us; 1015us; 1374us; 1015us; 1380us; 1015us; 1381us; 1015us; 1382us; 1015us; 1398us; 1015us; 1408us; 1015us; 1421us; 1015us; 1422us; 1015us; 1424us; 1015us; 1426us; 1015us; 1430us; 1015us; 1431us; 1015us; 1458us; 1015us; 1463us; 1015us; 1488us; 1015us; 1530us; 1015us; 1535us; 1015us; 3us; 65535us; 332us; 419us; 416us; 418us; 417us; 418us; 5us; 65535us; 703us; 704us; 706us; 707us; 1001us; 1002us; 1094us; 1095us; 1106us; 1107us; 116us; 65535us; 6us; 698us; 31us; 698us; 106us; 698us; 108us; 698us; 227us; 698us; 241us; 698us; 259us; 698us; 263us; 698us; 332us; 698us; 404us; 698us; 409us; 698us; 416us; 698us; 417us; 698us; 444us; 698us; 460us; 698us; 699us; 698us; 705us; 698us; 754us; 698us; 758us; 698us; 768us; 698us; 951us; 698us; 956us; 698us; 970us; 698us; 972us; 698us; 975us; 698us; 978us; 698us; 995us; 698us; 1000us; 698us; 1006us; 698us; 1009us; 698us; 1012us; 698us; 1018us; 698us; 1022us; 698us; 1026us; 698us; 1030us; 698us; 1032us; 698us; 1037us; 698us; 1039us; 698us; 1041us; 698us; 1043us; 698us; 1045us; 698us; 1047us; 698us; 1058us; 698us; 1066us; 698us; 1073us; 698us; 1079us; 698us; 1081us; 698us; 1086us; 698us; 1090us; 698us; 1093us; 698us; 1097us; 698us; 1100us; 698us; 1103us; 698us; 1105us; 698us; 1110us; 698us; 1112us; 698us; 1155us; 698us; 1157us; 698us; 1161us; 698us; 1162us; 698us; 1163us; 698us; 1164us; 698us; 1165us; 698us; 1166us; 698us; 1167us; 698us; 1168us; 698us; 1169us; 698us; 1170us; 698us; 1171us; 698us; 1173us; 698us; 1174us; 698us; 1175us; 698us; 1176us; 698us; 1177us; 698us; 1178us; 698us; 1179us; 698us; 1180us; 698us; 1181us; 698us; 1203us; 698us; 1225us; 698us; 1226us; 698us; 1230us; 698us; 1232us; 698us; 1236us; 698us; 1238us; 698us; 1242us; 698us; 1245us; 698us; 1247us; 698us; 1311us; 698us; 1318us; 698us; 1325us; 698us; 1332us; 698us; 1341us; 698us; 1344us; 698us; 1346us; 698us; 1349us; 698us; 1360us; 698us; 1367us; 698us; 1368us; 698us; 1374us; 698us; 1380us; 698us; 1381us; 698us; 1382us; 698us; 1398us; 698us; 1408us; 698us; 1421us; 698us; 1422us; 698us; 1424us; 698us; 1426us; 698us; 1430us; 698us; 1431us; 698us; 1458us; 698us; 1463us; 698us; 1488us; 698us; 1530us; 698us; 1535us; 698us; 1us; 65535us; 719us; 720us; 1us; 65535us; 719us; 722us; 3us; 65535us; 719us; 723us; 724us; 725us; 726us; 727us; 2us; 65535us; 728us; 729us; 741us; 732us; 1us; 65535us; 714us; 715us; 4us; 65535us; 696us; 697us; 702us; 703us; 1500us; 1501us; 1502us; 1503us; 2us; 65535us; 742us; 743us; 745us; 746us; 5us; 65535us; 696us; 742us; 702us; 742us; 744us; 745us; 1500us; 742us; 1502us; 742us; 2us; 65535us; 511us; 748us; 747us; 748us; 1us; 65535us; 754us; 755us; 2us; 65535us; 754us; 762us; 758us; 759us; 1us; 65535us; 763us; 764us; 1us; 65535us; 764us; 765us; 1us; 65535us; 766us; 767us; 2us; 65535us; 766us; 772us; 770us; 771us; 262us; 65535us; 6us; 809us; 8us; 1664us; 31us; 809us; 103us; 1664us; 106us; 809us; 108us; 809us; 143us; 1664us; 172us; 1664us; 178us; 1664us; 182us; 1664us; 184us; 1664us; 194us; 1664us; 227us; 809us; 241us; 809us; 263us; 809us; 313us; 809us; 317us; 809us; 322us; 809us; 367us; 1664us; 401us; 809us; 404us; 809us; 406us; 809us; 409us; 809us; 417us; 1664us; 423us; 1664us; 430us; 1664us; 441us; 809us; 444us; 809us; 453us; 1664us; 460us; 809us; 463us; 1664us; 488us; 1664us; 491us; 809us; 524us; 1664us; 532us; 1664us; 550us; 1664us; 596us; 1664us; 599us; 1664us; 609us; 1664us; 619us; 1664us; 636us; 1664us; 639us; 1664us; 642us; 809us; 654us; 809us; 658us; 1664us; 661us; 1664us; 664us; 1664us; 678us; 1664us; 689us; 1664us; 699us; 809us; 705us; 809us; 751us; 809us; 754us; 809us; 758us; 809us; 768us; 809us; 774us; 1664us; 818us; 1664us; 843us; 809us; 844us; 809us; 848us; 809us; 849us; 809us; 850us; 809us; 851us; 809us; 858us; 809us; 861us; 809us; 863us; 809us; 865us; 809us; 867us; 1664us; 870us; 809us; 874us; 809us; 876us; 809us; 878us; 809us; 886us; 809us; 889us; 809us; 900us; 809us; 908us; 809us; 930us; 809us; 933us; 1664us; 935us; 809us; 936us; 809us; 938us; 809us; 939us; 809us; 940us; 809us; 941us; 809us; 947us; 809us; 949us; 809us; 951us; 809us; 956us; 809us; 963us; 1664us; 970us; 809us; 972us; 809us; 975us; 809us; 978us; 809us; 994us; 809us; 995us; 809us; 999us; 809us; 1000us; 809us; 1006us; 809us; 1009us; 809us; 1012us; 809us; 1018us; 809us; 1022us; 809us; 1026us; 809us; 1030us; 809us; 1032us; 809us; 1037us; 809us; 1039us; 809us; 1041us; 809us; 1043us; 809us; 1045us; 809us; 1047us; 809us; 1056us; 809us; 1058us; 809us; 1066us; 809us; 1073us; 809us; 1079us; 809us; 1081us; 809us; 1085us; 809us; 1086us; 809us; 1090us; 809us; 1092us; 809us; 1093us; 809us; 1097us; 809us; 1100us; 809us; 1103us; 809us; 1105us; 809us; 1110us; 809us; 1112us; 809us; 1149us; 1664us; 1151us; 1664us; 1153us; 1664us; 1155us; 809us; 1157us; 809us; 1161us; 809us; 1162us; 809us; 1163us; 809us; 1164us; 809us; 1165us; 809us; 1166us; 809us; 1167us; 809us; 1168us; 809us; 1169us; 809us; 1170us; 809us; 1171us; 809us; 1173us; 809us; 1174us; 809us; 1175us; 809us; 1176us; 809us; 1177us; 809us; 1178us; 809us; 1179us; 809us; 1180us; 809us; 1181us; 809us; 1203us; 809us; 1206us; 809us; 1208us; 809us; 1213us; 809us; 1220us; 809us; 1225us; 809us; 1226us; 809us; 1230us; 809us; 1232us; 809us; 1236us; 809us; 1238us; 809us; 1242us; 809us; 1245us; 809us; 1247us; 809us; 1249us; 809us; 1250us; 809us; 1252us; 809us; 1253us; 809us; 1255us; 809us; 1256us; 809us; 1258us; 809us; 1259us; 809us; 1261us; 809us; 1262us; 809us; 1264us; 809us; 1265us; 809us; 1267us; 1664us; 1268us; 1664us; 1271us; 809us; 1272us; 809us; 1277us; 809us; 1279us; 809us; 1281us; 809us; 1282us; 809us; 1283us; 809us; 1286us; 809us; 1293us; 809us; 1294us; 809us; 1297us; 809us; 1298us; 809us; 1311us; 809us; 1318us; 809us; 1325us; 809us; 1332us; 809us; 1341us; 809us; 1344us; 809us; 1346us; 809us; 1349us; 809us; 1360us; 809us; 1367us; 809us; 1368us; 809us; 1374us; 809us; 1380us; 809us; 1381us; 809us; 1382us; 809us; 1398us; 809us; 1408us; 809us; 1421us; 809us; 1422us; 809us; 1424us; 809us; 1426us; 809us; 1430us; 809us; 1431us; 809us; 1438us; 809us; 1444us; 1664us; 1447us; 1664us; 1449us; 1664us; 1451us; 1664us; 1453us; 809us; 1458us; 809us; 1463us; 809us; 1488us; 809us; 1513us; 1664us; 1521us; 809us; 1528us; 809us; 1530us; 809us; 1533us; 809us; 1535us; 809us; 1546us; 809us; 1548us; 809us; 1555us; 1664us; 1558us; 1664us; 1561us; 1664us; 1564us; 1664us; 1566us; 1664us; 1568us; 1664us; 1572us; 1664us; 1575us; 1664us; 1579us; 1664us; 1582us; 1664us; 1587us; 1664us; 1589us; 1664us; 1591us; 1664us; 1594us; 1664us; 1596us; 1664us; 1610us; 1664us; 1615us; 1664us; 1618us; 1664us; 1629us; 1664us; 1633us; 1664us; 1639us; 1664us; 1646us; 1664us; 1650us; 1664us; 1656us; 1664us; 1657us; 1664us; 1666us; 809us; 1680us; 1664us; 1682us; 1664us; 1693us; 1664us; 1us; 65535us; 803us; 804us; 4us; 65535us; 807us; 808us; 1603us; 806us; 1637us; 806us; 1708us; 806us; 3us; 65535us; 1603us; 1604us; 1637us; 1638us; 1708us; 1709us; 190us; 65535us; 6us; 1350us; 31us; 1350us; 106us; 1350us; 108us; 1350us; 227us; 1350us; 241us; 1350us; 263us; 1350us; 313us; 1350us; 317us; 1350us; 322us; 1350us; 401us; 896us; 404us; 1350us; 406us; 896us; 409us; 1350us; 441us; 896us; 444us; 1350us; 460us; 1350us; 491us; 1350us; 642us; 643us; 654us; 655us; 699us; 1350us; 705us; 1350us; 751us; 896us; 754us; 1350us; 758us; 1350us; 768us; 1350us; 843us; 896us; 844us; 896us; 848us; 896us; 849us; 896us; 850us; 896us; 851us; 896us; 858us; 896us; 861us; 896us; 863us; 896us; 865us; 896us; 870us; 896us; 874us; 896us; 876us; 896us; 878us; 896us; 886us; 896us; 889us; 896us; 900us; 896us; 908us; 896us; 930us; 896us; 935us; 896us; 936us; 896us; 938us; 896us; 939us; 896us; 940us; 896us; 941us; 896us; 947us; 896us; 949us; 896us; 951us; 1350us; 956us; 1350us; 970us; 1350us; 972us; 1350us; 975us; 1350us; 978us; 1350us; 994us; 896us; 995us; 1350us; 999us; 896us; 1000us; 1350us; 1006us; 1350us; 1009us; 1350us; 1012us; 1350us; 1018us; 1350us; 1022us; 1350us; 1026us; 1350us; 1030us; 1350us; 1032us; 1350us; 1037us; 1350us; 1039us; 1350us; 1041us; 1350us; 1043us; 1350us; 1045us; 1350us; 1047us; 1350us; 1056us; 896us; 1058us; 1350us; 1066us; 1350us; 1073us; 1350us; 1079us; 1350us; 1081us; 1350us; 1085us; 896us; 1086us; 1350us; 1090us; 1350us; 1092us; 896us; 1093us; 1350us; 1097us; 1350us; 1100us; 1350us; 1103us; 1350us; 1105us; 1350us; 1110us; 1350us; 1112us; 1350us; 1155us; 1350us; 1157us; 1350us; 1161us; 1350us; 1162us; 1350us; 1163us; 1350us; 1164us; 1350us; 1165us; 1350us; 1166us; 1350us; 1167us; 1350us; 1168us; 1350us; 1169us; 1350us; 1170us; 1350us; 1171us; 1350us; 1173us; 1350us; 1174us; 1350us; 1175us; 1350us; 1176us; 1350us; 1177us; 1350us; 1178us; 1350us; 1179us; 1350us; 1180us; 1350us; 1181us; 1350us; 1203us; 1350us; 1206us; 896us; 1208us; 896us; 1213us; 896us; 1220us; 896us; 1225us; 1350us; 1226us; 1350us; 1230us; 1350us; 1232us; 1350us; 1236us; 1350us; 1238us; 1350us; 1242us; 1350us; 1245us; 1350us; 1247us; 1350us; 1249us; 1350us; 1250us; 1350us; 1252us; 1350us; 1253us; 1350us; 1255us; 1350us; 1256us; 1350us; 1258us; 1350us; 1259us; 1350us; 1261us; 1350us; 1262us; 1350us; 1264us; 1350us; 1265us; 1350us; 1271us; 1350us; 1272us; 1350us; 1277us; 1350us; 1279us; 1350us; 1281us; 1350us; 1282us; 1350us; 1283us; 1350us; 1286us; 1350us; 1293us; 1350us; 1294us; 1350us; 1297us; 1350us; 1298us; 1350us; 1311us; 1350us; 1318us; 1350us; 1325us; 1350us; 1332us; 1350us; 1341us; 1350us; 1344us; 1350us; 1346us; 1350us; 1349us; 1350us; 1360us; 1350us; 1367us; 1350us; 1368us; 1350us; 1374us; 1350us; 1380us; 1350us; 1381us; 1350us; 1382us; 1350us; 1398us; 1350us; 1408us; 1350us; 1421us; 1350us; 1422us; 1350us; 1424us; 1350us; 1426us; 1350us; 1430us; 1350us; 1431us; 1350us; 1438us; 1350us; 1453us; 1350us; 1458us; 1350us; 1463us; 1350us; 1488us; 1350us; 1521us; 1350us; 1528us; 896us; 1530us; 1350us; 1533us; 896us; 1535us; 1350us; 1546us; 896us; 1548us; 896us; 1666us; 1350us; 3us; 65535us; 401us; 402us; 406us; 407us; 751us; 752us; 3us; 65535us; 820us; 816us; 821us; 817us; 823us; 817us; 2us; 65535us; 821us; 822us; 823us; 824us; 1us; 65535us; 349us; 350us; 13us; 65535us; 401us; 812us; 406us; 812us; 751us; 812us; 843us; 831us; 844us; 832us; 848us; 833us; 849us; 834us; 850us; 835us; 851us; 836us; 994us; 837us; 999us; 838us; 1085us; 839us; 1092us; 840us; 13us; 65535us; 401us; 845us; 406us; 845us; 751us; 845us; 843us; 845us; 844us; 845us; 848us; 845us; 849us; 845us; 850us; 845us; 851us; 845us; 994us; 845us; 999us; 845us; 1085us; 845us; 1092us; 845us; 13us; 65535us; 401us; 846us; 406us; 846us; 751us; 846us; 843us; 846us; 844us; 846us; 848us; 846us; 849us; 846us; 850us; 846us; 851us; 846us; 994us; 846us; 999us; 846us; 1085us; 846us; 1092us; 846us; 2us; 65535us; 854us; 855us; 870us; 871us; 2us; 65535us; 854us; 852us; 870us; 852us; 35us; 65535us; 401us; 847us; 406us; 847us; 751us; 847us; 843us; 847us; 844us; 847us; 848us; 847us; 849us; 847us; 850us; 847us; 851us; 847us; 858us; 937us; 870us; 937us; 886us; 937us; 889us; 937us; 900us; 937us; 908us; 937us; 930us; 937us; 935us; 937us; 936us; 937us; 938us; 937us; 939us; 937us; 940us; 937us; 941us; 937us; 947us; 937us; 949us; 937us; 994us; 847us; 999us; 847us; 1056us; 937us; 1085us; 847us; 1092us; 847us; 1206us; 937us; 1208us; 937us; 1213us; 937us; 1220us; 937us; 1546us; 937us; 1548us; 937us; 3us; 65535us; 861us; 862us; 863us; 864us; 865us; 866us; 8us; 65535us; 861us; 873us; 863us; 873us; 865us; 873us; 874us; 875us; 876us; 877us; 878us; 879us; 1528us; 1529us; 1533us; 1534us; 44us; 65535us; 401us; 869us; 406us; 869us; 441us; 442us; 751us; 869us; 843us; 869us; 844us; 869us; 848us; 869us; 849us; 869us; 850us; 869us; 851us; 869us; 858us; 869us; 861us; 874us; 863us; 874us; 865us; 874us; 870us; 869us; 874us; 874us; 876us; 874us; 878us; 874us; 886us; 869us; 889us; 869us; 900us; 869us; 908us; 869us; 930us; 869us; 935us; 869us; 936us; 869us; 938us; 869us; 939us; 869us; 940us; 869us; 941us; 869us; 947us; 869us; 949us; 869us; 994us; 869us; 999us; 869us; 1056us; 869us; 1085us; 869us; 1092us; 869us; 1206us; 869us; 1208us; 869us; 1213us; 869us; 1220us; 869us; 1528us; 874us; 1533us; 874us; 1546us; 869us; 1548us; 869us; 2us; 65535us; 870us; 901us; 900us; 901us; 22us; 65535us; 858us; 859us; 870us; 915us; 886us; 925us; 889us; 925us; 900us; 915us; 908us; 922us; 930us; 916us; 935us; 917us; 936us; 918us; 938us; 919us; 939us; 920us; 940us; 921us; 941us; 923us; 947us; 924us; 949us; 925us; 1056us; 926us; 1206us; 927us; 1208us; 927us; 1213us; 927us; 1220us; 927us; 1546us; 927us; 1548us; 927us; 22us; 65535us; 858us; 931us; 870us; 931us; 886us; 931us; 889us; 931us; 900us; 931us; 908us; 909us; 930us; 931us; 935us; 931us; 936us; 931us; 938us; 931us; 939us; 931us; 940us; 931us; 941us; 931us; 947us; 931us; 949us; 931us; 1056us; 931us; 1206us; 931us; 1208us; 931us; 1213us; 931us; 1220us; 931us; 1546us; 931us; 1548us; 931us; 22us; 65535us; 858us; 932us; 870us; 932us; 886us; 932us; 889us; 932us; 900us; 932us; 908us; 932us; 930us; 932us; 935us; 932us; 936us; 932us; 938us; 932us; 939us; 932us; 940us; 932us; 941us; 932us; 947us; 932us; 949us; 932us; 1056us; 932us; 1206us; 932us; 1208us; 932us; 1213us; 932us; 1220us; 932us; 1546us; 932us; 1548us; 932us; 2us; 65535us; 883us; 884us; 944us; 945us; 2us; 65535us; 883us; 942us; 944us; 942us; 3us; 65535us; 886us; 887us; 889us; 890us; 949us; 950us; 25us; 65535us; 263us; 1010us; 404us; 405us; 409us; 410us; 444us; 445us; 460us; 461us; 699us; 700us; 705us; 706us; 768us; 769us; 978us; 1010us; 995us; 996us; 1000us; 1001us; 1009us; 1010us; 1012us; 1013us; 1030us; 1031us; 1047us; 1048us; 1058us; 1059us; 1066us; 1067us; 1073us; 1074us; 1086us; 1087us; 1090us; 1091us; 1093us; 1094us; 1097us; 1098us; 1103us; 1104us; 1105us; 1106us; 1530us; 1531us; 6us; 65535us; 1041us; 1042us; 1043us; 1044us; 1157us; 1158us; 1458us; 1459us; 1463us; 1464us; 1488us; 1489us; 5us; 65535us; 1026us; 1027us; 1112us; 1113us; 1226us; 1227us; 1424us; 1425us; 1535us; 1536us; 52us; 65535us; 6us; 965us; 263us; 955us; 404us; 955us; 409us; 955us; 444us; 955us; 460us; 955us; 699us; 955us; 705us; 955us; 754us; 763us; 758us; 763us; 768us; 955us; 951us; 952us; 956us; 957us; 975us; 976us; 978us; 955us; 995us; 955us; 1000us; 955us; 1006us; 1007us; 1009us; 955us; 1012us; 955us; 1018us; 1019us; 1022us; 1023us; 1026us; 960us; 1030us; 955us; 1047us; 955us; 1058us; 955us; 1066us; 955us; 1073us; 955us; 1086us; 955us; 1090us; 955us; 1093us; 955us; 1097us; 955us; 1100us; 1101us; 1103us; 955us; 1105us; 955us; 1112us; 960us; 1203us; 1204us; 1226us; 960us; 1232us; 1233us; 1238us; 1239us; 1325us; 1330us; 1332us; 1333us; 1360us; 1361us; 1367us; 1369us; 1368us; 1369us; 1380us; 1400us; 1381us; 1400us; 1382us; 1400us; 1398us; 1399us; 1424us; 960us; 1530us; 955us; 1535us; 960us; 1us; 65535us; 6us; 7us; 57us; 65535us; 6us; 962us; 263us; 962us; 404us; 962us; 409us; 962us; 444us; 962us; 460us; 962us; 699us; 962us; 705us; 962us; 754us; 962us; 758us; 962us; 768us; 962us; 951us; 962us; 956us; 962us; 970us; 971us; 972us; 973us; 975us; 962us; 978us; 962us; 995us; 962us; 1000us; 962us; 1006us; 962us; 1009us; 962us; 1012us; 962us; 1018us; 962us; 1022us; 962us; 1026us; 962us; 1030us; 962us; 1047us; 962us; 1058us; 962us; 1066us; 962us; 1073us; 962us; 1086us; 962us; 1090us; 962us; 1093us; 962us; 1097us; 962us; 1100us; 962us; 1103us; 962us; 1105us; 962us; 1112us; 962us; 1203us; 962us; 1226us; 962us; 1232us; 962us; 1238us; 962us; 1311us; 1419us; 1325us; 962us; 1332us; 962us; 1360us; 962us; 1367us; 962us; 1368us; 962us; 1374us; 1419us; 1380us; 962us; 1381us; 962us; 1382us; 962us; 1398us; 962us; 1408us; 1419us; 1424us; 962us; 1530us; 962us; 1535us; 962us; 101us; 65535us; 70us; 73us; 147us; 149us; 153us; 155us; 157us; 159us; 161us; 163us; 232us; 235us; 272us; 273us; 279us; 281us; 282us; 284us; 289us; 291us; 299us; 1855us; 301us; 1855us; 358us; 361us; 371us; 373us; 377us; 378us; 381us; 382us; 488us; 1855us; 503us; 505us; 527us; 528us; 536us; 538us; 545us; 547us; 703us; 713us; 706us; 713us; 753us; 757us; 759us; 761us; 823us; 830us; 824us; 827us; 870us; 906us; 900us; 906us; 901us; 903us; 908us; 914us; 909us; 911us; 926us; 1078us; 952us; 954us; 1001us; 713us; 1019us; 1021us; 1023us; 1025us; 1027us; 1029us; 1032us; 1036us; 1033us; 1035us; 1045us; 1054us; 1046us; 1053us; 1048us; 1050us; 1056us; 1855us; 1057us; 1855us; 1058us; 1855us; 1059us; 1855us; 1065us; 1072us; 1066us; 1071us; 1067us; 1069us; 1079us; 1083us; 1081us; 1084us; 1094us; 713us; 1106us; 713us; 1138us; 1244us; 1160us; 1320us; 1171us; 1172us; 1209us; 1211us; 1233us; 1235us; 1239us; 1241us; 1245us; 1855us; 1247us; 1855us; 1299us; 1324us; 1302us; 1324us; 1311us; 1316us; 1312us; 1314us; 1332us; 1339us; 1333us; 1334us; 1335us; 1337us; 1361us; 1363us; 1367us; 1373us; 1368us; 1373us; 1369us; 1371us; 1374us; 1379us; 1375us; 1377us; 1380us; 1393us; 1381us; 1393us; 1382us; 1393us; 1384us; 1849us; 1408us; 1413us; 1409us; 1411us; 1421us; 1423us; 1426us; 1855us; 1487us; 1855us; 1488us; 1855us; 1521us; 1526us; 1522us; 1524us; 1535us; 1541us; 1536us; 1538us; 1605us; 1662us; 1632us; 1685us; 1651us; 1654us; 1652us; 1654us; 1656us; 1663us; 1657us; 1661us; 1658us; 1660us; 1675us; 1855us; 1680us; 1691us; 1682us; 1855us; 1687us; 1855us; 1729us; 1855us; 4us; 65535us; 997us; 998us; 1003us; 1004us; 1089us; 1090us; 1096us; 1097us; 112us; 65535us; 6us; 967us; 31us; 32us; 106us; 107us; 108us; 109us; 227us; 242us; 241us; 242us; 263us; 967us; 404us; 967us; 409us; 967us; 444us; 967us; 460us; 967us; 699us; 967us; 705us; 967us; 754us; 967us; 758us; 967us; 768us; 967us; 951us; 967us; 956us; 967us; 970us; 967us; 972us; 967us; 975us; 967us; 978us; 967us; 995us; 967us; 1000us; 967us; 1006us; 967us; 1009us; 967us; 1012us; 967us; 1018us; 967us; 1022us; 967us; 1026us; 967us; 1030us; 967us; 1032us; 1033us; 1037us; 1038us; 1039us; 1040us; 1041us; 959us; 1043us; 959us; 1045us; 1046us; 1047us; 967us; 1058us; 967us; 1066us; 967us; 1073us; 967us; 1079us; 1080us; 1081us; 1082us; 1086us; 967us; 1090us; 967us; 1093us; 967us; 1097us; 967us; 1100us; 967us; 1103us; 967us; 1105us; 967us; 1110us; 1111us; 1112us; 967us; 1155us; 1114us; 1157us; 959us; 1161us; 1115us; 1162us; 1116us; 1163us; 1117us; 1164us; 1118us; 1165us; 1119us; 1166us; 1120us; 1167us; 1121us; 1168us; 1122us; 1169us; 1123us; 1170us; 1124us; 1171us; 1125us; 1173us; 1126us; 1174us; 1127us; 1175us; 1128us; 1176us; 1129us; 1177us; 1130us; 1178us; 1131us; 1179us; 1132us; 1180us; 1133us; 1181us; 1134us; 1203us; 967us; 1225us; 1135us; 1226us; 967us; 1230us; 1136us; 1232us; 967us; 1236us; 1137us; 1238us; 967us; 1242us; 1138us; 1245us; 1139us; 1247us; 1141us; 1311us; 969us; 1318us; 1140us; 1325us; 967us; 1332us; 968us; 1341us; 1142us; 1344us; 1142us; 1346us; 1142us; 1349us; 1143us; 1360us; 967us; 1367us; 967us; 1368us; 967us; 1374us; 969us; 1380us; 967us; 1381us; 967us; 1382us; 967us; 1398us; 967us; 1408us; 969us; 1421us; 1146us; 1422us; 1147us; 1424us; 967us; 1426us; 1144us; 1430us; 1145us; 1431us; 1148us; 1458us; 959us; 1463us; 959us; 1488us; 959us; 1530us; 967us; 1535us; 967us; 1us; 65535us; 1307us; 1308us; 3us; 65535us; 1019us; 1020us; 1023us; 1024us; 1027us; 1028us; 4us; 65535us; 1206us; 1207us; 1208us; 1209us; 1546us; 1547us; 1548us; 1549us; 6us; 65535us; 1206us; 1218us; 1208us; 1218us; 1213us; 1218us; 1220us; 1218us; 1546us; 1218us; 1548us; 1218us; 6us; 65535us; 1206us; 1212us; 1208us; 1212us; 1213us; 1214us; 1220us; 1221us; 1546us; 1212us; 1548us; 1212us; 1us; 65535us; 927us; 1217us; 1us; 65535us; 1218us; 1219us; 2us; 65535us; 1033us; 1034us; 1138us; 1243us; 2us; 65535us; 1033us; 1228us; 1138us; 1228us; 1us; 65535us; 1228us; 1229us; 112us; 65535us; 6us; 1159us; 31us; 1159us; 106us; 1159us; 108us; 1159us; 227us; 1159us; 241us; 1159us; 263us; 1159us; 404us; 1159us; 409us; 1159us; 444us; 1159us; 460us; 1159us; 699us; 1159us; 705us; 1159us; 754us; 1159us; 758us; 1159us; 768us; 1159us; 951us; 1159us; 956us; 1159us; 970us; 1159us; 972us; 1159us; 975us; 1159us; 978us; 1159us; 995us; 1159us; 1000us; 1159us; 1006us; 1159us; 1009us; 1159us; 1012us; 1159us; 1018us; 1159us; 1022us; 1159us; 1026us; 1159us; 1030us; 1159us; 1032us; 1159us; 1037us; 1159us; 1039us; 1159us; 1041us; 1159us; 1043us; 1159us; 1045us; 1159us; 1047us; 1159us; 1058us; 1159us; 1066us; 1159us; 1073us; 1159us; 1079us; 1159us; 1081us; 1159us; 1086us; 1159us; 1090us; 1159us; 1093us; 1159us; 1097us; 1159us; 1100us; 1159us; 1103us; 1159us; 1105us; 1159us; 1110us; 1159us; 1112us; 1159us; 1155us; 1159us; 1157us; 1159us; 1161us; 1159us; 1162us; 1159us; 1163us; 1159us; 1164us; 1159us; 1165us; 1159us; 1166us; 1159us; 1167us; 1159us; 1168us; 1159us; 1169us; 1159us; 1170us; 1159us; 1171us; 1159us; 1173us; 1159us; 1174us; 1159us; 1175us; 1159us; 1176us; 1159us; 1177us; 1159us; 1178us; 1159us; 1179us; 1159us; 1180us; 1159us; 1181us; 1159us; 1203us; 1159us; 1225us; 1159us; 1226us; 1159us; 1230us; 1159us; 1232us; 1159us; 1236us; 1159us; 1238us; 1159us; 1242us; 1159us; 1245us; 1159us; 1247us; 1159us; 1311us; 1159us; 1318us; 1160us; 1325us; 1159us; 1332us; 1159us; 1341us; 1159us; 1344us; 1159us; 1346us; 1159us; 1349us; 1159us; 1360us; 1159us; 1367us; 1159us; 1368us; 1159us; 1374us; 1159us; 1380us; 1159us; 1381us; 1159us; 1382us; 1159us; 1398us; 1159us; 1408us; 1159us; 1421us; 1159us; 1422us; 1159us; 1424us; 1159us; 1426us; 1159us; 1430us; 1159us; 1431us; 1159us; 1458us; 1159us; 1463us; 1159us; 1488us; 1159us; 1530us; 1159us; 1535us; 1159us; 126us; 65535us; 6us; 1156us; 31us; 1156us; 106us; 1156us; 108us; 1156us; 227us; 1156us; 241us; 1156us; 263us; 1156us; 404us; 1156us; 409us; 1156us; 444us; 1156us; 460us; 1156us; 699us; 1156us; 705us; 1156us; 754us; 1156us; 758us; 1156us; 768us; 1156us; 951us; 1156us; 956us; 1156us; 970us; 1156us; 972us; 1156us; 975us; 1156us; 978us; 1156us; 995us; 1156us; 1000us; 1156us; 1006us; 1156us; 1009us; 1156us; 1012us; 1156us; 1018us; 1156us; 1022us; 1156us; 1026us; 1156us; 1030us; 1156us; 1032us; 1156us; 1037us; 1156us; 1039us; 1156us; 1041us; 1156us; 1043us; 1156us; 1045us; 1156us; 1047us; 1156us; 1058us; 1156us; 1066us; 1156us; 1073us; 1156us; 1079us; 1156us; 1081us; 1156us; 1086us; 1156us; 1090us; 1156us; 1093us; 1156us; 1097us; 1156us; 1100us; 1156us; 1103us; 1156us; 1105us; 1156us; 1110us; 1156us; 1112us; 1156us; 1155us; 1156us; 1157us; 1156us; 1161us; 1156us; 1162us; 1156us; 1163us; 1156us; 1164us; 1156us; 1165us; 1156us; 1166us; 1156us; 1167us; 1156us; 1168us; 1156us; 1169us; 1156us; 1170us; 1156us; 1171us; 1156us; 1173us; 1156us; 1174us; 1156us; 1175us; 1156us; 1176us; 1156us; 1177us; 1156us; 1178us; 1156us; 1179us; 1156us; 1180us; 1156us; 1181us; 1156us; 1203us; 1156us; 1225us; 1156us; 1226us; 1156us; 1230us; 1156us; 1232us; 1156us; 1236us; 1156us; 1238us; 1156us; 1242us; 1156us; 1245us; 1156us; 1247us; 1156us; 1249us; 1251us; 1250us; 1251us; 1252us; 1254us; 1253us; 1254us; 1255us; 1257us; 1256us; 1257us; 1258us; 1260us; 1259us; 1260us; 1261us; 1263us; 1262us; 1263us; 1264us; 1266us; 1265us; 1266us; 1277us; 1278us; 1279us; 1280us; 1311us; 1156us; 1318us; 1156us; 1325us; 1156us; 1332us; 1156us; 1341us; 1156us; 1344us; 1156us; 1346us; 1156us; 1349us; 1156us; 1360us; 1156us; 1367us; 1156us; 1368us; 1156us; 1374us; 1156us; 1380us; 1156us; 1381us; 1156us; 1382us; 1156us; 1398us; 1156us; 1408us; 1156us; 1421us; 1156us; 1422us; 1156us; 1424us; 1156us; 1426us; 1156us; 1430us; 1156us; 1431us; 1156us; 1458us; 1156us; 1463us; 1156us; 1488us; 1156us; 1530us; 1156us; 1535us; 1156us; 127us; 65535us; 6us; 1281us; 31us; 1281us; 106us; 1281us; 108us; 1281us; 227us; 1281us; 241us; 1281us; 263us; 1281us; 404us; 1281us; 409us; 1281us; 444us; 1281us; 460us; 1281us; 699us; 1281us; 705us; 1281us; 754us; 1281us; 758us; 1281us; 768us; 1281us; 951us; 1281us; 956us; 1281us; 970us; 1281us; 972us; 1281us; 975us; 1281us; 978us; 1281us; 995us; 1281us; 1000us; 1281us; 1006us; 1281us; 1009us; 1281us; 1012us; 1281us; 1018us; 1281us; 1022us; 1281us; 1026us; 1281us; 1030us; 1281us; 1032us; 1281us; 1037us; 1281us; 1039us; 1281us; 1041us; 1281us; 1043us; 1281us; 1045us; 1281us; 1047us; 1281us; 1058us; 1281us; 1066us; 1281us; 1073us; 1281us; 1079us; 1281us; 1081us; 1281us; 1086us; 1281us; 1090us; 1281us; 1093us; 1281us; 1097us; 1281us; 1100us; 1281us; 1103us; 1281us; 1105us; 1281us; 1110us; 1281us; 1112us; 1281us; 1155us; 1281us; 1157us; 1281us; 1161us; 1281us; 1162us; 1281us; 1163us; 1281us; 1164us; 1281us; 1165us; 1281us; 1166us; 1281us; 1167us; 1281us; 1168us; 1281us; 1169us; 1281us; 1170us; 1281us; 1171us; 1281us; 1173us; 1281us; 1174us; 1281us; 1175us; 1281us; 1176us; 1281us; 1177us; 1281us; 1178us; 1281us; 1179us; 1281us; 1180us; 1281us; 1181us; 1281us; 1203us; 1281us; 1225us; 1281us; 1226us; 1281us; 1230us; 1281us; 1232us; 1281us; 1236us; 1281us; 1238us; 1281us; 1242us; 1281us; 1245us; 1281us; 1247us; 1281us; 1249us; 1281us; 1250us; 1281us; 1252us; 1281us; 1253us; 1281us; 1255us; 1281us; 1256us; 1281us; 1258us; 1281us; 1259us; 1281us; 1261us; 1281us; 1262us; 1281us; 1264us; 1281us; 1265us; 1281us; 1277us; 1281us; 1279us; 1281us; 1311us; 1281us; 1318us; 1281us; 1325us; 1281us; 1332us; 1281us; 1341us; 1281us; 1344us; 1281us; 1346us; 1281us; 1349us; 1281us; 1360us; 1281us; 1367us; 1281us; 1368us; 1281us; 1374us; 1281us; 1380us; 1281us; 1381us; 1281us; 1382us; 1281us; 1398us; 1281us; 1408us; 1282us; 1421us; 1281us; 1422us; 1281us; 1424us; 1281us; 1426us; 1281us; 1430us; 1281us; 1431us; 1281us; 1458us; 1281us; 1463us; 1281us; 1488us; 1281us; 1521us; 1283us; 1530us; 1281us; 1535us; 1281us; 4us; 65535us; 1281us; 1284us; 1282us; 1284us; 1283us; 1284us; 1438us; 1441us; 137us; 65535us; 6us; 1285us; 31us; 1285us; 106us; 1285us; 108us; 1285us; 227us; 1285us; 241us; 1285us; 263us; 1285us; 404us; 1285us; 409us; 1285us; 444us; 1285us; 460us; 1285us; 699us; 1285us; 705us; 1285us; 754us; 1285us; 758us; 1285us; 768us; 1285us; 951us; 1285us; 956us; 1285us; 970us; 1285us; 972us; 1285us; 975us; 1285us; 978us; 1285us; 995us; 1285us; 1000us; 1285us; 1006us; 1285us; 1009us; 1285us; 1012us; 1285us; 1018us; 1285us; 1022us; 1285us; 1026us; 1285us; 1030us; 1285us; 1032us; 1285us; 1037us; 1285us; 1039us; 1285us; 1041us; 1285us; 1043us; 1285us; 1045us; 1285us; 1047us; 1285us; 1058us; 1285us; 1066us; 1285us; 1073us; 1285us; 1079us; 1285us; 1081us; 1285us; 1086us; 1285us; 1090us; 1285us; 1093us; 1285us; 1097us; 1285us; 1100us; 1285us; 1103us; 1285us; 1105us; 1285us; 1110us; 1285us; 1112us; 1285us; 1155us; 1285us; 1157us; 1285us; 1161us; 1285us; 1162us; 1285us; 1163us; 1285us; 1164us; 1285us; 1165us; 1285us; 1166us; 1285us; 1167us; 1285us; 1168us; 1285us; 1169us; 1285us; 1170us; 1285us; 1171us; 1285us; 1173us; 1285us; 1174us; 1285us; 1175us; 1285us; 1176us; 1285us; 1177us; 1285us; 1178us; 1285us; 1179us; 1285us; 1180us; 1285us; 1181us; 1285us; 1203us; 1285us; 1225us; 1285us; 1226us; 1285us; 1230us; 1285us; 1232us; 1285us; 1236us; 1285us; 1238us; 1285us; 1242us; 1285us; 1245us; 1285us; 1247us; 1285us; 1249us; 1285us; 1250us; 1285us; 1252us; 1285us; 1253us; 1285us; 1255us; 1285us; 1256us; 1285us; 1258us; 1285us; 1259us; 1285us; 1261us; 1285us; 1262us; 1285us; 1264us; 1285us; 1265us; 1285us; 1277us; 1285us; 1279us; 1285us; 1281us; 1288us; 1282us; 1288us; 1283us; 1288us; 1286us; 1287us; 1293us; 1289us; 1294us; 1290us; 1297us; 1291us; 1298us; 1291us; 1311us; 1285us; 1318us; 1285us; 1325us; 1285us; 1332us; 1285us; 1341us; 1285us; 1344us; 1285us; 1346us; 1285us; 1349us; 1285us; 1360us; 1285us; 1367us; 1285us; 1368us; 1285us; 1374us; 1285us; 1380us; 1285us; 1381us; 1285us; 1382us; 1285us; 1398us; 1285us; 1408us; 1285us; 1421us; 1285us; 1422us; 1285us; 1424us; 1285us; 1426us; 1285us; 1430us; 1285us; 1431us; 1285us; 1438us; 1288us; 1458us; 1285us; 1463us; 1285us; 1488us; 1285us; 1521us; 1285us; 1530us; 1285us; 1535us; 1285us; 1666us; 1292us; 2us; 65535us; 1299us; 1300us; 1302us; 1303us; 2us; 65535us; 1332us; 1335us; 1341us; 1342us; 2us; 65535us; 1332us; 1340us; 1341us; 1340us; 4us; 65535us; 1332us; 1343us; 1341us; 1343us; 1344us; 1345us; 1346us; 1347us; 144us; 65535us; 6us; 1321us; 31us; 1321us; 106us; 1321us; 108us; 1321us; 227us; 1321us; 241us; 1321us; 263us; 1321us; 313us; 1442us; 317us; 1442us; 322us; 1442us; 404us; 1321us; 409us; 1321us; 444us; 1321us; 460us; 1321us; 491us; 492us; 699us; 1321us; 705us; 1321us; 754us; 1321us; 758us; 1321us; 768us; 1321us; 951us; 1321us; 956us; 1321us; 970us; 1321us; 972us; 1321us; 975us; 1321us; 978us; 1321us; 995us; 1321us; 1000us; 1321us; 1006us; 1321us; 1009us; 1321us; 1012us; 1321us; 1018us; 1321us; 1022us; 1321us; 1026us; 1321us; 1030us; 1321us; 1032us; 1321us; 1037us; 1321us; 1039us; 1321us; 1041us; 1321us; 1043us; 1321us; 1045us; 1321us; 1047us; 1321us; 1058us; 1321us; 1066us; 1321us; 1073us; 1321us; 1079us; 1321us; 1081us; 1321us; 1086us; 1321us; 1090us; 1321us; 1093us; 1321us; 1097us; 1321us; 1100us; 1321us; 1103us; 1321us; 1105us; 1321us; 1110us; 1321us; 1112us; 1321us; 1155us; 1321us; 1157us; 1321us; 1161us; 1321us; 1162us; 1321us; 1163us; 1321us; 1164us; 1321us; 1165us; 1321us; 1166us; 1321us; 1167us; 1321us; 1168us; 1321us; 1169us; 1321us; 1170us; 1321us; 1171us; 1321us; 1173us; 1321us; 1174us; 1321us; 1175us; 1321us; 1176us; 1321us; 1177us; 1321us; 1178us; 1321us; 1179us; 1321us; 1180us; 1321us; 1181us; 1321us; 1203us; 1321us; 1225us; 1321us; 1226us; 1321us; 1230us; 1321us; 1232us; 1321us; 1236us; 1321us; 1238us; 1321us; 1242us; 1321us; 1245us; 1321us; 1247us; 1321us; 1249us; 1321us; 1250us; 1321us; 1252us; 1321us; 1253us; 1321us; 1255us; 1321us; 1256us; 1321us; 1258us; 1321us; 1259us; 1321us; 1261us; 1321us; 1262us; 1321us; 1264us; 1321us; 1265us; 1321us; 1271us; 1273us; 1272us; 1274us; 1277us; 1321us; 1279us; 1321us; 1281us; 1321us; 1282us; 1321us; 1283us; 1321us; 1286us; 1321us; 1293us; 1321us; 1294us; 1321us; 1297us; 1321us; 1298us; 1321us; 1311us; 1321us; 1318us; 1321us; 1325us; 1321us; 1332us; 1321us; 1341us; 1321us; 1344us; 1321us; 1346us; 1321us; 1349us; 1321us; 1360us; 1321us; 1367us; 1321us; 1368us; 1321us; 1374us; 1321us; 1380us; 1321us; 1381us; 1321us; 1382us; 1321us; 1398us; 1321us; 1408us; 1321us; 1421us; 1321us; 1422us; 1321us; 1424us; 1321us; 1426us; 1321us; 1430us; 1321us; 1431us; 1321us; 1438us; 1321us; 1453us; 1442us; 1458us; 1321us; 1463us; 1321us; 1488us; 1321us; 1521us; 1321us; 1530us; 1321us; 1535us; 1321us; 1666us; 1321us; 144us; 65535us; 6us; 1359us; 31us; 1359us; 106us; 1359us; 108us; 1359us; 227us; 1359us; 241us; 1359us; 263us; 1359us; 313us; 1359us; 317us; 1359us; 322us; 1359us; 404us; 1359us; 409us; 1359us; 444us; 1359us; 460us; 1359us; 491us; 1359us; 699us; 1359us; 705us; 1359us; 754us; 1359us; 758us; 1359us; 768us; 1359us; 951us; 1359us; 956us; 1359us; 970us; 1359us; 972us; 1359us; 975us; 1359us; 978us; 1359us; 995us; 1359us; 1000us; 1359us; 1006us; 1359us; 1009us; 1359us; 1012us; 1359us; 1018us; 1359us; 1022us; 1359us; 1026us; 1359us; 1030us; 1359us; 1032us; 1359us; 1037us; 1359us; 1039us; 1359us; 1041us; 1359us; 1043us; 1359us; 1045us; 1359us; 1047us; 1359us; 1058us; 1359us; 1066us; 1359us; 1073us; 1359us; 1079us; 1359us; 1081us; 1359us; 1086us; 1359us; 1090us; 1359us; 1093us; 1359us; 1097us; 1359us; 1100us; 1359us; 1103us; 1359us; 1105us; 1359us; 1110us; 1359us; 1112us; 1359us; 1155us; 1359us; 1157us; 1359us; 1161us; 1359us; 1162us; 1359us; 1163us; 1359us; 1164us; 1359us; 1165us; 1359us; 1166us; 1359us; 1167us; 1359us; 1168us; 1359us; 1169us; 1359us; 1170us; 1359us; 1171us; 1359us; 1173us; 1359us; 1174us; 1359us; 1175us; 1359us; 1176us; 1359us; 1177us; 1359us; 1178us; 1359us; 1179us; 1359us; 1180us; 1359us; 1181us; 1359us; 1203us; 1359us; 1225us; 1359us; 1226us; 1359us; 1230us; 1359us; 1232us; 1359us; 1236us; 1359us; 1238us; 1359us; 1242us; 1359us; 1245us; 1359us; 1247us; 1359us; 1249us; 1359us; 1250us; 1359us; 1252us; 1359us; 1253us; 1359us; 1255us; 1359us; 1256us; 1359us; 1258us; 1359us; 1259us; 1359us; 1261us; 1359us; 1262us; 1359us; 1264us; 1359us; 1265us; 1359us; 1271us; 1359us; 1272us; 1359us; 1277us; 1359us; 1279us; 1359us; 1281us; 1359us; 1282us; 1359us; 1283us; 1359us; 1286us; 1359us; 1293us; 1359us; 1294us; 1359us; 1297us; 1359us; 1298us; 1359us; 1311us; 1359us; 1318us; 1359us; 1325us; 1359us; 1332us; 1359us; 1341us; 1359us; 1344us; 1359us; 1346us; 1359us; 1349us; 1359us; 1360us; 1359us; 1367us; 1359us; 1368us; 1359us; 1374us; 1359us; 1380us; 1359us; 1381us; 1359us; 1382us; 1359us; 1398us; 1359us; 1408us; 1359us; 1421us; 1359us; 1422us; 1359us; 1424us; 1359us; 1426us; 1359us; 1430us; 1359us; 1431us; 1359us; 1438us; 1359us; 1453us; 1359us; 1458us; 1359us; 1463us; 1359us; 1488us; 1359us; 1521us; 1359us; 1530us; 1359us; 1535us; 1359us; 1666us; 1359us; 188us; 65535us; 6us; 1357us; 31us; 1357us; 106us; 1357us; 108us; 1357us; 227us; 1357us; 241us; 1357us; 263us; 1357us; 313us; 1357us; 317us; 1357us; 322us; 1357us; 401us; 880us; 404us; 1357us; 406us; 880us; 409us; 1357us; 441us; 880us; 444us; 1357us; 460us; 1357us; 491us; 1357us; 699us; 1357us; 705us; 1357us; 751us; 880us; 754us; 1357us; 758us; 1357us; 768us; 1357us; 843us; 880us; 844us; 880us; 848us; 880us; 849us; 880us; 850us; 880us; 851us; 880us; 858us; 880us; 861us; 880us; 863us; 880us; 865us; 880us; 870us; 880us; 874us; 880us; 876us; 880us; 878us; 880us; 886us; 880us; 889us; 880us; 900us; 880us; 908us; 880us; 930us; 880us; 935us; 880us; 936us; 880us; 938us; 880us; 939us; 880us; 940us; 880us; 941us; 880us; 947us; 880us; 949us; 880us; 951us; 1357us; 956us; 1357us; 970us; 1357us; 972us; 1357us; 975us; 1357us; 978us; 1357us; 994us; 880us; 995us; 1357us; 999us; 880us; 1000us; 1357us; 1006us; 1357us; 1009us; 1357us; 1012us; 1357us; 1018us; 1357us; 1022us; 1357us; 1026us; 1357us; 1030us; 1357us; 1032us; 1357us; 1037us; 1357us; 1039us; 1357us; 1041us; 1357us; 1043us; 1357us; 1045us; 1357us; 1047us; 1357us; 1056us; 880us; 1058us; 1357us; 1066us; 1357us; 1073us; 1357us; 1079us; 1357us; 1081us; 1357us; 1085us; 880us; 1086us; 1357us; 1090us; 1357us; 1092us; 880us; 1093us; 1357us; 1097us; 1357us; 1100us; 1357us; 1103us; 1357us; 1105us; 1357us; 1110us; 1357us; 1112us; 1357us; 1155us; 1357us; 1157us; 1357us; 1161us; 1357us; 1162us; 1357us; 1163us; 1357us; 1164us; 1357us; 1165us; 1357us; 1166us; 1357us; 1167us; 1357us; 1168us; 1357us; 1169us; 1357us; 1170us; 1357us; 1171us; 1357us; 1173us; 1357us; 1174us; 1357us; 1175us; 1357us; 1176us; 1357us; 1177us; 1357us; 1178us; 1357us; 1179us; 1357us; 1180us; 1357us; 1181us; 1357us; 1203us; 1357us; 1206us; 880us; 1208us; 880us; 1213us; 880us; 1220us; 880us; 1225us; 1357us; 1226us; 1357us; 1230us; 1357us; 1232us; 1357us; 1236us; 1357us; 1238us; 1357us; 1242us; 1357us; 1245us; 1357us; 1247us; 1357us; 1249us; 1357us; 1250us; 1357us; 1252us; 1357us; 1253us; 1357us; 1255us; 1357us; 1256us; 1357us; 1258us; 1357us; 1259us; 1357us; 1261us; 1357us; 1262us; 1357us; 1264us; 1357us; 1265us; 1357us; 1271us; 1357us; 1272us; 1357us; 1277us; 1357us; 1279us; 1357us; 1281us; 1357us; 1282us; 1357us; 1283us; 1357us; 1286us; 1357us; 1293us; 1357us; 1294us; 1357us; 1297us; 1357us; 1298us; 1357us; 1311us; 1357us; 1318us; 1357us; 1325us; 1357us; 1332us; 1357us; 1341us; 1357us; 1344us; 1357us; 1346us; 1357us; 1349us; 1357us; 1360us; 1357us; 1367us; 1357us; 1368us; 1357us; 1374us; 1357us; 1380us; 1357us; 1381us; 1357us; 1382us; 1357us; 1398us; 1357us; 1408us; 1357us; 1421us; 1357us; 1422us; 1357us; 1424us; 1357us; 1426us; 1357us; 1430us; 1357us; 1431us; 1357us; 1438us; 1357us; 1453us; 1357us; 1458us; 1357us; 1463us; 1357us; 1488us; 1357us; 1521us; 1357us; 1528us; 880us; 1530us; 1357us; 1533us; 880us; 1535us; 1357us; 1546us; 880us; 1548us; 880us; 1666us; 1357us; 144us; 65535us; 6us; 1358us; 31us; 1358us; 106us; 1358us; 108us; 1358us; 227us; 1358us; 241us; 1358us; 263us; 1358us; 313us; 1358us; 317us; 1358us; 322us; 1358us; 404us; 1358us; 409us; 1358us; 444us; 1358us; 460us; 1358us; 491us; 1358us; 699us; 1358us; 705us; 1358us; 754us; 1358us; 758us; 1358us; 768us; 1358us; 951us; 1358us; 956us; 1358us; 970us; 1358us; 972us; 1358us; 975us; 1358us; 978us; 1358us; 995us; 1358us; 1000us; 1358us; 1006us; 1358us; 1009us; 1358us; 1012us; 1358us; 1018us; 1358us; 1022us; 1358us; 1026us; 1358us; 1030us; 1358us; 1032us; 1358us; 1037us; 1358us; 1039us; 1358us; 1041us; 1358us; 1043us; 1358us; 1045us; 1358us; 1047us; 1358us; 1058us; 1358us; 1066us; 1358us; 1073us; 1358us; 1079us; 1358us; 1081us; 1358us; 1086us; 1358us; 1090us; 1358us; 1093us; 1358us; 1097us; 1358us; 1100us; 1358us; 1103us; 1358us; 1105us; 1358us; 1110us; 1358us; 1112us; 1358us; 1155us; 1358us; 1157us; 1358us; 1161us; 1358us; 1162us; 1358us; 1163us; 1358us; 1164us; 1358us; 1165us; 1358us; 1166us; 1358us; 1167us; 1358us; 1168us; 1358us; 1169us; 1358us; 1170us; 1358us; 1171us; 1358us; 1173us; 1358us; 1174us; 1358us; 1175us; 1358us; 1176us; 1358us; 1177us; 1358us; 1178us; 1358us; 1179us; 1358us; 1180us; 1358us; 1181us; 1358us; 1203us; 1358us; 1225us; 1358us; 1226us; 1358us; 1230us; 1358us; 1232us; 1358us; 1236us; 1358us; 1238us; 1358us; 1242us; 1358us; 1245us; 1358us; 1247us; 1358us; 1249us; 1358us; 1250us; 1358us; 1252us; 1358us; 1253us; 1358us; 1255us; 1358us; 1256us; 1358us; 1258us; 1358us; 1259us; 1358us; 1261us; 1358us; 1262us; 1358us; 1264us; 1358us; 1265us; 1358us; 1271us; 1358us; 1272us; 1358us; 1277us; 1358us; 1279us; 1358us; 1281us; 1358us; 1282us; 1358us; 1283us; 1358us; 1286us; 1358us; 1293us; 1358us; 1294us; 1358us; 1297us; 1358us; 1298us; 1358us; 1311us; 1358us; 1318us; 1358us; 1325us; 1358us; 1332us; 1358us; 1341us; 1358us; 1344us; 1358us; 1346us; 1358us; 1349us; 1358us; 1360us; 1358us; 1367us; 1358us; 1368us; 1358us; 1374us; 1358us; 1380us; 1358us; 1381us; 1358us; 1382us; 1358us; 1398us; 1358us; 1408us; 1358us; 1421us; 1358us; 1422us; 1358us; 1424us; 1358us; 1426us; 1358us; 1430us; 1358us; 1431us; 1358us; 1438us; 1358us; 1453us; 1358us; 1458us; 1358us; 1463us; 1358us; 1488us; 1358us; 1521us; 1358us; 1530us; 1358us; 1535us; 1358us; 1666us; 1358us; 144us; 65535us; 6us; 1351us; 31us; 1351us; 106us; 1351us; 108us; 1351us; 227us; 1351us; 241us; 1351us; 263us; 1351us; 313us; 1351us; 317us; 1351us; 322us; 1351us; 404us; 1351us; 409us; 1351us; 444us; 1351us; 460us; 1351us; 491us; 1351us; 699us; 1351us; 705us; 1351us; 754us; 1351us; 758us; 1351us; 768us; 1351us; 951us; 1351us; 956us; 1351us; 970us; 1351us; 972us; 1351us; 975us; 1351us; 978us; 1351us; 995us; 1351us; 1000us; 1351us; 1006us; 1351us; 1009us; 1351us; 1012us; 1351us; 1018us; 1351us; 1022us; 1351us; 1026us; 1351us; 1030us; 1351us; 1032us; 1351us; 1037us; 1351us; 1039us; 1351us; 1041us; 1351us; 1043us; 1351us; 1045us; 1351us; 1047us; 1351us; 1058us; 1351us; 1066us; 1351us; 1073us; 1351us; 1079us; 1351us; 1081us; 1351us; 1086us; 1351us; 1090us; 1351us; 1093us; 1351us; 1097us; 1351us; 1100us; 1351us; 1103us; 1351us; 1105us; 1351us; 1110us; 1351us; 1112us; 1351us; 1155us; 1351us; 1157us; 1351us; 1161us; 1351us; 1162us; 1351us; 1163us; 1351us; 1164us; 1351us; 1165us; 1351us; 1166us; 1351us; 1167us; 1351us; 1168us; 1351us; 1169us; 1351us; 1170us; 1351us; 1171us; 1351us; 1173us; 1351us; 1174us; 1351us; 1175us; 1351us; 1176us; 1351us; 1177us; 1351us; 1178us; 1351us; 1179us; 1351us; 1180us; 1351us; 1181us; 1351us; 1203us; 1351us; 1225us; 1351us; 1226us; 1351us; 1230us; 1351us; 1232us; 1351us; 1236us; 1351us; 1238us; 1351us; 1242us; 1351us; 1245us; 1351us; 1247us; 1351us; 1249us; 1351us; 1250us; 1351us; 1252us; 1351us; 1253us; 1351us; 1255us; 1351us; 1256us; 1351us; 1258us; 1351us; 1259us; 1351us; 1261us; 1351us; 1262us; 1351us; 1264us; 1351us; 1265us; 1351us; 1271us; 1351us; 1272us; 1351us; 1277us; 1351us; 1279us; 1351us; 1281us; 1351us; 1282us; 1351us; 1283us; 1351us; 1286us; 1351us; 1293us; 1351us; 1294us; 1351us; 1297us; 1351us; 1298us; 1351us; 1311us; 1351us; 1318us; 1351us; 1325us; 1351us; 1332us; 1351us; 1341us; 1351us; 1344us; 1351us; 1346us; 1351us; 1349us; 1351us; 1360us; 1351us; 1367us; 1351us; 1368us; 1351us; 1374us; 1351us; 1380us; 1351us; 1381us; 1351us; 1382us; 1351us; 1398us; 1351us; 1408us; 1351us; 1421us; 1351us; 1422us; 1351us; 1424us; 1351us; 1426us; 1351us; 1430us; 1351us; 1431us; 1351us; 1438us; 1351us; 1453us; 1351us; 1458us; 1351us; 1463us; 1351us; 1488us; 1351us; 1521us; 1351us; 1530us; 1351us; 1535us; 1351us; 1666us; 1351us; 3us; 65535us; 1380us; 1384us; 1381us; 1384us; 1382us; 1384us; 3us; 65535us; 1380us; 1394us; 1381us; 1394us; 1382us; 1394us; 1us; 65535us; 1381us; 1404us; 144us; 65535us; 6us; 1352us; 31us; 1352us; 106us; 1352us; 108us; 1352us; 227us; 1352us; 241us; 1352us; 263us; 1352us; 313us; 1352us; 317us; 1352us; 322us; 1352us; 404us; 1352us; 409us; 1352us; 444us; 1352us; 460us; 1352us; 491us; 1352us; 699us; 1352us; 705us; 1352us; 754us; 1352us; 758us; 1352us; 768us; 1352us; 951us; 1352us; 956us; 1352us; 970us; 1352us; 972us; 1352us; 975us; 1352us; 978us; 1352us; 995us; 1352us; 1000us; 1352us; 1006us; 1352us; 1009us; 1352us; 1012us; 1352us; 1018us; 1352us; 1022us; 1352us; 1026us; 1352us; 1030us; 1352us; 1032us; 1352us; 1037us; 1352us; 1039us; 1352us; 1041us; 1352us; 1043us; 1352us; 1045us; 1352us; 1047us; 1352us; 1058us; 1352us; 1066us; 1352us; 1073us; 1352us; 1079us; 1352us; 1081us; 1352us; 1086us; 1352us; 1090us; 1352us; 1093us; 1352us; 1097us; 1352us; 1100us; 1352us; 1103us; 1352us; 1105us; 1352us; 1110us; 1352us; 1112us; 1352us; 1155us; 1352us; 1157us; 1352us; 1161us; 1352us; 1162us; 1352us; 1163us; 1352us; 1164us; 1352us; 1165us; 1352us; 1166us; 1352us; 1167us; 1352us; 1168us; 1352us; 1169us; 1352us; 1170us; 1352us; 1171us; 1352us; 1173us; 1352us; 1174us; 1352us; 1175us; 1352us; 1176us; 1352us; 1177us; 1352us; 1178us; 1352us; 1179us; 1352us; 1180us; 1352us; 1181us; 1352us; 1203us; 1352us; 1225us; 1352us; 1226us; 1352us; 1230us; 1352us; 1232us; 1352us; 1236us; 1352us; 1238us; 1352us; 1242us; 1352us; 1245us; 1352us; 1247us; 1352us; 1249us; 1352us; 1250us; 1352us; 1252us; 1352us; 1253us; 1352us; 1255us; 1352us; 1256us; 1352us; 1258us; 1352us; 1259us; 1352us; 1261us; 1352us; 1262us; 1352us; 1264us; 1352us; 1265us; 1352us; 1271us; 1352us; 1272us; 1352us; 1277us; 1352us; 1279us; 1352us; 1281us; 1352us; 1282us; 1352us; 1283us; 1352us; 1286us; 1352us; 1293us; 1352us; 1294us; 1352us; 1297us; 1352us; 1298us; 1352us; 1311us; 1352us; 1318us; 1352us; 1325us; 1352us; 1332us; 1352us; 1341us; 1352us; 1344us; 1352us; 1346us; 1352us; 1349us; 1352us; 1360us; 1352us; 1367us; 1352us; 1368us; 1352us; 1374us; 1352us; 1380us; 1352us; 1381us; 1352us; 1382us; 1352us; 1398us; 1352us; 1408us; 1352us; 1421us; 1352us; 1422us; 1352us; 1424us; 1352us; 1426us; 1352us; 1430us; 1352us; 1431us; 1352us; 1438us; 1352us; 1453us; 1352us; 1458us; 1352us; 1463us; 1352us; 1488us; 1352us; 1521us; 1352us; 1530us; 1352us; 1535us; 1352us; 1666us; 1352us; 1us; 65535us; 1408us; 1409us; 2us; 65535us; 1311us; 1312us; 1374us; 1375us; 3us; 65535us; 1311us; 1418us; 1374us; 1418us; 1408us; 1417us; 5us; 65535us; 1311us; 1420us; 1374us; 1420us; 1408us; 1420us; 1426us; 1427us; 1430us; 1432us; 1us; 65535us; 1108us; 1109us; 1us; 65535us; 1056us; 1057us; 1us; 65535us; 1056us; 1065us; 1us; 65535us; 1145us; 1431us; 3us; 65535us; 1380us; 1401us; 1381us; 1401us; 1382us; 1401us; 1us; 65535us; 1437us; 1438us; 4us; 65535us; 313us; 314us; 317us; 318us; 322us; 323us; 1453us; 1454us; 1us; 65535us; 1436us; 1437us; 1us; 65535us; 1438us; 1439us; 1us; 65535us; 1408us; 1415us; 2us; 65535us; 1408us; 1457us; 1521us; 1522us; 6us; 65535us; 1455us; 1456us; 1460us; 1461us; 1465us; 1466us; 1469us; 1470us; 1471us; 1472us; 1475us; 1476us; 6us; 65535us; 1455us; 1479us; 1460us; 1479us; 1465us; 1479us; 1469us; 1479us; 1471us; 1478us; 1475us; 1479us; 3us; 65535us; 1467us; 1487us; 1471us; 1487us; 1479us; 1487us; 5us; 65535us; 1454us; 1455us; 1459us; 1460us; 1464us; 1465us; 1468us; 1469us; 1474us; 1475us; 3us; 65535us; 1467us; 1468us; 1471us; 1474us; 1479us; 1486us; 1us; 65535us; 1408us; 1416us; 1us; 65535us; 1408us; 1492us; 1us; 65535us; 1514us; 1515us; 2us; 65535us; 1492us; 1493us; 1514us; 1499us; 1us; 65535us; 1496us; 1497us; 4us; 65535us; 1494us; 1495us; 1507us; 1508us; 1509us; 1510us; 1511us; 1512us; 5us; 65535us; 1494us; 1509us; 1496us; 1507us; 1507us; 1509us; 1509us; 1509us; 1511us; 1509us; 144us; 65535us; 6us; 1353us; 31us; 1353us; 106us; 1353us; 108us; 1353us; 227us; 1353us; 241us; 1353us; 263us; 1353us; 313us; 1353us; 317us; 1353us; 322us; 1353us; 404us; 1353us; 409us; 1353us; 444us; 1353us; 460us; 1353us; 491us; 1353us; 699us; 1353us; 705us; 1353us; 754us; 1353us; 758us; 1353us; 768us; 1353us; 951us; 1353us; 956us; 1353us; 970us; 1353us; 972us; 1353us; 975us; 1353us; 978us; 1353us; 995us; 1353us; 1000us; 1353us; 1006us; 1353us; 1009us; 1353us; 1012us; 1353us; 1018us; 1353us; 1022us; 1353us; 1026us; 1353us; 1030us; 1353us; 1032us; 1353us; 1037us; 1353us; 1039us; 1353us; 1041us; 1353us; 1043us; 1353us; 1045us; 1353us; 1047us; 1353us; 1058us; 1353us; 1066us; 1353us; 1073us; 1353us; 1079us; 1353us; 1081us; 1353us; 1086us; 1353us; 1090us; 1353us; 1093us; 1353us; 1097us; 1353us; 1100us; 1353us; 1103us; 1353us; 1105us; 1353us; 1110us; 1353us; 1112us; 1353us; 1155us; 1353us; 1157us; 1353us; 1161us; 1353us; 1162us; 1353us; 1163us; 1353us; 1164us; 1353us; 1165us; 1353us; 1166us; 1353us; 1167us; 1353us; 1168us; 1353us; 1169us; 1353us; 1170us; 1353us; 1171us; 1353us; 1173us; 1353us; 1174us; 1353us; 1175us; 1353us; 1176us; 1353us; 1177us; 1353us; 1178us; 1353us; 1179us; 1353us; 1180us; 1353us; 1181us; 1353us; 1203us; 1353us; 1225us; 1353us; 1226us; 1353us; 1230us; 1353us; 1232us; 1353us; 1236us; 1353us; 1238us; 1353us; 1242us; 1353us; 1245us; 1353us; 1247us; 1353us; 1249us; 1353us; 1250us; 1353us; 1252us; 1353us; 1253us; 1353us; 1255us; 1353us; 1256us; 1353us; 1258us; 1353us; 1259us; 1353us; 1261us; 1353us; 1262us; 1353us; 1264us; 1353us; 1265us; 1353us; 1271us; 1353us; 1272us; 1353us; 1277us; 1353us; 1279us; 1353us; 1281us; 1353us; 1282us; 1353us; 1283us; 1353us; 1286us; 1353us; 1293us; 1353us; 1294us; 1353us; 1297us; 1353us; 1298us; 1353us; 1311us; 1353us; 1318us; 1353us; 1325us; 1353us; 1332us; 1353us; 1341us; 1353us; 1344us; 1353us; 1346us; 1353us; 1349us; 1353us; 1360us; 1353us; 1367us; 1353us; 1368us; 1353us; 1374us; 1353us; 1380us; 1353us; 1381us; 1353us; 1382us; 1353us; 1398us; 1353us; 1408us; 1353us; 1421us; 1353us; 1422us; 1353us; 1424us; 1353us; 1426us; 1353us; 1430us; 1353us; 1431us; 1353us; 1438us; 1353us; 1453us; 1353us; 1458us; 1353us; 1463us; 1353us; 1488us; 1353us; 1521us; 1353us; 1530us; 1353us; 1535us; 1353us; 1666us; 1353us; 146us; 65535us; 6us; 1520us; 31us; 1520us; 106us; 1520us; 108us; 1520us; 227us; 1520us; 241us; 1520us; 263us; 1520us; 313us; 1520us; 317us; 1520us; 322us; 1520us; 404us; 1520us; 409us; 1520us; 444us; 1520us; 460us; 1520us; 491us; 1520us; 699us; 1520us; 705us; 1520us; 754us; 1520us; 758us; 1520us; 768us; 1520us; 951us; 1520us; 956us; 1520us; 970us; 1520us; 972us; 1520us; 975us; 1520us; 978us; 1520us; 995us; 1520us; 1000us; 1520us; 1006us; 1520us; 1009us; 1520us; 1012us; 1520us; 1018us; 1520us; 1022us; 1520us; 1026us; 1520us; 1030us; 1520us; 1032us; 1520us; 1037us; 1520us; 1039us; 1520us; 1041us; 1520us; 1043us; 1520us; 1045us; 1520us; 1047us; 1520us; 1058us; 1520us; 1066us; 1520us; 1073us; 1520us; 1079us; 1520us; 1081us; 1520us; 1086us; 1520us; 1090us; 1520us; 1093us; 1520us; 1097us; 1520us; 1100us; 1520us; 1103us; 1520us; 1105us; 1520us; 1110us; 1520us; 1112us; 1520us; 1155us; 1520us; 1157us; 1520us; 1161us; 1520us; 1162us; 1520us; 1163us; 1520us; 1164us; 1520us; 1165us; 1520us; 1166us; 1520us; 1167us; 1520us; 1168us; 1520us; 1169us; 1520us; 1170us; 1520us; 1171us; 1520us; 1173us; 1520us; 1174us; 1520us; 1175us; 1520us; 1176us; 1520us; 1177us; 1520us; 1178us; 1520us; 1179us; 1520us; 1180us; 1520us; 1181us; 1520us; 1203us; 1520us; 1225us; 1520us; 1226us; 1520us; 1230us; 1520us; 1232us; 1520us; 1236us; 1520us; 1238us; 1520us; 1242us; 1520us; 1245us; 1520us; 1247us; 1520us; 1249us; 1520us; 1250us; 1520us; 1252us; 1520us; 1253us; 1520us; 1255us; 1520us; 1256us; 1520us; 1258us; 1520us; 1259us; 1520us; 1261us; 1520us; 1262us; 1520us; 1264us; 1520us; 1265us; 1520us; 1271us; 1520us; 1272us; 1520us; 1277us; 1520us; 1279us; 1520us; 1281us; 1520us; 1282us; 1520us; 1283us; 1520us; 1286us; 1520us; 1293us; 1520us; 1294us; 1520us; 1297us; 1520us; 1298us; 1520us; 1311us; 1520us; 1317us; 1519us; 1318us; 1520us; 1325us; 1520us; 1332us; 1520us; 1341us; 1520us; 1344us; 1520us; 1346us; 1520us; 1349us; 1520us; 1360us; 1520us; 1367us; 1520us; 1368us; 1520us; 1374us; 1520us; 1380us; 1520us; 1381us; 1520us; 1382us; 1520us; 1398us; 1520us; 1408us; 1520us; 1421us; 1520us; 1422us; 1520us; 1424us; 1520us; 1426us; 1520us; 1430us; 1520us; 1431us; 1520us; 1438us; 1520us; 1453us; 1520us; 1458us; 1520us; 1463us; 1520us; 1488us; 1520us; 1518us; 1519us; 1521us; 1520us; 1530us; 1520us; 1535us; 1520us; 1666us; 1520us; 112us; 65535us; 6us; 1017us; 31us; 1017us; 106us; 1017us; 108us; 1017us; 227us; 1017us; 241us; 1017us; 263us; 1017us; 404us; 1017us; 409us; 1017us; 444us; 1017us; 460us; 1017us; 699us; 1017us; 705us; 1017us; 754us; 1017us; 758us; 1017us; 768us; 1017us; 951us; 1017us; 956us; 1017us; 970us; 1017us; 972us; 1017us; 975us; 1017us; 978us; 1017us; 995us; 1017us; 1000us; 1017us; 1006us; 1017us; 1009us; 1017us; 1012us; 1017us; 1018us; 1017us; 1022us; 1017us; 1026us; 1017us; 1030us; 1017us; 1032us; 1017us; 1037us; 1017us; 1039us; 1017us; 1041us; 1017us; 1043us; 1017us; 1045us; 1017us; 1047us; 1017us; 1058us; 1017us; 1066us; 1017us; 1073us; 1017us; 1079us; 1017us; 1081us; 1017us; 1086us; 1017us; 1090us; 1017us; 1093us; 1017us; 1097us; 1017us; 1100us; 1017us; 1103us; 1017us; 1105us; 1017us; 1110us; 1017us; 1112us; 1017us; 1155us; 1017us; 1157us; 1017us; 1161us; 1017us; 1162us; 1017us; 1163us; 1017us; 1164us; 1017us; 1165us; 1017us; 1166us; 1017us; 1167us; 1017us; 1168us; 1017us; 1169us; 1017us; 1170us; 1017us; 1171us; 1017us; 1173us; 1017us; 1174us; 1017us; 1175us; 1017us; 1176us; 1017us; 1177us; 1017us; 1178us; 1017us; 1179us; 1017us; 1180us; 1017us; 1181us; 1017us; 1203us; 1017us; 1225us; 1017us; 1226us; 1017us; 1230us; 1017us; 1232us; 1017us; 1236us; 1017us; 1238us; 1017us; 1242us; 1017us; 1245us; 1017us; 1247us; 1017us; 1311us; 1017us; 1318us; 1017us; 1325us; 1017us; 1332us; 1017us; 1341us; 1017us; 1344us; 1017us; 1346us; 1017us; 1349us; 1017us; 1360us; 1017us; 1367us; 1017us; 1368us; 1017us; 1374us; 1017us; 1380us; 1017us; 1381us; 1017us; 1382us; 1017us; 1398us; 1017us; 1408us; 1017us; 1421us; 1017us; 1422us; 1017us; 1424us; 1017us; 1426us; 1017us; 1430us; 1017us; 1431us; 1017us; 1458us; 1017us; 1463us; 1017us; 1488us; 1017us; 1530us; 1017us; 1535us; 1017us; 112us; 65535us; 6us; 1016us; 31us; 1016us; 106us; 1016us; 108us; 1016us; 227us; 1016us; 241us; 1016us; 263us; 1016us; 404us; 1016us; 409us; 1016us; 444us; 1016us; 460us; 1016us; 699us; 1016us; 705us; 1016us; 754us; 1016us; 758us; 1016us; 768us; 1016us; 951us; 1016us; 956us; 1016us; 970us; 1016us; 972us; 1016us; 975us; 1016us; 978us; 1016us; 995us; 1016us; 1000us; 1016us; 1006us; 1016us; 1009us; 1016us; 1012us; 1016us; 1018us; 1016us; 1022us; 1016us; 1026us; 1016us; 1030us; 1016us; 1032us; 1016us; 1037us; 1016us; 1039us; 1016us; 1041us; 1016us; 1043us; 1016us; 1045us; 1016us; 1047us; 1016us; 1058us; 1016us; 1066us; 1016us; 1073us; 1016us; 1079us; 1016us; 1081us; 1016us; 1086us; 1016us; 1090us; 1016us; 1093us; 1016us; 1097us; 1016us; 1100us; 1016us; 1103us; 1016us; 1105us; 1016us; 1110us; 1016us; 1112us; 1016us; 1155us; 1016us; 1157us; 1016us; 1161us; 1016us; 1162us; 1016us; 1163us; 1016us; 1164us; 1016us; 1165us; 1016us; 1166us; 1016us; 1167us; 1016us; 1168us; 1016us; 1169us; 1016us; 1170us; 1016us; 1171us; 1016us; 1173us; 1016us; 1174us; 1016us; 1175us; 1016us; 1176us; 1016us; 1177us; 1016us; 1178us; 1016us; 1179us; 1016us; 1180us; 1016us; 1181us; 1016us; 1203us; 1016us; 1225us; 1016us; 1226us; 1016us; 1230us; 1016us; 1232us; 1016us; 1236us; 1016us; 1238us; 1016us; 1242us; 1016us; 1245us; 1016us; 1247us; 1016us; 1311us; 1016us; 1318us; 1016us; 1325us; 1016us; 1332us; 1016us; 1341us; 1016us; 1344us; 1016us; 1346us; 1016us; 1349us; 1016us; 1360us; 1016us; 1367us; 1016us; 1368us; 1016us; 1374us; 1016us; 1380us; 1016us; 1381us; 1016us; 1382us; 1016us; 1398us; 1016us; 1408us; 1016us; 1421us; 1016us; 1422us; 1016us; 1424us; 1016us; 1426us; 1016us; 1430us; 1016us; 1431us; 1016us; 1458us; 1016us; 1463us; 1016us; 1488us; 1016us; 1530us; 1016us; 1535us; 1016us; 3us; 65535us; 818us; 819us; 933us; 934us; 963us; 964us; 5us; 65535us; 103us; 104us; 178us; 179us; 194us; 195us; 430us; 431us; 1555us; 1556us; 3us; 65535us; 402us; 403us; 407us; 408us; 752us; 753us; 9us; 65535us; 103us; 1553us; 143us; 144us; 178us; 1553us; 194us; 1553us; 367us; 368us; 430us; 1553us; 639us; 640us; 1555us; 1553us; 1558us; 1559us; 9us; 65535us; 103us; 1557us; 143us; 1557us; 178us; 1557us; 194us; 1557us; 367us; 1557us; 430us; 1557us; 639us; 1557us; 1555us; 1557us; 1558us; 1557us; 2us; 65535us; 1561us; 1562us; 1564us; 1565us; 11us; 65535us; 103us; 1560us; 143us; 1560us; 178us; 1560us; 194us; 1560us; 367us; 1560us; 430us; 1560us; 639us; 1560us; 1555us; 1560us; 1558us; 1560us; 1561us; 1563us; 1564us; 1563us; 31us; 65535us; 8us; 1584us; 172us; 529us; 417us; 529us; 453us; 454us; 463us; 464us; 524us; 529us; 532us; 1652us; 596us; 597us; 599us; 600us; 678us; 679us; 774us; 775us; 818us; 1551us; 933us; 1551us; 963us; 1551us; 1149us; 1150us; 1151us; 1152us; 1153us; 1154us; 1444us; 1445us; 1447us; 1448us; 1449us; 1652us; 1582us; 1583us; 1610us; 1652us; 1615us; 1616us; 1618us; 1619us; 1629us; 1692us; 1633us; 1692us; 1639us; 1652us; 1650us; 1651us; 1680us; 1692us; 1682us; 1692us; 1693us; 1694us; 1us; 65535us; 8us; 9us; 31us; 65535us; 8us; 1581us; 172us; 1581us; 417us; 1581us; 453us; 1581us; 463us; 1581us; 524us; 1581us; 532us; 1581us; 596us; 1581us; 599us; 1581us; 678us; 1581us; 774us; 1581us; 818us; 1581us; 933us; 1581us; 963us; 1581us; 1149us; 1581us; 1151us; 1581us; 1153us; 1581us; 1444us; 1581us; 1447us; 1581us; 1449us; 1581us; 1582us; 1581us; 1610us; 1581us; 1615us; 1581us; 1618us; 1581us; 1629us; 1581us; 1633us; 1581us; 1639us; 1581us; 1650us; 1581us; 1680us; 1581us; 1682us; 1581us; 1693us; 1581us; 6us; 65535us; 1587us; 1588us; 1589us; 1590us; 1591us; 1592us; 1594us; 1595us; 1596us; 1597us; 1657us; 1658us; 91us; 65535us; 8us; 1602us; 103us; 1602us; 143us; 1602us; 172us; 1602us; 178us; 1602us; 182us; 1602us; 183us; 1601us; 184us; 1602us; 185us; 1601us; 194us; 1602us; 367us; 1602us; 417us; 1602us; 423us; 1602us; 424us; 1601us; 430us; 1602us; 453us; 1602us; 463us; 1602us; 488us; 1602us; 524us; 1602us; 532us; 1602us; 550us; 1602us; 596us; 1602us; 599us; 1602us; 609us; 1602us; 619us; 1602us; 620us; 1601us; 621us; 1601us; 636us; 1602us; 639us; 1602us; 658us; 1602us; 661us; 1602us; 664us; 1602us; 665us; 1601us; 666us; 1601us; 678us; 1602us; 689us; 1602us; 774us; 1602us; 818us; 1602us; 867us; 1602us; 933us; 1602us; 963us; 1602us; 1149us; 1602us; 1151us; 1602us; 1153us; 1602us; 1267us; 1602us; 1268us; 1602us; 1444us; 1602us; 1447us; 1602us; 1449us; 1602us; 1451us; 1602us; 1513us; 1602us; 1514us; 1601us; 1555us; 1602us; 1558us; 1602us; 1561us; 1602us; 1564us; 1602us; 1566us; 1602us; 1567us; 1601us; 1568us; 1602us; 1569us; 1601us; 1572us; 1602us; 1573us; 1601us; 1574us; 1601us; 1575us; 1602us; 1576us; 1601us; 1579us; 1602us; 1580us; 1601us; 1582us; 1602us; 1586us; 1601us; 1587us; 1602us; 1589us; 1602us; 1591us; 1602us; 1593us; 1601us; 1594us; 1602us; 1596us; 1602us; 1605us; 1601us; 1610us; 1602us; 1612us; 1601us; 1615us; 1602us; 1618us; 1602us; 1629us; 1602us; 1633us; 1602us; 1639us; 1602us; 1641us; 1601us; 1646us; 1602us; 1650us; 1602us; 1656us; 1602us; 1657us; 1602us; 1680us; 1602us; 1682us; 1602us; 1693us; 1602us; 91us; 65535us; 8us; 1648us; 103us; 1648us; 143us; 1648us; 172us; 1648us; 178us; 1648us; 182us; 1648us; 183us; 1609us; 184us; 1648us; 185us; 1609us; 194us; 1648us; 367us; 1648us; 417us; 1648us; 423us; 1648us; 424us; 1609us; 430us; 1648us; 453us; 1648us; 463us; 1648us; 488us; 1648us; 524us; 1648us; 532us; 1648us; 550us; 1648us; 596us; 1648us; 599us; 1648us; 609us; 1648us; 619us; 1648us; 620us; 1609us; 621us; 1609us; 636us; 1648us; 639us; 1648us; 658us; 1648us; 661us; 1648us; 664us; 1648us; 665us; 1609us; 666us; 1609us; 678us; 1648us; 689us; 1648us; 774us; 1648us; 818us; 1648us; 867us; 1648us; 933us; 1648us; 963us; 1648us; 1149us; 1648us; 1151us; 1648us; 1153us; 1648us; 1267us; 1648us; 1268us; 1648us; 1444us; 1648us; 1447us; 1648us; 1449us; 1648us; 1451us; 1648us; 1513us; 1648us; 1514us; 1609us; 1555us; 1648us; 1558us; 1648us; 1561us; 1648us; 1564us; 1648us; 1566us; 1648us; 1567us; 1609us; 1568us; 1648us; 1569us; 1609us; 1572us; 1648us; 1573us; 1609us; 1574us; 1609us; 1575us; 1648us; 1576us; 1609us; 1579us; 1648us; 1580us; 1609us; 1582us; 1648us; 1586us; 1609us; 1587us; 1648us; 1589us; 1648us; 1591us; 1648us; 1593us; 1609us; 1594us; 1648us; 1596us; 1648us; 1605us; 1609us; 1610us; 1648us; 1612us; 1613us; 1615us; 1648us; 1618us; 1648us; 1629us; 1648us; 1633us; 1648us; 1639us; 1648us; 1641us; 1642us; 1646us; 1648us; 1650us; 1648us; 1656us; 1648us; 1657us; 1648us; 1680us; 1648us; 1682us; 1648us; 1693us; 1648us; 65us; 65535us; 8us; 1586us; 103us; 1574us; 143us; 1574us; 172us; 1586us; 178us; 1574us; 182us; 183us; 184us; 185us; 194us; 1574us; 367us; 1574us; 417us; 1586us; 423us; 424us; 430us; 1574us; 453us; 1586us; 463us; 1586us; 524us; 1586us; 532us; 1586us; 596us; 1586us; 599us; 1586us; 609us; 621us; 619us; 620us; 636us; 666us; 639us; 1574us; 658us; 666us; 661us; 666us; 664us; 665us; 678us; 1586us; 689us; 666us; 774us; 1586us; 818us; 1586us; 933us; 1586us; 963us; 1586us; 1149us; 1586us; 1151us; 1586us; 1153us; 1586us; 1444us; 1586us; 1447us; 1586us; 1449us; 1586us; 1513us; 1514us; 1555us; 1574us; 1558us; 1574us; 1561us; 1574us; 1564us; 1574us; 1566us; 1567us; 1568us; 1569us; 1572us; 1573us; 1575us; 1576us; 1579us; 1580us; 1582us; 1586us; 1587us; 1593us; 1589us; 1593us; 1591us; 1593us; 1594us; 1593us; 1596us; 1593us; 1610us; 1586us; 1615us; 1586us; 1618us; 1586us; 1629us; 1586us; 1633us; 1586us; 1639us; 1586us; 1650us; 1586us; 1656us; 1605us; 1657us; 1593us; 1680us; 1586us; 1682us; 1586us; 1693us; 1586us; 18us; 65535us; 183us; 1606us; 185us; 1606us; 424us; 1606us; 620us; 1606us; 621us; 1606us; 665us; 1606us; 666us; 1606us; 1514us; 1606us; 1567us; 1606us; 1569us; 1606us; 1573us; 1606us; 1574us; 1606us; 1576us; 1606us; 1580us; 1606us; 1586us; 1606us; 1593us; 1606us; 1605us; 1606us; 1607us; 1608us; 4us; 65535us; 532us; 1611us; 1449us; 1611us; 1610us; 1611us; 1639us; 1640us; 2us; 65535us; 1630us; 1631us; 1683us; 1632us; 65us; 65535us; 8us; 1614us; 103us; 1614us; 143us; 1614us; 172us; 1614us; 178us; 1614us; 182us; 1614us; 184us; 1614us; 194us; 1614us; 367us; 1614us; 417us; 1614us; 423us; 1614us; 430us; 1614us; 453us; 1614us; 463us; 1614us; 524us; 1614us; 532us; 1614us; 596us; 1614us; 599us; 1614us; 609us; 1614us; 619us; 1614us; 636us; 1614us; 639us; 1614us; 658us; 1614us; 661us; 1614us; 664us; 1614us; 678us; 1614us; 689us; 1614us; 774us; 1614us; 818us; 1614us; 933us; 1614us; 963us; 1614us; 1149us; 1614us; 1151us; 1614us; 1153us; 1614us; 1444us; 1614us; 1447us; 1614us; 1449us; 1614us; 1513us; 1614us; 1555us; 1614us; 1558us; 1614us; 1561us; 1614us; 1564us; 1614us; 1566us; 1614us; 1568us; 1614us; 1572us; 1614us; 1575us; 1614us; 1579us; 1614us; 1582us; 1614us; 1587us; 1614us; 1589us; 1614us; 1591us; 1614us; 1594us; 1614us; 1596us; 1614us; 1610us; 1614us; 1615us; 1614us; 1618us; 1614us; 1629us; 1614us; 1633us; 1614us; 1639us; 1614us; 1650us; 1614us; 1656us; 1614us; 1657us; 1614us; 1680us; 1614us; 1682us; 1614us; 1693us; 1614us; 4us; 65535us; 488us; 489us; 1267us; 1269us; 1268us; 1270us; 1451us; 1452us; 66us; 65535us; 8us; 1636us; 103us; 1636us; 143us; 1636us; 172us; 1636us; 178us; 1636us; 182us; 1636us; 184us; 1636us; 194us; 1636us; 367us; 1636us; 417us; 1636us; 423us; 1636us; 430us; 1636us; 453us; 1636us; 463us; 1636us; 524us; 1636us; 532us; 1636us; 596us; 1636us; 599us; 1636us; 609us; 1636us; 619us; 1636us; 636us; 1636us; 639us; 1636us; 658us; 1636us; 661us; 1636us; 664us; 1636us; 678us; 1636us; 689us; 1636us; 774us; 1636us; 818us; 1636us; 867us; 868us; 933us; 1636us; 963us; 1636us; 1149us; 1636us; 1151us; 1636us; 1153us; 1636us; 1444us; 1636us; 1447us; 1636us; 1449us; 1636us; 1513us; 1636us; 1555us; 1636us; 1558us; 1636us; 1561us; 1636us; 1564us; 1636us; 1566us; 1636us; 1568us; 1636us; 1572us; 1636us; 1575us; 1636us; 1579us; 1636us; 1582us; 1636us; 1587us; 1636us; 1589us; 1636us; 1591us; 1636us; 1594us; 1636us; 1596us; 1636us; 1610us; 1636us; 1615us; 1636us; 1618us; 1636us; 1629us; 1636us; 1633us; 1636us; 1639us; 1636us; 1650us; 1636us; 1656us; 1636us; 1657us; 1636us; 1680us; 1636us; 1682us; 1636us; 1693us; 1636us; 72us; 65535us; 8us; 1644us; 103us; 1644us; 143us; 1644us; 172us; 1644us; 178us; 1644us; 182us; 1644us; 184us; 1644us; 194us; 1644us; 367us; 1644us; 417us; 1644us; 423us; 1644us; 430us; 1644us; 453us; 1644us; 463us; 1644us; 488us; 1643us; 524us; 1644us; 532us; 1644us; 550us; 1647us; 596us; 1644us; 599us; 1644us; 609us; 1644us; 619us; 1644us; 636us; 1644us; 639us; 1644us; 658us; 1644us; 661us; 1644us; 664us; 1644us; 678us; 1644us; 689us; 1644us; 774us; 1644us; 818us; 1644us; 867us; 1644us; 933us; 1644us; 963us; 1644us; 1149us; 1644us; 1151us; 1644us; 1153us; 1644us; 1267us; 1643us; 1268us; 1643us; 1444us; 1644us; 1447us; 1644us; 1449us; 1644us; 1451us; 1643us; 1513us; 1644us; 1555us; 1644us; 1558us; 1644us; 1561us; 1644us; 1564us; 1644us; 1566us; 1644us; 1568us; 1644us; 1572us; 1644us; 1575us; 1644us; 1579us; 1644us; 1582us; 1644us; 1587us; 1644us; 1589us; 1644us; 1591us; 1644us; 1594us; 1644us; 1596us; 1644us; 1610us; 1644us; 1615us; 1644us; 1618us; 1644us; 1629us; 1644us; 1633us; 1644us; 1639us; 1644us; 1646us; 1647us; 1650us; 1644us; 1656us; 1644us; 1657us; 1644us; 1680us; 1644us; 1682us; 1644us; 1693us; 1644us; 4us; 65535us; 603us; 618us; 616us; 617us; 1602us; 1671us; 1673us; 1674us; 6us; 65535us; 603us; 1677us; 616us; 1677us; 1295us; 1296us; 1602us; 1677us; 1673us; 1677us; 1678us; 1679us; 8us; 65535us; 532us; 1628us; 1449us; 1628us; 1610us; 1628us; 1629us; 1630us; 1633us; 1634us; 1639us; 1628us; 1680us; 1687us; 1682us; 1695us; 2us; 65535us; 1680us; 1681us; 1682us; 1683us; 3us; 65535us; 1633us; 1635us; 1680us; 1696us; 1682us; 1696us; 1us; 65535us; 810us; 811us; 6us; 65535us; 1697us; 1707us; 1704us; 1707us; 1711us; 1707us; 1717us; 1707us; 1718us; 1707us; 1719us; 1707us; 6us; 65535us; 1697us; 1711us; 1704us; 1711us; 1711us; 1711us; 1717us; 1711us; 1718us; 1711us; 1719us; 1711us; 6us; 65535us; 1697us; 1713us; 1704us; 1713us; 1711us; 1712us; 1717us; 1713us; 1718us; 1713us; 1719us; 1713us; 5us; 65535us; 1697us; 1698us; 1704us; 1705us; 1717us; 1714us; 1718us; 1715us; 1719us; 1716us; 106us; 65535us; 8us; 1600us; 103us; 1600us; 143us; 1600us; 172us; 1600us; 178us; 1600us; 182us; 1600us; 183us; 1599us; 184us; 1600us; 185us; 1599us; 194us; 1600us; 367us; 1600us; 417us; 1600us; 423us; 1600us; 424us; 1599us; 430us; 1600us; 453us; 1600us; 463us; 1600us; 488us; 1599us; 524us; 1600us; 532us; 1600us; 550us; 1599us; 558us; 563us; 573us; 574us; 587us; 598us; 591us; 598us; 594us; 595us; 596us; 1600us; 599us; 1600us; 609us; 1600us; 619us; 1600us; 620us; 1599us; 621us; 1599us; 636us; 1600us; 639us; 1600us; 658us; 1600us; 661us; 1600us; 664us; 1600us; 665us; 1599us; 666us; 1599us; 678us; 1600us; 689us; 1600us; 766us; 773us; 770us; 773us; 774us; 1600us; 818us; 1600us; 867us; 1599us; 933us; 1600us; 963us; 1600us; 1149us; 1600us; 1151us; 1600us; 1153us; 1600us; 1267us; 1599us; 1268us; 1599us; 1444us; 1600us; 1447us; 1600us; 1449us; 1600us; 1451us; 1599us; 1513us; 1600us; 1514us; 1599us; 1552us; 598us; 1554us; 598us; 1555us; 1600us; 1558us; 1600us; 1561us; 1600us; 1564us; 1600us; 1566us; 1600us; 1567us; 1599us; 1568us; 1600us; 1569us; 1599us; 1572us; 1600us; 1573us; 1599us; 1574us; 1599us; 1575us; 1600us; 1576us; 1599us; 1579us; 1600us; 1580us; 1599us; 1582us; 1600us; 1586us; 1599us; 1587us; 1600us; 1589us; 1600us; 1591us; 1600us; 1593us; 1599us; 1594us; 1600us; 1596us; 1600us; 1605us; 1599us; 1610us; 1600us; 1612us; 1599us; 1615us; 1600us; 1618us; 1600us; 1629us; 1600us; 1633us; 1600us; 1639us; 1600us; 1641us; 1599us; 1646us; 1599us; 1650us; 1600us; 1656us; 1600us; 1657us; 1600us; 1680us; 1600us; 1682us; 1600us; 1693us; 1600us; 1697us; 1703us; 1704us; 1703us; 1711us; 1703us; 1717us; 1703us; 1718us; 1703us; 1719us; 1703us; 110us; 65535us; 8us; 1722us; 103us; 1722us; 143us; 1722us; 172us; 1722us; 178us; 1722us; 182us; 1722us; 183us; 1722us; 184us; 1722us; 185us; 1722us; 194us; 1722us; 367us; 1722us; 417us; 1722us; 423us; 1722us; 424us; 1722us; 430us; 1722us; 453us; 1722us; 463us; 1722us; 488us; 1722us; 524us; 1722us; 532us; 1722us; 550us; 1722us; 558us; 1722us; 573us; 1722us; 587us; 1722us; 591us; 1722us; 594us; 1722us; 596us; 1722us; 599us; 1722us; 609us; 1722us; 619us; 1722us; 620us; 1722us; 621us; 1722us; 636us; 1722us; 639us; 1722us; 658us; 1722us; 661us; 1722us; 664us; 1722us; 665us; 1722us; 666us; 1722us; 678us; 1722us; 689us; 1722us; 766us; 1722us; 770us; 1722us; 774us; 1722us; 818us; 1722us; 867us; 1722us; 933us; 1722us; 963us; 1722us; 1149us; 1722us; 1151us; 1722us; 1153us; 1722us; 1267us; 1722us; 1268us; 1722us; 1380us; 1402us; 1381us; 1403us; 1382us; 1402us; 1406us; 1407us; 1444us; 1722us; 1447us; 1722us; 1449us; 1722us; 1451us; 1722us; 1513us; 1722us; 1514us; 1722us; 1552us; 1722us; 1554us; 1722us; 1555us; 1722us; 1558us; 1722us; 1561us; 1722us; 1564us; 1722us; 1566us; 1722us; 1567us; 1722us; 1568us; 1722us; 1569us; 1722us; 1572us; 1722us; 1573us; 1722us; 1574us; 1722us; 1575us; 1722us; 1576us; 1722us; 1579us; 1722us; 1580us; 1722us; 1582us; 1722us; 1586us; 1722us; 1587us; 1722us; 1589us; 1722us; 1591us; 1722us; 1593us; 1722us; 1594us; 1722us; 1596us; 1722us; 1605us; 1722us; 1610us; 1722us; 1612us; 1722us; 1615us; 1722us; 1618us; 1722us; 1629us; 1722us; 1633us; 1722us; 1639us; 1722us; 1641us; 1722us; 1646us; 1722us; 1650us; 1722us; 1656us; 1722us; 1657us; 1722us; 1680us; 1722us; 1682us; 1722us; 1693us; 1722us; 1697us; 1722us; 1704us; 1722us; 1711us; 1722us; 1717us; 1722us; 1718us; 1722us; 1719us; 1722us; 339us; 65535us; 6us; 1775us; 8us; 1728us; 31us; 1775us; 51us; 1728us; 54us; 1728us; 89us; 1728us; 94us; 1728us; 100us; 1775us; 103us; 1728us; 106us; 1775us; 108us; 1775us; 112us; 1728us; 143us; 1728us; 172us; 652us; 175us; 1775us; 178us; 1728us; 182us; 1728us; 183us; 1728us; 184us; 1728us; 185us; 1728us; 194us; 1728us; 196us; 1775us; 198us; 1775us; 203us; 1775us; 227us; 1775us; 241us; 1775us; 263us; 1775us; 270us; 1728us; 299us; 328us; 310us; 328us; 315us; 1728us; 319us; 1728us; 367us; 1728us; 401us; 1777us; 404us; 1775us; 406us; 1777us; 409us; 1775us; 417us; 652us; 423us; 1728us; 424us; 1728us; 427us; 1775us; 430us; 1728us; 441us; 1777us; 444us; 1775us; 451us; 452us; 453us; 1728us; 457us; 458us; 460us; 1775us; 463us; 1728us; 466us; 1777us; 469us; 1777us; 472us; 1777us; 474us; 1777us; 488us; 1728us; 496us; 497us; 499us; 500us; 524us; 652us; 532us; 1728us; 550us; 1728us; 558us; 1728us; 560us; 1728us; 596us; 1728us; 599us; 1728us; 609us; 1728us; 619us; 1728us; 620us; 1728us; 621us; 1728us; 633us; 1775us; 636us; 663us; 639us; 1728us; 658us; 663us; 661us; 663us; 664us; 1728us; 665us; 1728us; 666us; 1728us; 676us; 677us; 678us; 1728us; 685us; 688us; 689us; 663us; 691us; 1728us; 693us; 1728us; 699us; 1775us; 705us; 1775us; 716us; 717us; 728us; 1728us; 729us; 730us; 741us; 1728us; 751us; 1777us; 754us; 1775us; 758us; 1775us; 768us; 1775us; 774us; 1728us; 814us; 815us; 818us; 1728us; 820us; 813us; 821us; 813us; 823us; 813us; 841us; 842us; 843us; 1777us; 844us; 1777us; 848us; 1777us; 849us; 1777us; 850us; 1777us; 851us; 1777us; 854us; 856us; 858us; 1777us; 861us; 1777us; 863us; 1777us; 865us; 1777us; 867us; 1728us; 870us; 857us; 874us; 1777us; 876us; 1777us; 878us; 1777us; 883us; 1728us; 886us; 1777us; 889us; 1777us; 892us; 894us; 893us; 894us; 900us; 1777us; 908us; 1777us; 928us; 929us; 930us; 1777us; 933us; 1728us; 935us; 1777us; 936us; 1777us; 938us; 1777us; 939us; 1777us; 940us; 1777us; 941us; 1777us; 944us; 1728us; 947us; 1777us; 949us; 1777us; 951us; 1775us; 956us; 1775us; 963us; 1728us; 970us; 1775us; 972us; 1775us; 975us; 1775us; 978us; 1775us; 994us; 1777us; 995us; 1775us; 999us; 1777us; 1000us; 1775us; 1006us; 1775us; 1009us; 1775us; 1012us; 1775us; 1018us; 1775us; 1022us; 1775us; 1026us; 1775us; 1030us; 1775us; 1032us; 1775us; 1037us; 1775us; 1039us; 1775us; 1041us; 1775us; 1043us; 1775us; 1045us; 1775us; 1047us; 1775us; 1056us; 1777us; 1058us; 1775us; 1066us; 1775us; 1073us; 1775us; 1079us; 1775us; 1081us; 1775us; 1085us; 1777us; 1086us; 1775us; 1090us; 1775us; 1092us; 1777us; 1093us; 1775us; 1097us; 1775us; 1100us; 1775us; 1103us; 1775us; 1105us; 1775us; 1110us; 1775us; 1112us; 1775us; 1149us; 1728us; 1151us; 1728us; 1153us; 1728us; 1155us; 1775us; 1157us; 1775us; 1161us; 1775us; 1162us; 1775us; 1163us; 1775us; 1164us; 1775us; 1165us; 1775us; 1166us; 1775us; 1167us; 1775us; 1168us; 1775us; 1169us; 1775us; 1170us; 1775us; 1171us; 1775us; 1173us; 1775us; 1174us; 1775us; 1175us; 1775us; 1176us; 1775us; 1177us; 1775us; 1178us; 1775us; 1179us; 1775us; 1180us; 1775us; 1181us; 1775us; 1203us; 1775us; 1206us; 1777us; 1208us; 1777us; 1213us; 1777us; 1220us; 1777us; 1225us; 1775us; 1226us; 1775us; 1230us; 1775us; 1232us; 1775us; 1236us; 1775us; 1238us; 1775us; 1242us; 1775us; 1245us; 1775us; 1247us; 1775us; 1249us; 1775us; 1250us; 1775us; 1252us; 1775us; 1253us; 1775us; 1255us; 1775us; 1256us; 1775us; 1258us; 1775us; 1259us; 1775us; 1261us; 1775us; 1262us; 1775us; 1264us; 1775us; 1265us; 1775us; 1267us; 1728us; 1268us; 1728us; 1277us; 1775us; 1279us; 1775us; 1281us; 1775us; 1282us; 1775us; 1283us; 1775us; 1286us; 1775us; 1293us; 1775us; 1294us; 1775us; 1297us; 1775us; 1298us; 1775us; 1299us; 1775us; 1302us; 1775us; 1304us; 1775us; 1305us; 1775us; 1311us; 1775us; 1318us; 1775us; 1325us; 1775us; 1332us; 1775us; 1341us; 1775us; 1344us; 1775us; 1346us; 1775us; 1349us; 1775us; 1360us; 1775us; 1367us; 1775us; 1368us; 1775us; 1374us; 1775us; 1380us; 1775us; 1381us; 1775us; 1382us; 1775us; 1398us; 1775us; 1408us; 1775us; 1421us; 1775us; 1422us; 1775us; 1424us; 1775us; 1426us; 1775us; 1430us; 1775us; 1431us; 1775us; 1438us; 1775us; 1444us; 1728us; 1447us; 1728us; 1449us; 1728us; 1451us; 1728us; 1458us; 1775us; 1463us; 1775us; 1467us; 1728us; 1471us; 1728us; 1479us; 1728us; 1488us; 1775us; 1513us; 1728us; 1514us; 1728us; 1521us; 1775us; 1528us; 1777us; 1530us; 1775us; 1533us; 1777us; 1535us; 1775us; 1546us; 1777us; 1548us; 1777us; 1555us; 1728us; 1558us; 1728us; 1561us; 1728us; 1564us; 1728us; 1566us; 1728us; 1567us; 1728us; 1568us; 1728us; 1569us; 1728us; 1570us; 1571us; 1572us; 1728us; 1573us; 1728us; 1574us; 1728us; 1575us; 1728us; 1576us; 1728us; 1577us; 1578us; 1579us; 1728us; 1580us; 1728us; 1582us; 1728us; 1586us; 1728us; 1587us; 1728us; 1589us; 1728us; 1591us; 1728us; 1593us; 1728us; 1594us; 1728us; 1596us; 1728us; 1605us; 1728us; 1610us; 1728us; 1612us; 1728us; 1615us; 1728us; 1618us; 1728us; 1629us; 1728us; 1633us; 1728us; 1639us; 1728us; 1641us; 1728us; 1646us; 1728us; 1650us; 1728us; 1656us; 1728us; 1657us; 1728us; 1666us; 1775us; 1672us; 1728us; 1680us; 1728us; 1682us; 1728us; 1693us; 1728us; 1697us; 1728us; 1704us; 1728us; 1711us; 1728us; 1717us; 1728us; 1718us; 1728us; 1719us; 1728us; 1720us; 1721us; 1723us; 1725us; 1724us; 1725us; 1729us; 1730us; 1779us; 1777us; 119us; 65535us; 8us; 1598us; 51us; 52us; 54us; 55us; 89us; 277us; 94us; 95us; 103us; 1598us; 112us; 275us; 143us; 1598us; 172us; 525us; 178us; 1598us; 182us; 1598us; 183us; 1598us; 184us; 1598us; 185us; 1598us; 194us; 1598us; 270us; 287us; 299us; 312us; 310us; 312us; 315us; 316us; 319us; 320us; 367us; 1598us; 417us; 525us; 423us; 1598us; 424us; 1598us; 430us; 1598us; 453us; 1598us; 463us; 1598us; 488us; 1598us; 524us; 525us; 532us; 1598us; 550us; 1598us; 558us; 559us; 560us; 561us; 596us; 1598us; 599us; 1598us; 609us; 1598us; 619us; 1598us; 620us; 1598us; 621us; 1598us; 636us; 1598us; 639us; 1598us; 658us; 1598us; 661us; 1598us; 664us; 1598us; 665us; 1598us; 666us; 1598us; 678us; 1598us; 689us; 1598us; 691us; 692us; 693us; 694us; 728us; 731us; 741us; 731us; 774us; 1598us; 818us; 1598us; 867us; 1598us; 883us; 946us; 933us; 1598us; 944us; 946us; 963us; 1598us; 1149us; 1598us; 1151us; 1598us; 1153us; 1598us; 1267us; 1598us; 1268us; 1598us; 1444us; 1598us; 1447us; 1598us; 1449us; 1598us; 1451us; 1598us; 1467us; 1484us; 1471us; 1484us; 1479us; 1484us; 1513us; 1598us; 1514us; 1598us; 1555us; 1598us; 1558us; 1598us; 1561us; 1598us; 1564us; 1598us; 1566us; 1598us; 1567us; 1598us; 1568us; 1598us; 1569us; 1598us; 1572us; 1598us; 1573us; 1598us; 1574us; 1598us; 1575us; 1598us; 1576us; 1598us; 1579us; 1598us; 1580us; 1598us; 1582us; 1598us; 1586us; 1598us; 1587us; 1598us; 1589us; 1598us; 1591us; 1598us; 1593us; 1598us; 1594us; 1598us; 1596us; 1598us; 1605us; 1598us; 1610us; 1598us; 1612us; 1598us; 1615us; 1598us; 1618us; 1598us; 1629us; 1598us; 1633us; 1598us; 1639us; 1598us; 1641us; 1598us; 1646us; 1598us; 1650us; 1598us; 1656us; 1598us; 1657us; 1598us; 1672us; 1673us; 1680us; 1598us; 1682us; 1598us; 1693us; 1598us; 1697us; 1702us; 1704us; 1702us; 1711us; 1702us; 1717us; 1702us; 1718us; 1702us; 1719us; 1702us; 197us; 65535us; 6us; 1776us; 31us; 1776us; 100us; 1776us; 106us; 1776us; 108us; 1776us; 175us; 1776us; 196us; 1776us; 198us; 1776us; 203us; 1776us; 227us; 1776us; 241us; 1776us; 263us; 1776us; 401us; 1778us; 404us; 1776us; 406us; 1778us; 409us; 1776us; 427us; 1776us; 441us; 1778us; 444us; 1776us; 460us; 1776us; 466us; 1778us; 469us; 1778us; 472us; 1778us; 474us; 1778us; 633us; 1776us; 699us; 1776us; 705us; 1776us; 751us; 1778us; 754us; 1776us; 758us; 1776us; 768us; 1776us; 843us; 1778us; 844us; 1778us; 848us; 1778us; 849us; 1778us; 850us; 1778us; 851us; 1778us; 858us; 1778us; 861us; 1778us; 863us; 1778us; 865us; 1778us; 870us; 1778us; 874us; 1778us; 876us; 1778us; 878us; 1778us; 886us; 1778us; 889us; 1778us; 900us; 1778us; 908us; 1778us; 930us; 1778us; 935us; 1778us; 936us; 1778us; 938us; 1778us; 939us; 1778us; 940us; 1778us; 941us; 1778us; 947us; 1778us; 949us; 1778us; 951us; 1776us; 956us; 1776us; 970us; 1776us; 972us; 1776us; 975us; 1776us; 978us; 1776us; 994us; 1778us; 995us; 1776us; 999us; 1778us; 1000us; 1776us; 1006us; 1776us; 1009us; 1776us; 1012us; 1776us; 1018us; 1776us; 1022us; 1776us; 1026us; 1776us; 1030us; 1776us; 1032us; 1776us; 1037us; 1776us; 1039us; 1776us; 1041us; 1776us; 1043us; 1776us; 1045us; 1776us; 1047us; 1776us; 1056us; 1778us; 1058us; 1776us; 1066us; 1776us; 1073us; 1776us; 1079us; 1776us; 1081us; 1776us; 1085us; 1778us; 1086us; 1776us; 1090us; 1776us; 1092us; 1778us; 1093us; 1776us; 1097us; 1776us; 1100us; 1776us; 1103us; 1776us; 1105us; 1776us; 1110us; 1776us; 1112us; 1776us; 1155us; 1776us; 1157us; 1776us; 1161us; 1776us; 1162us; 1776us; 1163us; 1776us; 1164us; 1776us; 1165us; 1776us; 1166us; 1776us; 1167us; 1776us; 1168us; 1776us; 1169us; 1776us; 1170us; 1776us; 1171us; 1776us; 1173us; 1776us; 1174us; 1776us; 1175us; 1776us; 1176us; 1776us; 1177us; 1776us; 1178us; 1776us; 1179us; 1776us; 1180us; 1776us; 1181us; 1776us; 1203us; 1776us; 1206us; 1778us; 1208us; 1778us; 1213us; 1778us; 1220us; 1778us; 1225us; 1776us; 1226us; 1776us; 1230us; 1776us; 1232us; 1776us; 1236us; 1776us; 1238us; 1776us; 1242us; 1776us; 1245us; 1776us; 1247us; 1776us; 1249us; 1776us; 1250us; 1776us; 1252us; 1776us; 1253us; 1776us; 1255us; 1776us; 1256us; 1776us; 1258us; 1776us; 1259us; 1776us; 1261us; 1776us; 1262us; 1776us; 1264us; 1776us; 1265us; 1776us; 1277us; 1776us; 1279us; 1776us; 1281us; 1776us; 1282us; 1776us; 1283us; 1776us; 1286us; 1776us; 1293us; 1776us; 1294us; 1776us; 1297us; 1776us; 1298us; 1776us; 1299us; 1776us; 1302us; 1776us; 1304us; 1776us; 1305us; 1776us; 1311us; 1776us; 1318us; 1776us; 1325us; 1776us; 1332us; 1776us; 1341us; 1776us; 1344us; 1776us; 1346us; 1776us; 1349us; 1776us; 1360us; 1776us; 1367us; 1776us; 1368us; 1776us; 1374us; 1776us; 1380us; 1776us; 1381us; 1776us; 1382us; 1776us; 1398us; 1776us; 1408us; 1776us; 1421us; 1776us; 1422us; 1776us; 1424us; 1776us; 1426us; 1776us; 1430us; 1776us; 1431us; 1776us; 1438us; 1776us; 1458us; 1776us; 1463us; 1776us; 1488us; 1776us; 1521us; 1776us; 1528us; 1778us; 1530us; 1776us; 1533us; 1778us; 1535us; 1776us; 1546us; 1778us; 1548us; 1778us; 1666us; 1776us; 1779us; 1778us; 7us; 65535us; 646us; 1733us; 870us; 1733us; 900us; 1733us; 1325us; 1733us; 1381us; 1733us; 1382us; 1733us; 1732us; 1733us; 2us; 65535us; 1739us; 1774us; 1772us; 1773us; 7us; 65535us; 646us; 1738us; 870us; 1738us; 900us; 1738us; 1325us; 1738us; 1381us; 1738us; 1382us; 1738us; 1732us; 1738us; 148us; 65535us; 6us; 1782us; 31us; 1782us; 100us; 1782us; 106us; 1782us; 108us; 1782us; 175us; 1782us; 196us; 1782us; 198us; 1782us; 203us; 1782us; 227us; 1782us; 241us; 1782us; 263us; 1782us; 404us; 1782us; 409us; 1782us; 427us; 1782us; 444us; 1782us; 460us; 1782us; 633us; 1782us; 699us; 1782us; 705us; 1782us; 754us; 1782us; 758us; 1782us; 768us; 1782us; 951us; 1782us; 956us; 1782us; 970us; 1782us; 972us; 1782us; 975us; 1782us; 978us; 1782us; 995us; 1782us; 1000us; 1782us; 1006us; 1782us; 1009us; 1782us; 1012us; 1782us; 1018us; 1782us; 1022us; 1782us; 1026us; 1782us; 1030us; 1782us; 1032us; 1782us; 1037us; 1782us; 1039us; 1782us; 1041us; 1782us; 1043us; 1782us; 1045us; 1782us; 1047us; 1782us; 1058us; 1782us; 1066us; 1782us; 1073us; 1782us; 1079us; 1782us; 1081us; 1782us; 1086us; 1782us; 1090us; 1782us; 1093us; 1782us; 1097us; 1782us; 1100us; 1782us; 1103us; 1782us; 1105us; 1782us; 1110us; 1782us; 1112us; 1782us; 1155us; 1782us; 1157us; 1782us; 1161us; 1782us; 1162us; 1782us; 1163us; 1782us; 1164us; 1782us; 1165us; 1782us; 1166us; 1782us; 1167us; 1782us; 1168us; 1782us; 1169us; 1782us; 1170us; 1782us; 1171us; 1782us; 1173us; 1782us; 1174us; 1782us; 1175us; 1782us; 1176us; 1782us; 1177us; 1782us; 1178us; 1782us; 1179us; 1782us; 1180us; 1782us; 1181us; 1782us; 1203us; 1782us; 1225us; 1782us; 1226us; 1782us; 1230us; 1782us; 1232us; 1782us; 1236us; 1782us; 1238us; 1782us; 1242us; 1782us; 1245us; 1782us; 1247us; 1782us; 1249us; 1782us; 1250us; 1782us; 1252us; 1782us; 1253us; 1782us; 1255us; 1782us; 1256us; 1782us; 1258us; 1782us; 1259us; 1782us; 1261us; 1782us; 1262us; 1782us; 1264us; 1782us; 1265us; 1782us; 1277us; 1782us; 1279us; 1782us; 1281us; 1782us; 1282us; 1782us; 1283us; 1782us; 1286us; 1782us; 1293us; 1782us; 1294us; 1782us; 1297us; 1782us; 1298us; 1782us; 1299us; 1322us; 1302us; 1322us; 1304us; 1782us; 1305us; 1782us; 1311us; 1782us; 1318us; 1782us; 1325us; 1782us; 1332us; 1782us; 1341us; 1782us; 1344us; 1782us; 1346us; 1782us; 1349us; 1782us; 1360us; 1782us; 1367us; 1782us; 1368us; 1782us; 1374us; 1782us; 1380us; 1782us; 1381us; 1782us; 1382us; 1782us; 1398us; 1782us; 1408us; 1782us; 1421us; 1782us; 1422us; 1782us; 1424us; 1782us; 1426us; 1782us; 1430us; 1782us; 1431us; 1782us; 1438us; 1782us; 1458us; 1782us; 1463us; 1782us; 1488us; 1782us; 1521us; 1782us; 1530us; 1782us; 1535us; 1782us; 1666us; 1782us; 49us; 65535us; 401us; 471us; 406us; 471us; 441us; 471us; 466us; 467us; 469us; 470us; 472us; 476us; 474us; 475us; 751us; 471us; 843us; 471us; 844us; 471us; 848us; 471us; 849us; 471us; 850us; 471us; 851us; 471us; 858us; 471us; 861us; 471us; 863us; 471us; 865us; 471us; 870us; 471us; 874us; 471us; 876us; 471us; 878us; 471us; 886us; 471us; 889us; 471us; 900us; 471us; 908us; 471us; 930us; 471us; 935us; 471us; 936us; 471us; 938us; 471us; 939us; 471us; 940us; 471us; 941us; 471us; 947us; 471us; 949us; 471us; 994us; 471us; 999us; 471us; 1056us; 471us; 1085us; 471us; 1092us; 471us; 1206us; 471us; 1208us; 471us; 1213us; 471us; 1220us; 471us; 1528us; 471us; 1533us; 471us; 1546us; 471us; 1548us; 471us; 1779us; 1780us; 146us; 65535us; 6us; 1310us; 31us; 1310us; 100us; 101us; 106us; 1310us; 108us; 1310us; 175us; 176us; 196us; 202us; 198us; 202us; 203us; 204us; 227us; 1310us; 241us; 1310us; 263us; 1310us; 404us; 1310us; 409us; 1310us; 427us; 428us; 444us; 1310us; 460us; 1310us; 633us; 645us; 699us; 1310us; 705us; 1310us; 754us; 1310us; 758us; 1310us; 768us; 1310us; 951us; 1310us; 956us; 1310us; 970us; 1310us; 972us; 1310us; 975us; 1310us; 978us; 1310us; 995us; 1310us; 1000us; 1310us; 1006us; 1310us; 1009us; 1310us; 1012us; 1310us; 1018us; 1310us; 1022us; 1310us; 1026us; 1310us; 1030us; 1310us; 1032us; 1310us; 1037us; 1310us; 1039us; 1310us; 1041us; 1310us; 1043us; 1310us; 1045us; 1310us; 1047us; 1310us; 1058us; 1310us; 1066us; 1310us; 1073us; 1310us; 1079us; 1310us; 1081us; 1310us; 1086us; 1310us; 1090us; 1310us; 1093us; 1310us; 1097us; 1310us; 1100us; 1310us; 1103us; 1310us; 1105us; 1310us; 1110us; 1310us; 1112us; 1310us; 1155us; 1310us; 1157us; 1310us; 1161us; 1310us; 1162us; 1310us; 1163us; 1310us; 1164us; 1310us; 1165us; 1310us; 1166us; 1310us; 1167us; 1310us; 1168us; 1310us; 1169us; 1310us; 1170us; 1310us; 1171us; 1310us; 1173us; 1310us; 1174us; 1310us; 1175us; 1310us; 1176us; 1310us; 1177us; 1310us; 1178us; 1310us; 1179us; 1310us; 1180us; 1310us; 1181us; 1310us; 1203us; 1310us; 1225us; 1310us; 1226us; 1310us; 1230us; 1310us; 1232us; 1310us; 1236us; 1310us; 1238us; 1310us; 1242us; 1310us; 1245us; 1310us; 1247us; 1310us; 1249us; 1310us; 1250us; 1310us; 1252us; 1310us; 1253us; 1310us; 1255us; 1310us; 1256us; 1310us; 1258us; 1310us; 1259us; 1310us; 1261us; 1310us; 1262us; 1310us; 1264us; 1310us; 1265us; 1310us; 1277us; 1310us; 1279us; 1310us; 1281us; 1310us; 1282us; 1310us; 1283us; 1310us; 1286us; 1310us; 1293us; 1310us; 1294us; 1310us; 1297us; 1310us; 1298us; 1310us; 1304us; 1306us; 1305us; 1306us; 1311us; 1310us; 1318us; 1310us; 1325us; 1310us; 1332us; 1310us; 1341us; 1310us; 1344us; 1310us; 1346us; 1310us; 1349us; 1310us; 1360us; 1310us; 1367us; 1310us; 1368us; 1310us; 1374us; 1310us; 1380us; 1310us; 1381us; 1310us; 1382us; 1310us; 1398us; 1310us; 1408us; 1310us; 1421us; 1310us; 1422us; 1310us; 1424us; 1310us; 1426us; 1310us; 1430us; 1310us; 1431us; 1310us; 1438us; 1310us; 1458us; 1310us; 1463us; 1310us; 1488us; 1310us; 1521us; 1310us; 1530us; 1310us; 1535us; 1310us; 1666us; 1310us; 14us; 65535us; 47us; 1786us; 74us; 1786us; 77us; 1786us; 78us; 1788us; 81us; 1786us; 217us; 1786us; 236us; 1786us; 242us; 1786us; 247us; 1786us; 251us; 1786us; 252us; 1786us; 253us; 1786us; 1786us; 1786us; 1788us; 1788us; 12us; 65535us; 47us; 82us; 74us; 82us; 77us; 82us; 81us; 82us; 217us; 254us; 236us; 254us; 242us; 243us; 247us; 249us; 251us; 254us; 252us; 254us; 253us; 254us; 1786us; 1787us; 2us; 65535us; 78us; 79us; 1788us; 1789us; 11us; 65535us; 166us; 1803us; 300us; 310us; 388us; 1803us; 507us; 1803us; 669us; 670us; 852us; 854us; 925us; 949us; 942us; 944us; 967us; 970us; 968us; 970us; 969us; 970us; 4us; 65535us; 211us; 212us; 294us; 295us; 483us; 484us; 486us; 487us; 2us; 65535us; 1505us; 1506us; 1515us; 1516us; 10us; 65535us; 110us; 111us; 421us; 422us; 432us; 433us; 435us; 436us; 437us; 438us; 439us; 440us; 445us; 446us; 513us; 514us; 515us; 516us; 519us; 520us; 2us; 65535us; 60us; 61us; 223us; 224us; 21us; 65535us; 71us; 72us; 132us; 133us; 233us; 234us; 302us; 303us; 305us; 306us; 355us; 356us; 627us; 657us; 634us; 635us; 637us; 638us; 640us; 641us; 643us; 644us; 652us; 653us; 655us; 656us; 1002us; 1003us; 1057us; 1108us; 1088us; 1089us; 1095us; 1096us; 1102us; 1103us; 1492us; 1496us; 1493us; 1494us; 1516us; 1517us; 8us; 65535us; 166us; 167us; 300us; 301us; 388us; 389us; 507us; 508us; 669us; 672us; 852us; 853us; 925us; 948us; 942us; 943us; 4us; 65535us; 50us; 51us; 53us; 54us; 695us; 696us; 701us; 702us; 0us; 65535us; 11us; 65535us; 97us; 98us; 173us; 174us; 391us; 400us; 393us; 400us; 398us; 400us; 420us; 406us; 426us; 427us; 511us; 750us; 512us; 406us; 518us; 406us; 747us; 750us; 7us; 65535us; 98us; 99us; 186us; 675us; 189us; 675us; 449us; 450us; 455us; 456us; 673us; 675us; 750us; 751us; 4us; 65535us; 983us; 1073us; 1046us; 1047us; 1057us; 1058us; 1065us; 1066us; 9us; 65535us; 980us; 1055us; 981us; 1062us; 982us; 1070us; 984us; 1077us; 1048us; 1049us; 1051us; 1052us; 1059us; 1060us; 1067us; 1068us; 1074us; 1075us; 2us; 65535us; 270us; 288us; 278us; 288us; 2us; 65535us; 89us; 119us; 112us; 115us; 2us; 65535us; 65us; 89us; 88us; 89us; 264us; 65535us; 6us; 793us; 8us; 793us; 31us; 793us; 40us; 42us; 103us; 793us; 106us; 793us; 108us; 793us; 143us; 793us; 172us; 793us; 178us; 793us; 182us; 793us; 184us; 793us; 194us; 793us; 227us; 793us; 241us; 793us; 263us; 793us; 313us; 793us; 317us; 793us; 322us; 793us; 367us; 793us; 401us; 793us; 404us; 793us; 406us; 793us; 409us; 793us; 417us; 793us; 423us; 793us; 430us; 793us; 441us; 793us; 444us; 793us; 453us; 793us; 460us; 793us; 463us; 793us; 488us; 793us; 491us; 793us; 524us; 793us; 532us; 793us; 550us; 551us; 596us; 793us; 599us; 793us; 609us; 793us; 619us; 793us; 636us; 793us; 639us; 793us; 642us; 793us; 654us; 793us; 658us; 793us; 661us; 793us; 664us; 793us; 678us; 793us; 689us; 793us; 699us; 793us; 705us; 793us; 751us; 793us; 754us; 793us; 758us; 793us; 768us; 793us; 774us; 793us; 818us; 793us; 843us; 793us; 844us; 793us; 848us; 793us; 849us; 793us; 850us; 793us; 851us; 793us; 858us; 793us; 861us; 793us; 863us; 793us; 865us; 793us; 867us; 793us; 870us; 793us; 874us; 793us; 876us; 793us; 878us; 793us; 886us; 793us; 889us; 793us; 900us; 793us; 908us; 793us; 930us; 793us; 933us; 793us; 935us; 793us; 936us; 793us; 938us; 793us; 939us; 793us; 940us; 793us; 941us; 793us; 947us; 793us; 949us; 793us; 951us; 793us; 956us; 793us; 963us; 793us; 970us; 793us; 972us; 793us; 975us; 793us; 978us; 793us; 994us; 793us; 995us; 793us; 999us; 793us; 1000us; 793us; 1006us; 793us; 1009us; 793us; 1012us; 793us; 1018us; 793us; 1022us; 793us; 1026us; 793us; 1030us; 793us; 1032us; 793us; 1037us; 793us; 1039us; 793us; 1041us; 793us; 1043us; 793us; 1045us; 793us; 1047us; 793us; 1056us; 793us; 1058us; 793us; 1066us; 793us; 1073us; 793us; 1079us; 793us; 1081us; 793us; 1085us; 793us; 1086us; 793us; 1090us; 793us; 1092us; 793us; 1093us; 793us; 1097us; 793us; 1100us; 793us; 1103us; 793us; 1105us; 793us; 1110us; 793us; 1112us; 793us; 1149us; 793us; 1151us; 793us; 1153us; 793us; 1155us; 793us; 1157us; 793us; 1161us; 793us; 1162us; 793us; 1163us; 793us; 1164us; 793us; 1165us; 793us; 1166us; 793us; 1167us; 793us; 1168us; 793us; 1169us; 793us; 1170us; 793us; 1171us; 793us; 1173us; 793us; 1174us; 793us; 1175us; 793us; 1176us; 793us; 1177us; 793us; 1178us; 793us; 1179us; 793us; 1180us; 793us; 1181us; 793us; 1203us; 793us; 1206us; 793us; 1208us; 793us; 1213us; 793us; 1220us; 793us; 1225us; 793us; 1226us; 793us; 1230us; 793us; 1232us; 793us; 1236us; 793us; 1238us; 793us; 1242us; 793us; 1245us; 793us; 1247us; 793us; 1249us; 793us; 1250us; 793us; 1252us; 793us; 1253us; 793us; 1255us; 793us; 1256us; 793us; 1258us; 793us; 1259us; 793us; 1261us; 793us; 1262us; 793us; 1264us; 793us; 1265us; 793us; 1267us; 793us; 1268us; 793us; 1271us; 793us; 1272us; 793us; 1277us; 793us; 1279us; 793us; 1281us; 793us; 1282us; 793us; 1283us; 793us; 1286us; 793us; 1293us; 793us; 1294us; 793us; 1297us; 793us; 1298us; 793us; 1311us; 793us; 1318us; 793us; 1325us; 793us; 1332us; 793us; 1341us; 793us; 1344us; 793us; 1346us; 793us; 1349us; 793us; 1360us; 793us; 1367us; 793us; 1368us; 793us; 1374us; 793us; 1380us; 793us; 1381us; 793us; 1382us; 793us; 1398us; 793us; 1408us; 793us; 1421us; 793us; 1422us; 793us; 1424us; 793us; 1426us; 793us; 1430us; 793us; 1431us; 793us; 1435us; 1436us; 1438us; 793us; 1444us; 793us; 1447us; 793us; 1449us; 793us; 1451us; 793us; 1453us; 793us; 1458us; 793us; 1463us; 793us; 1488us; 793us; 1513us; 793us; 1521us; 793us; 1528us; 793us; 1530us; 793us; 1533us; 793us; 1535us; 793us; 1546us; 793us; 1548us; 793us; 1555us; 793us; 1558us; 793us; 1561us; 793us; 1564us; 793us; 1566us; 793us; 1568us; 793us; 1572us; 793us; 1575us; 793us; 1579us; 793us; 1582us; 793us; 1587us; 793us; 1589us; 793us; 1591us; 793us; 1594us; 793us; 1596us; 793us; 1610us; 793us; 1615us; 793us; 1618us; 793us; 1629us; 793us; 1633us; 793us; 1639us; 793us; 1646us; 793us; 1650us; 793us; 1656us; 793us; 1657us; 793us; 1666us; 793us; 1680us; 793us; 1682us; 793us; 1693us; 793us; 11us; 65535us; 312us; 313us; 316us; 317us; 321us; 322us; 348us; 349us; 489us; 491us; 717us; 718us; 729us; 733us; 732us; 733us; 1269us; 1271us; 1270us; 1272us; 1452us; 1453us; 5us; 65535us; 101us; 580us; 176us; 580us; 428us; 580us; 559us; 575us; 860us; 580us; 13us; 65535us; 31us; 265us; 64us; 122us; 87us; 122us; 188us; 191us; 227us; 265us; 241us; 265us; 259us; 265us; 299us; 326us; 310us; 326us; 332us; 447us; 1436us; 1443us; 1822us; 1824us; 1823us; 1824us; 10us; 65535us; 31us; 49us; 64us; 49us; 87us; 49us; 227us; 49us; 241us; 49us; 259us; 49us; 299us; 324us; 310us; 324us; 1827us; 1829us; 1828us; 1829us; 7us; 65535us; 536us; 537us; 539us; 540us; 884us; 885us; 991us; 1412us; 1408us; 1414us; 1409us; 1410us; 1832us; 1833us; 5us; 65535us; 545us; 546us; 548us; 549us; 992us; 1525us; 1521us; 1527us; 1522us; 1523us; 43us; 65535us; 533us; 534us; 565us; 566us; 607us; 608us; 610us; 611us; 614us; 615us; 647us; 648us; 650us; 651us; 720us; 721us; 804us; 805us; 823us; 826us; 824us; 825us; 828us; 829us; 871us; 872us; 901us; 902us; 904us; 905us; 909us; 910us; 912us; 913us; 989us; 1387us; 990us; 1388us; 1160us; 1319us; 1204us; 1205us; 1326us; 1327us; 1330us; 1331us; 1380us; 1383us; 1381us; 1383us; 1382us; 1383us; 1384us; 1385us; 1397us; 1398us; 1404us; 1405us; 1445us; 1446us; 1449us; 1450us; 1611us; 1612us; 1640us; 1641us; 1651us; 1653us; 1652us; 1653us; 1658us; 1659us; 1669us; 1670us; 1705us; 1706us; 1733us; 1734us; 1735us; 1736us; 1739us; 1740us; 1742us; 1743us; 1837us; 1838us; 26us; 65535us; 70us; 71us; 74us; 75us; 109us; 110us; 113us; 114us; 117us; 118us; 135us; 136us; 153us; 154us; 161us; 162us; 232us; 233us; 236us; 237us; 252us; 285us; 275us; 276us; 279us; 280us; 282us; 283us; 320us; 321us; 358us; 359us; 377us; 379us; 381us; 383us; 503us; 504us; 759us; 760us; 952us; 953us; 957us; 958us; 976us; 977us; 1233us; 1234us; 1239us; 1240us; 1841us; 1842us; 1us; 65535us; 1384us; 1386us; 17us; 65535us; 299us; 308us; 301us; 307us; 488us; 494us; 926us; 1429us; 1056us; 1076us; 1057us; 1064us; 1058us; 1063us; 1059us; 1061us; 1245us; 1246us; 1247us; 1248us; 1426us; 1428us; 1487us; 1491us; 1488us; 1490us; 1675us; 1676us; 1682us; 1686us; 1687us; 1689us; 1729us; 1731us; |]
let _fsyacc_sparseGotoTableRowOffsets = [|0us; 1us; 2us; 3us; 4us; 5us; 7us; 15us; 20us; 26us; 31us; 36us; 41us; 46us; 70us; 72us; 74us; 76us; 83us; 88us; 90us; 93us; 96us; 99us; 103us; 110us; 120us; 130us; 140us; 143us; 145us; 148us; 151us; 155us; 157us; 160us; 163us; 166us; 170us; 179us; 188us; 200us; 204us; 207us; 210us; 213us; 219us; 221us; 223us; 226us; 229us; 232us; 236us; 242us; 252us; 263us; 274us; 290us; 292us; 294us; 297us; 299us; 381us; 500us; 619us; 621us; 624us; 627us; 632us; 639us; 642us; 646us; 649us; 653us; 657us; 661us; 665us; 676us; 687us; 689us; 692us; 696us; 700us; 703us; 714us; 718us; 721us; 723us; 768us; 779us; 846us; 859us; 861us; 866us; 869us; 872us; 875us; 878us; 882us; 885us; 890us; 895us; 898us; 904us; 911us; 978us; 1046us; 1048us; 1054us; 1064us; 1066us; 1068us; 1072us; 1078us; 1080us; 1082us; 1087us; 1091us; 1093us; 1097us; 1101us; 1106us; 1108us; 1112us; 1118us; 1122us; 1126us; 1128us; 1132us; 1136us; 1141us; 1146us; 1150us; 1154us; 1158us; 1162us; 1167us; 1174us; 1181us; 1183us; 1185us; 1201us; 1318us; 1326us; 1443us; 1559us; 1563us; 1569us; 1686us; 1688us; 1690us; 1694us; 1697us; 1699us; 1704us; 1707us; 1713us; 1716us; 1718us; 1721us; 1723us; 1725us; 1727us; 1730us; 1993us; 1995us; 2000us; 2004us; 2195us; 2199us; 2203us; 2206us; 2208us; 2222us; 2236us; 2250us; 2253us; 2256us; 2292us; 2296us; 2305us; 2350us; 2353us; 2376us; 2399us; 2422us; 2425us; 2428us; 2432us; 2458us; 2465us; 2471us; 2524us; 2526us; 2584us; 2686us; 2691us; 2804us; 2806us; 2810us; 2815us; 2822us; 2829us; 2831us; 2833us; 2836us; 2839us; 2841us; 2954us; 3081us; 3209us; 3214us; 3352us; 3355us; 3358us; 3361us; 3366us; 3511us; 3656us; 3845us; 3990us; 4135us; 4139us; 4143us; 4145us; 4290us; 4292us; 4295us; 4299us; 4305us; 4307us; 4309us; 4311us; 4313us; 4317us; 4319us; 4324us; 4326us; 4328us; 4330us; 4333us; 4340us; 4347us; 4351us; 4357us; 4361us; 4363us; 4365us; 4367us; 4370us; 4372us; 4377us; 4383us; 4528us; 4675us; 4788us; 4901us; 4905us; 4911us; 4915us; 4925us; 4935us; 4938us; 4950us; 4982us; 4984us; 5016us; 5023us; 5115us; 5207us; 5273us; 5292us; 5297us; 5300us; 5366us; 5371us; 5438us; 5511us; 5516us; 5523us; 5532us; 5535us; 5539us; 5541us; 5548us; 5555us; 5562us; 5568us; 5675us; 5786us; 6126us; 6246us; 6444us; 6452us; 6455us; 6463us; 6612us; 6662us; 6809us; 6824us; 6837us; 6840us; 6852us; 6857us; 6860us; 6871us; 6874us; 6896us; 6905us; 6910us; 6911us; 6923us; 6931us; 6936us; 6946us; 6949us; 6952us; 6955us; 7220us; 7232us; 7238us; 7252us; 7263us; 7271us; 7277us; 7321us; 7348us; 7350us; |]
let _fsyacc_stateToProdIdxsTableElements = [| 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 2us; 1us; 2us; 1us; 3us; 1us; 3us; 1us; 4us; 1us; 4us; 1us; 5us; 1us; 6us; 1us; 7us; 1us; 8us; 1us; 9us; 1us; 10us; 2us; 11us; 14us; 1us; 11us; 2us; 12us; 15us; 1us; 12us; 2us; 13us; 16us; 1us; 13us; 1us; 14us; 1us; 14us; 1us; 15us; 1us; 15us; 1us; 16us; 1us; 16us; 2us; 17us; 18us; 1us; 18us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 7us; 19us; 136us; 137us; 138us; 139us; 140us; 141us; 48us; 19us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 1us; 20us; 2us; 21us; 22us; 1us; 22us; 1us; 23us; 1us; 24us; 1us; 25us; 1us; 25us; 2us; 25us; 27us; 1us; 27us; 1us; 28us; 2us; 29us; 30us; 1us; 29us; 1us; 30us; 1us; 30us; 3us; 31us; 46us; 49us; 1us; 31us; 1us; 32us; 1us; 32us; 1us; 32us; 3us; 32us; 951us; 952us; 1us; 33us; 1us; 33us; 3us; 33us; 951us; 952us; 2us; 34us; 35us; 1us; 35us; 2us; 36us; 37us; 1us; 36us; 1us; 38us; 1us; 38us; 1us; 38us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 6us; 39us; 53us; 54us; 55us; 56us; 58us; 3us; 39us; 53us; 54us; 1us; 39us; 1us; 40us; 1us; 41us; 3us; 42us; 43us; 44us; 2us; 42us; 43us; 1us; 42us; 1us; 42us; 1us; 43us; 3us; 44us; 46us; 49us; 1us; 44us; 1us; 45us; 2us; 46us; 49us; 2us; 48us; 50us; 2us; 48us; 50us; 1us; 48us; 1us; 49us; 1us; 49us; 1us; 49us; 1us; 51us; 1us; 52us; 5us; 53us; 54us; 55us; 56us; 58us; 5us; 53us; 54us; 55us; 56us; 58us; 2us; 53us; 54us; 2us; 53us; 54us; 1us; 53us; 1us; 54us; 1us; 55us; 1us; 56us; 1us; 57us; 3us; 57us; 951us; 952us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 1us; 58us; 2us; 60us; 61us; 48us; 60us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 1us; 61us; 48us; 61us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 1us; 61us; 1us; 61us; 3us; 62us; 63us; 144us; 1us; 62us; 1us; 62us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 63us; 1us; 64us; 1us; 64us; 1us; 64us; 1us; 65us; 1us; 65us; 2us; 66us; 67us; 1us; 66us; 1us; 66us; 2us; 68us; 69us; 1us; 68us; 1us; 68us; 1us; 69us; 3us; 70us; 79us; 80us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 70us; 1us; 71us; 1us; 71us; 1us; 72us; 1us; 73us; 1us; 74us; 1us; 74us; 1us; 74us; 1us; 75us; 3us; 76us; 77us; 78us; 2us; 76us; 77us; 1us; 76us; 1us; 77us; 1us; 78us; 1us; 78us; 2us; 79us; 80us; 2us; 79us; 80us; 1us; 79us; 1us; 80us; 2us; 81us; 82us; 2us; 81us; 82us; 1us; 81us; 1us; 82us; 2us; 83us; 84us; 2us; 83us; 84us; 1us; 83us; 1us; 84us; 1us; 85us; 1us; 86us; 1us; 88us; 1us; 88us; 1us; 88us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 266us; 267us; 268us; 269us; 270us; 7us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 12us; 89us; 90us; 91us; 92us; 93us; 94us; 95us; 266us; 267us; 268us; 269us; 270us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 89us; 1us; 90us; 4us; 90us; 875us; 876us; 877us; 1us; 91us; 4us; 91us; 875us; 876us; 877us; 1us; 92us; 1us; 92us; 3us; 93us; 94us; 174us; 1us; 93us; 1us; 93us; 1us; 94us; 1us; 94us; 1us; 95us; 1us; 95us; 1us; 95us; 1us; 97us; 1us; 97us; 2us; 98us; 99us; 2us; 98us; 99us; 1us; 98us; 1us; 99us; 2us; 100us; 101us; 1us; 101us; 1us; 101us; 1us; 102us; 2us; 103us; 104us; 1us; 104us; 1us; 105us; 1us; 105us; 1us; 106us; 1us; 106us; 1us; 106us; 2us; 108us; 109us; 1us; 108us; 1us; 109us; 1us; 109us; 2us; 110us; 133us; 1us; 110us; 2us; 111us; 112us; 1us; 112us; 2us; 113us; 114us; 1us; 113us; 1us; 115us; 1us; 115us; 1us; 115us; 11us; 116us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 10us; 116us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 2us; 116us; 141us; 1us; 116us; 1us; 117us; 3us; 118us; 119us; 120us; 2us; 118us; 119us; 1us; 118us; 1us; 118us; 1us; 119us; 2us; 120us; 133us; 1us; 120us; 1us; 121us; 1us; 122us; 10us; 124us; 125us; 126us; 128us; 136us; 137us; 138us; 139us; 140us; 141us; 9us; 124us; 125us; 126us; 136us; 137us; 138us; 139us; 140us; 141us; 50us; 124us; 125us; 126us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 2us; 124us; 125us; 1us; 124us; 1us; 127us; 1us; 128us; 4us; 129us; 130us; 131us; 132us; 1us; 129us; 2us; 130us; 132us; 1us; 130us; 1us; 133us; 2us; 133us; 150us; 2us; 133us; 155us; 1us; 133us; 1us; 133us; 1us; 134us; 1us; 135us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 6us; 136us; 137us; 138us; 139us; 140us; 141us; 1us; 136us; 3us; 136us; 524us; 525us; 1us; 137us; 5us; 137us; 526us; 527us; 528us; 529us; 1us; 138us; 1us; 139us; 1us; 139us; 1us; 139us; 1us; 140us; 1us; 141us; 1us; 141us; 1us; 141us; 2us; 142us; 157us; 1us; 142us; 1us; 143us; 3us; 144us; 951us; 952us; 1us; 144us; 3us; 145us; 951us; 952us; 5us; 146us; 147us; 148us; 149us; 150us; 2us; 146us; 147us; 1us; 146us; 1us; 147us; 2us; 148us; 149us; 1us; 148us; 1us; 149us; 1us; 150us; 1us; 151us; 3us; 152us; 951us; 952us; 3us; 153us; 154us; 155us; 2us; 153us; 154us; 1us; 153us; 1us; 154us; 1us; 155us; 1us; 156us; 1us; 156us; 1us; 156us; 1us; 157us; 2us; 159us; 160us; 1us; 160us; 4us; 161us; 162us; 163us; 164us; 3us; 161us; 163us; 166us; 2us; 161us; 163us; 1us; 161us; 1us; 161us; 2us; 162us; 519us; 1us; 162us; 1us; 162us; 1us; 163us; 1us; 164us; 1us; 165us; 2us; 166us; 1018us; 1us; 166us; 3us; 167us; 951us; 952us; 1us; 167us; 1us; 167us; 2us; 168us; 169us; 3us; 168us; 951us; 952us; 1us; 168us; 1us; 168us; 1us; 169us; 3us; 169us; 951us; 952us; 1us; 169us; 1us; 169us; 1us; 169us; 1us; 170us; 1us; 170us; 1us; 171us; 1us; 171us; 2us; 172us; 950us; 1us; 172us; 1us; 173us; 1us; 173us; 4us; 174us; 215us; 221us; 224us; 1us; 174us; 1us; 175us; 1us; 176us; 1us; 177us; 1us; 178us; 1us; 178us; 1us; 178us; 1us; 179us; 1us; 179us; 1us; 179us; 4us; 181us; 182us; 183us; 184us; 1us; 182us; 1us; 182us; 1us; 183us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 1us; 184us; 4us; 185us; 186us; 195us; 196us; 2us; 185us; 186us; 2us; 185us; 186us; 2us; 185us; 186us; 2us; 185us; 186us; 1us; 185us; 1us; 185us; 1us; 186us; 1us; 187us; 1us; 187us; 1us; 188us; 1us; 189us; 1us; 190us; 1us; 190us; 1us; 190us; 1us; 191us; 3us; 192us; 193us; 194us; 2us; 192us; 193us; 1us; 192us; 1us; 193us; 2us; 194us; 201us; 1us; 194us; 2us; 195us; 196us; 2us; 195us; 196us; 1us; 195us; 1us; 196us; 2us; 197us; 198us; 2us; 197us; 198us; 1us; 197us; 1us; 198us; 1us; 199us; 1us; 200us; 1us; 201us; 1us; 201us; 1us; 203us; 1us; 203us; 1us; 203us; 1us; 204us; 1us; 204us; 2us; 205us; 206us; 2us; 205us; 206us; 1us; 205us; 1us; 206us; 2us; 207us; 208us; 1us; 208us; 1us; 208us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 1us; 209us; 2us; 210us; 211us; 2us; 210us; 211us; 2us; 210us; 211us; 1us; 210us; 1us; 210us; 1us; 211us; 2us; 212us; 213us; 1us; 213us; 11us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 16us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 266us; 267us; 268us; 269us; 270us; 11us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 16us; 214us; 215us; 216us; 217us; 218us; 219us; 220us; 221us; 222us; 223us; 224us; 266us; 267us; 268us; 269us; 270us; 1us; 214us; 1us; 215us; 2us; 216us; 222us; 1us; 216us; 1us; 216us; 1us; 217us; 4us; 217us; 875us; 876us; 877us; 1us; 217us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 218us; 1us; 219us; 1us; 220us; 1us; 220us; 1us; 221us; 1us; 221us; 1us; 222us; 1us; 222us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 223us; 1us; 224us; 1us; 224us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 225us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 226us; 1us; 228us; 1us; 228us; 2us; 229us; 468us; 1us; 229us; 1us; 229us; 1us; 230us; 1us; 230us; 1us; 230us; 1us; 231us; 2us; 232us; 233us; 1us; 232us; 1us; 232us; 1us; 232us; 1us; 233us; 1us; 235us; 1us; 236us; 1us; 237us; 1us; 238us; 1us; 239us; 1us; 241us; 1us; 241us; 1us; 241us; 1us; 243us; 1us; 243us; 1us; 243us; 3us; 245us; 246us; 247us; 2us; 245us; 246us; 1us; 245us; 1us; 246us; 1us; 246us; 1us; 246us; 1us; 247us; 1us; 248us; 1us; 250us; 1us; 250us; 1us; 251us; 2us; 253us; 254us; 1us; 253us; 1us; 254us; 2us; 255us; 256us; 2us; 255us; 256us; 1us; 255us; 1us; 256us; 1us; 257us; 2us; 258us; 259us; 2us; 258us; 259us; 1us; 258us; 4us; 260us; 261us; 262us; 263us; 5us; 260us; 261us; 262us; 263us; 383us; 3us; 260us; 261us; 262us; 1us; 260us; 1us; 260us; 1us; 261us; 1us; 261us; 1us; 262us; 1us; 263us; 1us; 263us; 1us; 263us; 1us; 264us; 1us; 265us; 5us; 266us; 267us; 268us; 269us; 270us; 5us; 266us; 267us; 268us; 269us; 270us; 4us; 266us; 871us; 951us; 952us; 1us; 266us; 1us; 266us; 1us; 266us; 1us; 267us; 1us; 268us; 1us; 269us; 5us; 270us; 878us; 899us; 900us; 911us; 1us; 270us; 1us; 270us; 3us; 271us; 272us; 273us; 2us; 271us; 272us; 1us; 271us; 1us; 272us; 1us; 273us; 1us; 273us; 6us; 274us; 901us; 902us; 903us; 904us; 905us; 1us; 274us; 1us; 275us; 3us; 276us; 277us; 278us; 2us; 276us; 277us; 1us; 276us; 1us; 277us; 1us; 278us; 1us; 278us; 2us; 279us; 896us; 2us; 279us; 414us; 1us; 279us; 1us; 280us; 1us; 281us; 1us; 282us; 1us; 283us; 1us; 284us; 3us; 285us; 286us; 287us; 4us; 285us; 287us; 951us; 952us; 1us; 286us; 3us; 286us; 951us; 952us; 1us; 287us; 1us; 288us; 1us; 289us; 2us; 289us; 290us; 1us; 289us; 2us; 290us; 293us; 3us; 290us; 294us; 295us; 1us; 290us; 2us; 290us; 294us; 1us; 290us; 1us; 291us; 1us; 292us; 1us; 292us; 1us; 293us; 1us; 293us; 1us; 293us; 1us; 293us; 1us; 294us; 1us; 297us; 1us; 297us; 1us; 297us; 1us; 297us; 1us; 297us; 1us; 298us; 2us; 300us; 451us; 1us; 303us; 2us; 303us; 304us; 2us; 304us; 844us; 2us; 304us; 846us; 1us; 304us; 1us; 304us; 1us; 305us; 1us; 306us; 1us; 306us; 1us; 306us; 1us; 306us; 8us; 307us; 308us; 309us; 310us; 311us; 313us; 314us; 315us; 1us; 307us; 1us; 307us; 7us; 308us; 309us; 310us; 311us; 313us; 314us; 315us; 1us; 308us; 3us; 309us; 314us; 315us; 1us; 309us; 1us; 310us; 1us; 311us; 1us; 311us; 1us; 311us; 1us; 312us; 2us; 312us; 316us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 312us; 1us; 313us; 1us; 313us; 1us; 314us; 1us; 316us; 4us; 316us; 875us; 876us; 877us; 4us; 317us; 875us; 876us; 877us; 1us; 318us; 1us; 318us; 1us; 319us; 1us; 319us; 1us; 319us; 2us; 320us; 333us; 1us; 321us; 2us; 322us; 323us; 1us; 322us; 1us; 322us; 4us; 324us; 325us; 326us; 327us; 4us; 324us; 325us; 326us; 327us; 4us; 324us; 325us; 326us; 327us; 1us; 324us; 1us; 325us; 1us; 325us; 1us; 325us; 1us; 326us; 1us; 326us; 1us; 326us; 1us; 327us; 1us; 327us; 1us; 327us; 1us; 328us; 6us; 329us; 330us; 953us; 954us; 956us; 957us; 1us; 329us; 1us; 329us; 1us; 330us; 1us; 330us; 1us; 330us; 5us; 331us; 332us; 334us; 335us; 950us; 1us; 331us; 2us; 332us; 335us; 2us; 332us; 335us; 2us; 332us; 335us; 1us; 333us; 1us; 334us; 1us; 334us; 2us; 336us; 337us; 1us; 336us; 1us; 336us; 2us; 338us; 950us; 1us; 338us; 4us; 338us; 875us; 876us; 877us; 4us; 339us; 875us; 876us; 877us; 1us; 340us; 1us; 341us; 2us; 342us; 343us; 2us; 342us; 1018us; 1us; 342us; 1us; 343us; 1us; 344us; 1us; 344us; 1us; 345us; 1us; 345us; 1us; 345us; 1us; 345us; 1us; 345us; 1us; 346us; 1us; 346us; 1us; 347us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 348us; 1us; 348us; 2us; 349us; 350us; 1us; 350us; 1us; 350us; 1us; 352us; 3us; 352us; 951us; 952us; 1us; 353us; 3us; 353us; 951us; 952us; 1us; 354us; 1us; 354us; 1us; 354us; 1us; 355us; 1us; 356us; 1us; 356us; 1us; 357us; 1us; 357us; 1us; 357us; 1us; 357us; 1us; 358us; 1us; 358us; 1us; 358us; 1us; 359us; 1us; 360us; 1us; 361us; 1us; 362us; 1us; 363us; 1us; 364us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 1us; 365us; 2us; 366us; 369us; 2us; 367us; 370us; 1us; 369us; 1us; 369us; 1us; 370us; 1us; 370us; 2us; 371us; 372us; 5us; 371us; 372us; 374us; 375us; 376us; 1us; 372us; 3us; 373us; 951us; 952us; 4us; 374us; 375us; 376us; 378us; 1us; 374us; 1us; 374us; 1us; 374us; 1us; 375us; 1us; 376us; 1us; 377us; 2us; 377us; 379us; 1us; 377us; 2us; 378us; 379us; 1us; 380us; 1us; 380us; 1us; 381us; 1us; 381us; 1us; 381us; 1us; 383us; 1us; 383us; 1us; 384us; 3us; 385us; 386us; 387us; 3us; 385us; 386us; 387us; 3us; 385us; 386us; 387us; 3us; 385us; 386us; 387us; 2us; 385us; 386us; 1us; 385us; 1us; 386us; 1us; 387us; 2us; 388us; 389us; 2us; 388us; 389us; 1us; 388us; 1us; 389us; 1us; 390us; 1us; 391us; 2us; 391us; 392us; 1us; 392us; 1us; 394us; 2us; 394us; 395us; 1us; 394us; 1us; 394us; 1us; 395us; 1us; 395us; 1us; 396us; 2us; 397us; 398us; 1us; 397us; 1us; 397us; 1us; 398us; 1us; 399us; 1us; 400us; 1us; 401us; 1us; 402us; 1us; 403us; 1us; 404us; 1us; 405us; 1us; 406us; 1us; 407us; 1us; 408us; 1us; 409us; 1us; 410us; 1us; 411us; 2us; 411us; 464us; 1us; 412us; 1us; 413us; 1us; 414us; 1us; 415us; 2us; 416us; 418us; 1us; 416us; 1us; 416us; 2us; 417us; 419us; 2us; 417us; 419us; 1us; 417us; 1us; 417us; 1us; 420us; 1us; 421us; 1us; 421us; 1us; 421us; 1us; 422us; 1us; 423us; 1us; 423us; 2us; 424us; 425us; 1us; 425us; 1us; 425us; 6us; 426us; 438us; 439us; 440us; 445us; 447us; 1us; 427us; 1us; 428us; 1us; 428us; 2us; 429us; 430us; 3us; 429us; 431us; 432us; 1us; 429us; 1us; 429us; 1us; 430us; 1us; 432us; 1us; 432us; 5us; 433us; 434us; 435us; 436us; 437us; 2us; 433us; 435us; 1us; 433us; 1us; 434us; 1us; 435us; 2us; 436us; 519us; 1us; 436us; 1us; 437us; 6us; 438us; 439us; 439us; 440us; 445us; 447us; 6us; 438us; 439us; 440us; 440us; 445us; 447us; 6us; 438us; 439us; 440us; 444us; 445us; 447us; 6us; 438us; 439us; 440us; 445us; 445us; 447us; 6us; 438us; 439us; 440us; 445us; 446us; 447us; 6us; 438us; 439us; 440us; 445us; 447us; 447us; 6us; 438us; 439us; 440us; 445us; 447us; 521us; 6us; 438us; 439us; 440us; 445us; 447us; 522us; 6us; 438us; 439us; 440us; 445us; 447us; 573us; 7us; 438us; 439us; 440us; 445us; 447us; 574us; 575us; 1us; 438us; 1us; 438us; 1us; 439us; 1us; 440us; 2us; 441us; 444us; 2us; 442us; 446us; 1us; 443us; 1us; 444us; 1us; 445us; 1us; 446us; 1us; 447us; 2us; 448us; 449us; 1us; 448us; 2us; 449us; 1018us; 1us; 449us; 1us; 450us; 4us; 450us; 989us; 991us; 992us; 1us; 450us; 7us; 450us; 485us; 486us; 489us; 491us; 494us; 496us; 5us; 451us; 452us; 453us; 454us; 470us; 3us; 452us; 453us; 454us; 1us; 452us; 1us; 453us; 1us; 453us; 1us; 454us; 1us; 454us; 1us; 455us; 1us; 455us; 1us; 456us; 9us; 457us; 475us; 476us; 477us; 478us; 953us; 954us; 956us; 957us; 1us; 457us; 1us; 457us; 1us; 458us; 4us; 459us; 460us; 461us; 462us; 1us; 459us; 1us; 460us; 1us; 460us; 1us; 461us; 1us; 461us; 1us; 463us; 1us; 464us; 1us; 464us; 1us; 465us; 1us; 465us; 1us; 465us; 1us; 466us; 1us; 466us; 1us; 466us; 1us; 467us; 1us; 467us; 1us; 467us; 1us; 469us; 2us; 469us; 974us; 1us; 469us; 1us; 470us; 1us; 471us; 1us; 472us; 1us; 473us; 1us; 474us; 8us; 475us; 476us; 477us; 478us; 953us; 954us; 956us; 957us; 2us; 475us; 476us; 1us; 475us; 1us; 476us; 3us; 477us; 519us; 954us; 2us; 477us; 954us; 1us; 478us; 4us; 479us; 480us; 481us; 482us; 4us; 479us; 480us; 481us; 482us; 4us; 479us; 480us; 487us; 493us; 1us; 479us; 1us; 480us; 2us; 481us; 519us; 1us; 481us; 1us; 482us; 7us; 483us; 485us; 486us; 489us; 491us; 494us; 496us; 7us; 485us; 486us; 486us; 489us; 491us; 494us; 496us; 7us; 485us; 486us; 489us; 490us; 491us; 494us; 496us; 7us; 485us; 486us; 489us; 491us; 491us; 494us; 496us; 7us; 485us; 486us; 489us; 491us; 493us; 494us; 496us; 7us; 485us; 486us; 489us; 491us; 494us; 494us; 496us; 7us; 485us; 486us; 489us; 491us; 494us; 495us; 496us; 6us; 485us; 486us; 489us; 491us; 494us; 496us; 7us; 485us; 486us; 489us; 491us; 494us; 496us; 496us; 7us; 485us; 486us; 489us; 491us; 494us; 496us; 499us; 8us; 485us; 486us; 489us; 491us; 494us; 496us; 501us; 502us; 14us; 485us; 486us; 489us; 491us; 494us; 496us; 567us; 568us; 768us; 769us; 770us; 771us; 772us; 773us; 7us; 485us; 486us; 489us; 491us; 494us; 496us; 638us; 1us; 485us; 1us; 485us; 1us; 486us; 2us; 487us; 493us; 2us; 488us; 495us; 1us; 489us; 1us; 489us; 1us; 490us; 1us; 491us; 1us; 492us; 1us; 493us; 1us; 494us; 1us; 495us; 1us; 496us; 2us; 497us; 498us; 1us; 497us; 2us; 498us; 1018us; 1us; 498us; 3us; 499us; 951us; 952us; 1us; 499us; 1us; 501us; 2us; 502us; 1018us; 1us; 502us; 2us; 503us; 504us; 2us; 503us; 504us; 1us; 503us; 1us; 504us; 1us; 505us; 1us; 506us; 1us; 506us; 1us; 506us; 48us; 507us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 2us; 508us; 509us; 1us; 508us; 2us; 510us; 511us; 1us; 510us; 1us; 510us; 1us; 512us; 1us; 512us; 52us; 513us; 514us; 515us; 516us; 517us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 53us; 513us; 514us; 515us; 516us; 517us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 712us; 55us; 513us; 514us; 515us; 516us; 517us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 764us; 765us; 766us; 2us; 513us; 514us; 1us; 513us; 1us; 516us; 1us; 516us; 1us; 517us; 1us; 517us; 1us; 517us; 1us; 517us; 5us; 518us; 526us; 527us; 528us; 529us; 1us; 519us; 2us; 519us; 554us; 2us; 519us; 557us; 2us; 519us; 562us; 2us; 519us; 565us; 2us; 519us; 567us; 2us; 519us; 689us; 2us; 519us; 703us; 2us; 519us; 730us; 2us; 519us; 734us; 2us; 519us; 739us; 3us; 519us; 739us; 954us; 2us; 519us; 754us; 2us; 519us; 830us; 1us; 520us; 1us; 521us; 1us; 521us; 1us; 521us; 1us; 521us; 1us; 521us; 1us; 522us; 1us; 522us; 1us; 522us; 1us; 522us; 1us; 522us; 1us; 522us; 2us; 524us; 525us; 2us; 524us; 525us; 1us; 524us; 1us; 525us; 4us; 526us; 527us; 528us; 529us; 1us; 526us; 1us; 527us; 2us; 528us; 529us; 1us; 528us; 1us; 529us; 1us; 530us; 1us; 531us; 1us; 532us; 2us; 533us; 534us; 2us; 533us; 534us; 1us; 533us; 1us; 534us; 2us; 535us; 536us; 2us; 535us; 536us; 1us; 535us; 1us; 536us; 3us; 537us; 538us; 539us; 3us; 537us; 538us; 539us; 1us; 537us; 1us; 538us; 1us; 539us; 1us; 539us; 3us; 540us; 541us; 542us; 49us; 540us; 541us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 1us; 540us; 1us; 541us; 1us; 542us; 1us; 543us; 48us; 543us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 2us; 544us; 545us; 48us; 544us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 1us; 546us; 1us; 546us; 2us; 547us; 548us; 1us; 547us; 6us; 549us; 550us; 551us; 552us; 553us; 554us; 51us; 549us; 550us; 551us; 552us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 3us; 549us; 550us; 551us; 2us; 549us; 550us; 1us; 549us; 1us; 550us; 1us; 551us; 1us; 551us; 1us; 552us; 1us; 553us; 1us; 554us; 15us; 555us; 556us; 557us; 558us; 559us; 560us; 561us; 562us; 563us; 564us; 565us; 566us; 567us; 568us; 578us; 6us; 555us; 556us; 557us; 558us; 559us; 578us; 4us; 555us; 556us; 557us; 558us; 2us; 555us; 556us; 1us; 555us; 1us; 556us; 1us; 557us; 1us; 558us; 1us; 559us; 5us; 560us; 561us; 562us; 563us; 564us; 4us; 560us; 561us; 562us; 563us; 2us; 560us; 561us; 1us; 560us; 1us; 561us; 1us; 562us; 1us; 563us; 1us; 564us; 1us; 565us; 1us; 565us; 1us; 565us; 1us; 566us; 1us; 567us; 2us; 568us; 1071us; 2us; 569us; 571us; 48us; 569us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 2us; 570us; 572us; 48us; 570us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 1us; 571us; 1us; 572us; 1us; 573us; 1us; 573us; 1us; 573us; 1us; 573us; 1us; 573us; 1us; 573us; 1us; 573us; 2us; 574us; 575us; 2us; 574us; 575us; 2us; 574us; 575us; 2us; 574us; 575us; 2us; 574us; 575us; 1us; 574us; 1us; 574us; 1us; 575us; 1us; 576us; 1us; 576us; 1us; 576us; 1us; 576us; 1us; 576us; 1us; 577us; 1us; 577us; 1us; 577us; 1us; 578us; 1us; 578us; 1us; 579us; 48us; 579us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 1us; 580us; 1us; 580us; 48us; 581us; 582us; 583us; 584us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 644us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 648us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 652us; 659us; 660us; 49us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 655us; 656us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 657us; 659us; 660us; 47us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 660us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 712us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 713us; 51us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 764us; 765us; 766us; 768us; 51us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 764us; 765us; 766us; 772us; 49us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 764us; 765us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 765us; 48us; 581us; 582us; 583us; 584us; 587us; 588us; 589us; 590us; 591us; 592us; 593us; 594us; 595us; 596us; 597us; 598us; 599us; 600us; 601us; 602us; 603us; 604us; 605us; 606us; 607us; 608us; 609us; 610us; 611us; 612us; 613us; 614us; 615us; 616us; 617us; 618us; 619us; 620us; 621us; 622us; 623us; 624us; 625us; 626us; 627us; 659us; 660us; 772us; 1us; 581us; 1us; 581us; 1us; 582us; 1us; 582us; 1us; 583us; 1us; 583us; 1us; 584us; 2us; 585us; 628us; 1us; 585us; 1us; 585us; 3us; 586us; 657us; 658us; 5us; 586us; 657us; 658us; 691us; 692us; 2us; 587us; 608us; 2us; 588us; 609us; 2us; 589us; 610us; 2us; 590us; 611us; 2us; 591us; 612us; 2us; 592us; 613us; 2us; 593us; 614us; 2us; 594us; 615us; 2us; 595us; 616us; 2us; 596us; 617us; 3us; 597us; 598us; 618us; 1us; 598us; 2us; 599us; 619us; 2us; 600us; 620us; 2us; 601us; 621us; 2us; 602us; 622us; 2us; 603us; 623us; 2us; 604us; 624us; 2us; 605us; 625us; 2us; 606us; 626us; 2us; 607us; 627us; 1us; 608us; 1us; 609us; 1us; 610us; 1us; 611us; 1us; 612us; 1us; 613us; 1us; 614us; 1us; 615us; 1us; 616us; 1us; 617us; 1us; 618us; 1us; 619us; 1us; 620us; 1us; 621us; 1us; 622us; 1us; 623us; 1us; 624us; 1us; 625us; 1us; 626us; 1us; 627us; 1us; 629us; 1us; 630us; 1us; 630us; 1us; 630us; 1us; 631us; 1us; 631us; 2us; 632us; 633us; 2us; 632us; 633us; 1us; 632us; 1us; 633us; 1us; 634us; 2us; 635us; 636us; 1us; 635us; 1us; 636us; 1us; 637us; 1us; 638us; 5us; 639us; 640us; 641us; 642us; 643us; 4us; 639us; 640us; 641us; 642us; 2us; 640us; 641us; 1us; 640us; 1us; 641us; 1us; 642us; 1us; 643us; 1us; 644us; 1us; 646us; 1us; 646us; 1us; 647us; 1us; 647us; 1us; 648us; 2us; 649us; 650us; 2us; 649us; 650us; 2us; 649us; 650us; 1us; 649us; 1us; 650us; 1us; 652us; 2us; 653us; 654us; 2us; 653us; 654us; 2us; 653us; 654us; 1us; 653us; 1us; 654us; 2us; 655us; 656us; 1us; 655us; 1us; 656us; 2us; 657us; 658us; 1us; 658us; 2us; 659us; 660us; 1us; 659us; 1us; 661us; 2us; 661us; 968us; 1us; 661us; 1us; 662us; 2us; 662us; 964us; 1us; 662us; 1us; 663us; 2us; 663us; 967us; 1us; 663us; 1us; 664us; 2us; 664us; 980us; 1us; 664us; 1us; 665us; 2us; 665us; 975us; 1us; 665us; 1us; 666us; 2us; 666us; 976us; 1us; 666us; 3us; 667us; 668us; 669us; 7us; 667us; 668us; 669us; 812us; 813us; 814us; 815us; 2us; 667us; 668us; 6us; 667us; 668us; 812us; 813us; 814us; 815us; 2us; 667us; 668us; 4us; 667us; 668us; 813us; 814us; 1us; 667us; 3us; 667us; 813us; 814us; 1us; 668us; 1us; 669us; 1us; 670us; 1us; 670us; 1us; 671us; 1us; 671us; 2us; 672us; 673us; 6us; 672us; 673us; 788us; 792us; 793us; 794us; 5us; 673us; 788us; 792us; 793us; 794us; 1us; 673us; 6us; 674us; 677us; 678us; 679us; 681us; 684us; 1us; 675us; 6us; 675us; 677us; 678us; 679us; 681us; 684us; 6us; 676us; 677us; 678us; 679us; 681us; 684us; 6us; 677us; 677us; 678us; 679us; 681us; 684us; 6us; 677us; 678us; 678us; 679us; 681us; 684us; 6us; 677us; 678us; 679us; 680us; 681us; 684us; 6us; 677us; 678us; 679us; 681us; 684us; 908us; 1us; 677us; 1us; 678us; 1us; 679us; 1us; 679us; 1us; 680us; 2us; 680us; 958us; 1us; 681us; 1us; 681us; 1us; 682us; 1us; 682us; 1us; 682us; 1us; 683us; 2us; 683us; 974us; 1us; 683us; 1us; 684us; 1us; 684us; 1us; 685us; 1us; 686us; 4us; 687us; 688us; 689us; 690us; 2us; 687us; 688us; 1us; 687us; 1us; 688us; 1us; 689us; 1us; 690us; 3us; 691us; 692us; 826us; 2us; 691us; 692us; 1us; 691us; 1us; 692us; 1us; 693us; 1us; 694us; 1us; 695us; 1us; 697us; 6us; 698us; 699us; 953us; 954us; 956us; 957us; 1us; 698us; 1us; 698us; 1us; 698us; 1us; 698us; 1us; 699us; 1us; 699us; 5us; 700us; 701us; 702us; 703us; 704us; 1us; 700us; 1us; 700us; 2us; 701us; 702us; 1us; 701us; 1us; 702us; 1us; 703us; 1us; 704us; 2us; 705us; 706us; 1us; 705us; 1us; 705us; 3us; 707us; 708us; 711us; 2us; 707us; 708us; 1us; 707us; 1us; 709us; 1us; 709us; 1us; 710us; 1us; 713us; 1us; 714us; 1us; 715us; 1us; 716us; 1us; 717us; 1us; 718us; 1us; 719us; 1us; 720us; 1us; 721us; 1us; 722us; 1us; 723us; 4us; 724us; 725us; 726us; 727us; 2us; 724us; 725us; 1us; 724us; 1us; 725us; 1us; 726us; 1us; 726us; 1us; 727us; 4us; 728us; 729us; 730us; 731us; 5us; 728us; 729us; 730us; 731us; 983us; 2us; 728us; 729us; 1us; 728us; 1us; 729us; 1us; 730us; 1us; 731us; 4us; 732us; 733us; 734us; 735us; 2us; 732us; 733us; 1us; 732us; 1us; 733us; 1us; 734us; 1us; 735us; 9us; 736us; 737us; 738us; 739us; 740us; 741us; 742us; 743us; 744us; 14us; 736us; 737us; 738us; 739us; 740us; 741us; 742us; 743us; 744us; 749us; 953us; 954us; 956us; 957us; 13us; 736us; 737us; 738us; 739us; 740us; 741us; 742us; 743us; 744us; 953us; 954us; 956us; 957us; 1us; 736us; 2us; 737us; 738us; 1us; 737us; 1us; 738us; 1us; 739us; 2us; 739us; 954us; 1us; 740us; 1us; 741us; 1us; 742us; 1us; 743us; 1us; 744us; 1us; 745us; 1us; 745us; 1us; 745us; 1us; 745us; 1us; 745us; 1us; 745us; 1us; 746us; 1us; 747us; 1us; 748us; 2us; 748us; 751us; 2us; 749us; 750us; 1us; 749us; 1us; 750us; 1us; 750us; 5us; 752us; 753us; 754us; 755us; 756us; 2us; 752us; 753us; 1us; 752us; 1us; 753us; 1us; 754us; 1us; 755us; 1us; 756us; 1us; 757us; 1us; 758us; 1us; 759us; 1us; 760us; 1us; 762us; 1us; 763us; 3us; 764us; 765us; 766us; 1us; 765us; 1us; 766us; 1us; 767us; 1us; 767us; 3us; 768us; 769us; 770us; 1us; 769us; 1us; 770us; 1us; 771us; 2us; 772us; 773us; 1us; 772us; 1us; 773us; 1us; 774us; 1us; 775us; 1us; 776us; 1us; 776us; 1us; 776us; 2us; 776us; 777us; 1us; 776us; 1us; 776us; 1us; 777us; 1us; 780us; 1us; 782us; 1us; 782us; 1us; 782us; 1us; 782us; 2us; 784us; 785us; 1us; 784us; 5us; 785us; 878us; 899us; 900us; 911us; 1us; 785us; 1us; 786us; 1us; 786us; 1us; 786us; 1us; 786us; 2us; 786us; 803us; 1us; 786us; 1us; 787us; 1us; 788us; 1us; 788us; 2us; 788us; 803us; 1us; 788us; 3us; 789us; 790us; 791us; 2us; 790us; 791us; 1us; 791us; 2us; 791us; 803us; 1us; 791us; 1us; 792us; 1us; 792us; 2us; 792us; 803us; 1us; 792us; 2us; 793us; 794us; 1us; 793us; 1us; 793us; 1us; 794us; 2us; 794us; 803us; 1us; 794us; 1us; 794us; 1us; 795us; 2us; 795us; 803us; 2us; 797us; 800us; 2us; 798us; 799us; 1us; 799us; 1us; 800us; 3us; 801us; 951us; 952us; 1us; 802us; 1us; 803us; 5us; 805us; 806us; 807us; 808us; 809us; 3us; 805us; 806us; 807us; 1us; 805us; 1us; 807us; 1us; 809us; 2us; 810us; 811us; 1us; 810us; 1us; 810us; 1us; 810us; 1us; 811us; 1us; 811us; 1us; 813us; 1us; 816us; 2us; 818us; 820us; 1us; 818us; 1us; 819us; 1us; 819us; 1us; 819us; 1us; 820us; 1us; 820us; 1us; 821us; 1us; 821us; 1us; 823us; 1us; 823us; 1us; 824us; 1us; 824us; 1us; 825us; 4us; 825us; 875us; 876us; 877us; 1us; 825us; 1us; 825us; 1us; 825us; 1us; 826us; 1us; 826us; 1us; 827us; 5us; 828us; 829us; 830us; 831us; 832us; 2us; 828us; 829us; 1us; 828us; 1us; 829us; 1us; 830us; 1us; 831us; 1us; 832us; 2us; 833us; 834us; 2us; 833us; 834us; 2us; 833us; 834us; 1us; 833us; 1us; 834us; 6us; 835us; 836us; 837us; 838us; 839us; 840us; 5us; 835us; 836us; 837us; 838us; 839us; 4us; 835us; 836us; 837us; 838us; 2us; 835us; 836us; 1us; 835us; 1us; 836us; 1us; 837us; 1us; 837us; 1us; 838us; 1us; 839us; 1us; 839us; 1us; 840us; 1us; 840us; 1us; 841us; 1us; 841us; 1us; 842us; 1us; 842us; 1us; 842us; 2us; 843us; 844us; 1us; 844us; 2us; 845us; 846us; 1us; 846us; 1us; 848us; 1us; 848us; 2us; 849us; 850us; 1us; 849us; 1us; 849us; 2us; 851us; 852us; 1us; 851us; 1us; 851us; 2us; 853us; 854us; 1us; 853us; 1us; 853us; 3us; 855us; 856us; 857us; 5us; 855us; 857us; 875us; 876us; 877us; 1us; 855us; 4us; 855us; 875us; 876us; 877us; 1us; 856us; 1us; 856us; 1us; 856us; 4us; 856us; 875us; 876us; 877us; 5us; 858us; 860us; 875us; 876us; 877us; 1us; 858us; 4us; 858us; 875us; 876us; 877us; 1us; 859us; 1us; 859us; 1us; 859us; 4us; 859us; 875us; 876us; 877us; 2us; 861us; 862us; 1us; 861us; 1us; 861us; 1us; 863us; 1us; 863us; 6us; 864us; 866us; 867us; 875us; 876us; 877us; 1us; 864us; 1us; 864us; 1us; 865us; 1us; 865us; 1us; 866us; 1us; 866us; 6us; 868us; 869us; 870us; 875us; 876us; 877us; 1us; 868us; 1us; 868us; 1us; 869us; 1us; 869us; 3us; 871us; 951us; 952us; 1us; 872us; 2us; 872us; 880us; 2us; 873us; 874us; 4us; 873us; 874us; 912us; 915us; 1us; 873us; 1us; 873us; 7us; 875us; 876us; 877us; 901us; 902us; 903us; 904us; 1us; 875us; 1us; 876us; 1us; 876us; 1us; 877us; 4us; 878us; 899us; 900us; 911us; 1us; 878us; 1us; 878us; 1us; 878us; 1us; 879us; 1us; 880us; 1us; 880us; 2us; 881us; 898us; 1us; 881us; 1us; 881us; 4us; 882us; 883us; 884us; 885us; 1us; 882us; 3us; 883us; 884us; 885us; 1us; 883us; 2us; 884us; 885us; 1us; 884us; 1us; 885us; 1us; 885us; 1us; 886us; 1us; 886us; 1us; 886us; 3us; 886us; 887us; 888us; 4us; 887us; 888us; 918us; 919us; 2us; 887us; 888us; 1us; 887us; 1us; 888us; 2us; 890us; 891us; 1us; 891us; 1us; 891us; 4us; 892us; 899us; 900us; 911us; 1us; 892us; 1us; 892us; 1us; 892us; 3us; 893us; 913us; 914us; 3us; 894us; 913us; 914us; 1us; 895us; 1us; 896us; 3us; 896us; 913us; 914us; 1us; 897us; 1us; 898us; 3us; 899us; 900us; 911us; 2us; 899us; 900us; 5us; 899us; 900us; 925us; 926us; 927us; 1us; 899us; 1us; 900us; 5us; 901us; 902us; 903us; 904us; 905us; 5us; 901us; 902us; 903us; 904us; 905us; 3us; 901us; 902us; 903us; 2us; 901us; 902us; 1us; 901us; 1us; 902us; 1us; 903us; 1us; 904us; 1us; 905us; 1us; 906us; 1us; 907us; 1us; 908us; 1us; 909us; 1us; 910us; 1us; 911us; 1us; 911us; 1us; 912us; 2us; 913us; 914us; 4us; 913us; 914us; 951us; 952us; 1us; 914us; 1us; 915us; 1us; 915us; 1us; 916us; 1us; 917us; 1us; 917us; 7us; 918us; 919us; 920us; 921us; 922us; 923us; 924us; 3us; 918us; 919us; 920us; 3us; 918us; 919us; 920us; 2us; 918us; 919us; 1us; 918us; 1us; 919us; 1us; 920us; 3us; 921us; 922us; 928us; 1us; 921us; 1us; 922us; 1us; 923us; 1us; 924us; 3us; 925us; 926us; 927us; 2us; 926us; 927us; 1us; 926us; 1us; 928us; 1us; 929us; 2us; 931us; 932us; 3us; 931us; 942us; 943us; 1us; 931us; 1us; 932us; 1us; 932us; 3us; 933us; 951us; 952us; 1us; 934us; 1us; 935us; 3us; 935us; 942us; 943us; 1us; 935us; 2us; 936us; 937us; 1us; 937us; 1us; 937us; 1us; 938us; 2us; 939us; 940us; 1us; 940us; 1us; 941us; 3us; 942us; 942us; 943us; 3us; 942us; 943us; 943us; 3us; 942us; 943us; 944us; 1us; 942us; 1us; 943us; 1us; 944us; 1us; 945us; 1us; 945us; 1us; 946us; 1us; 947us; 2us; 947us; 961us; 1us; 947us; 1us; 948us; 1us; 949us; 1us; 950us; 2us; 951us; 952us; 1us; 951us; 1us; 952us; 4us; 953us; 954us; 956us; 957us; 1us; 953us; 1us; 953us; 1us; 954us; 1us; 954us; 1us; 955us; 3us; 956us; 957us; 986us; 3us; 956us; 957us; 986us; 1us; 956us; 1us; 957us; 1us; 957us; 1us; 957us; 1us; 958us; 1us; 959us; 1us; 960us; 1us; 961us; 1us; 962us; 1us; 963us; 1us; 964us; 1us; 965us; 1us; 966us; 1us; 967us; 1us; 968us; 1us; 969us; 1us; 970us; 1us; 971us; 1us; 972us; 1us; 973us; 1us; 974us; 1us; 975us; 1us; 976us; 1us; 977us; 1us; 978us; 1us; 979us; 1us; 980us; 2us; 981us; 982us; 1us; 982us; 1us; 983us; 1us; 983us; 1us; 984us; 1us; 985us; 1us; 985us; 1us; 986us; 1us; 987us; 1us; 988us; 3us; 989us; 991us; 992us; 1us; 990us; 2us; 991us; 992us; 1us; 991us; 1us; 992us; 1us; 993us; 1us; 994us; 1us; 995us; 1us; 996us; 2us; 997us; 998us; 1us; 998us; 1us; 999us; 1us; 999us; 2us; 1001us; 1003us; 2us; 1002us; 1004us; 1us; 1003us; 1us; 1004us; 1us; 1005us; 1us; 1006us; 1us; 1007us; 1us; 1008us; 1us; 1009us; 1us; 1010us; 1us; 1012us; 1us; 1014us; 1us; 1016us; 1us; 1018us; 1us; 1020us; 1us; 1024us; 1us; 1026us; 1us; 1028us; 1us; 1029us; 1us; 1030us; 1us; 1031us; 1us; 1032us; 1us; 1033us; 1us; 1034us; 1us; 1035us; 1us; 1036us; 1us; 1037us; 1us; 1038us; 1us; 1039us; 1us; 1040us; 1us; 1041us; 1us; 1043us; 1us; 1045us; 2us; 1045us; 1066us; 1us; 1045us; 1us; 1046us; 1us; 1047us; 1us; 1048us; 2us; 1048us; 1067us; 1us; 1048us; 1us; 1049us; 1us; 1050us; 1us; 1051us; 1us; 1051us; 1us; 1052us; 1us; 1053us; 1us; 1054us; 1us; 1055us; 1us; 1055us; 1us; 1056us; 1us; 1057us; 1us; 1058us; 1us; 1058us; 1us; 1059us; 1us; 1060us; 1us; 1061us; 1us; 1062us; 1us; 1063us; 1us; 1064us; 1us; 1065us; 1us; 1066us; 1us; 1067us; 1us; 1068us; 1us; 1069us; 1us; 1070us; 1us; 1071us; |]
let _fsyacc_stateToProdIdxsTableRowOffsets = [|0us; 2us; 4us; 6us; 8us; 10us; 12us; 14us; 16us; 18us; 20us; 22us; 24us; 26us; 28us; 30us; 32us; 35us; 37us; 40us; 42us; 45us; 47us; 49us; 51us; 53us; 55us; 57us; 59us; 62us; 64us; 72us; 80us; 129us; 131us; 134us; 136us; 138us; 140us; 142us; 144us; 147us; 149us; 151us; 154us; 156us; 158us; 160us; 164us; 166us; 168us; 170us; 172us; 176us; 178us; 180us; 184us; 187us; 189us; 192us; 194us; 196us; 198us; 200us; 207us; 214us; 218us; 220us; 222us; 224us; 228us; 231us; 233us; 235us; 237us; 241us; 243us; 245us; 248us; 251us; 254us; 256us; 258us; 260us; 262us; 264us; 266us; 272us; 278us; 281us; 284us; 286us; 288us; 290us; 292us; 294us; 298us; 300us; 302us; 304us; 306us; 308us; 310us; 312us; 314us; 316us; 318us; 321us; 370us; 372us; 421us; 423us; 425us; 429us; 431us; 433us; 435us; 437us; 439us; 441us; 443us; 445us; 447us; 449us; 451us; 454us; 456us; 458us; 461us; 463us; 465us; 467us; 471us; 473us; 475us; 477us; 479us; 481us; 483us; 485us; 487us; 489us; 491us; 493us; 495us; 497us; 499us; 503us; 506us; 508us; 510us; 512us; 514us; 517us; 520us; 522us; 524us; 527us; 530us; 532us; 534us; 537us; 540us; 542us; 544us; 546us; 548us; 550us; 552us; 554us; 562us; 575us; 583us; 596us; 598us; 600us; 602us; 604us; 606us; 608us; 610us; 612us; 614us; 616us; 621us; 623us; 628us; 630us; 632us; 636us; 638us; 640us; 642us; 644us; 646us; 648us; 650us; 652us; 654us; 657us; 660us; 662us; 664us; 667us; 669us; 671us; 673us; 676us; 678us; 680us; 682us; 684us; 686us; 688us; 691us; 693us; 695us; 697us; 700us; 702us; 705us; 707us; 710us; 712us; 714us; 716us; 718us; 730us; 741us; 744us; 746us; 748us; 752us; 755us; 757us; 759us; 761us; 764us; 766us; 768us; 770us; 781us; 791us; 842us; 845us; 847us; 849us; 851us; 856us; 858us; 861us; 863us; 865us; 868us; 871us; 873us; 875us; 877us; 879us; 886us; 893us; 895us; 899us; 901us; 907us; 909us; 911us; 913us; 915us; 917us; 919us; 921us; 923us; 926us; 928us; 930us; 934us; 936us; 940us; 946us; 949us; 951us; 953us; 956us; 958us; 960us; 962us; 964us; 968us; 972us; 975us; 977us; 979us; 981us; 983us; 985us; 987us; 989us; 992us; 994us; 999us; 1003us; 1006us; 1008us; 1010us; 1013us; 1015us; 1017us; 1019us; 1021us; 1023us; 1026us; 1028us; 1032us; 1034us; 1036us; 1039us; 1043us; 1045us; 1047us; 1049us; 1053us; 1055us; 1057us; 1059us; 1061us; 1063us; 1065us; 1067us; 1070us; 1072us; 1074us; 1076us; 1081us; 1083us; 1085us; 1087us; 1089us; 1091us; 1093us; 1095us; 1097us; 1099us; 1101us; 1106us; 1108us; 1110us; 1112us; 1114us; 1116us; 1118us; 1120us; 1122us; 1124us; 1126us; 1131us; 1134us; 1137us; 1140us; 1143us; 1145us; 1147us; 1149us; 1151us; 1153us; 1155us; 1157us; 1159us; 1161us; 1163us; 1165us; 1169us; 1172us; 1174us; 1176us; 1179us; 1181us; 1184us; 1187us; 1189us; 1191us; 1194us; 1197us; 1199us; 1201us; 1203us; 1205us; 1207us; 1209us; 1211us; 1213us; 1215us; 1217us; 1219us; 1222us; 1225us; 1227us; 1229us; 1232us; 1234us; 1236us; 1238us; 1240us; 1242us; 1244us; 1246us; 1248us; 1251us; 1254us; 1257us; 1259us; 1261us; 1263us; 1266us; 1268us; 1280us; 1297us; 1309us; 1326us; 1328us; 1330us; 1333us; 1335us; 1337us; 1339us; 1344us; 1346us; 1348us; 1350us; 1352us; 1354us; 1356us; 1358us; 1360us; 1362us; 1364us; 1366us; 1368us; 1370us; 1372us; 1374us; 1376us; 1378us; 1380us; 1382us; 1384us; 1386us; 1388us; 1390us; 1392us; 1394us; 1396us; 1398us; 1400us; 1402us; 1404us; 1406us; 1408us; 1410us; 1412us; 1414us; 1416us; 1418us; 1420us; 1422us; 1424us; 1427us; 1429us; 1431us; 1433us; 1435us; 1437us; 1439us; 1442us; 1444us; 1446us; 1448us; 1450us; 1452us; 1454us; 1456us; 1458us; 1460us; 1462us; 1464us; 1466us; 1468us; 1470us; 1472us; 1476us; 1479us; 1481us; 1483us; 1485us; 1487us; 1489us; 1491us; 1493us; 1495us; 1497us; 1500us; 1502us; 1504us; 1507us; 1510us; 1512us; 1514us; 1516us; 1519us; 1522us; 1524us; 1529us; 1535us; 1539us; 1541us; 1543us; 1545us; 1547us; 1549us; 1551us; 1553us; 1555us; 1557us; 1559us; 1565us; 1571us; 1576us; 1578us; 1580us; 1582us; 1584us; 1586us; 1588us; 1594us; 1596us; 1598us; 1602us; 1605us; 1607us; 1609us; 1611us; 1613us; 1620us; 1622us; 1624us; 1628us; 1631us; 1633us; 1635us; 1637us; 1639us; 1642us; 1645us; 1647us; 1649us; 1651us; 1653us; 1655us; 1657us; 1661us; 1666us; 1668us; 1672us; 1674us; 1676us; 1678us; 1681us; 1683us; 1686us; 1690us; 1692us; 1695us; 1697us; 1699us; 1701us; 1703us; 1705us; 1707us; 1709us; 1711us; 1713us; 1715us; 1717us; 1719us; 1721us; 1723us; 1725us; 1728us; 1730us; 1733us; 1736us; 1739us; 1741us; 1743us; 1745us; 1747us; 1749us; 1751us; 1753us; 1762us; 1764us; 1766us; 1774us; 1776us; 1780us; 1782us; 1784us; 1786us; 1788us; 1790us; 1792us; 1795us; 1797us; 1799us; 1801us; 1803us; 1805us; 1807us; 1809us; 1811us; 1813us; 1818us; 1823us; 1825us; 1827us; 1829us; 1831us; 1833us; 1836us; 1838us; 1841us; 1843us; 1845us; 1850us; 1855us; 1860us; 1862us; 1864us; 1866us; 1868us; 1870us; 1872us; 1874us; 1876us; 1878us; 1880us; 1882us; 1889us; 1891us; 1893us; 1895us; 1897us; 1899us; 1905us; 1907us; 1910us; 1913us; 1916us; 1918us; 1920us; 1922us; 1925us; 1927us; 1929us; 1932us; 1934us; 1939us; 1944us; 1946us; 1948us; 1951us; 1954us; 1956us; 1958us; 1960us; 1962us; 1964us; 1966us; 1968us; 1970us; 1972us; 1974us; 1976us; 1978us; 1980us; 1982us; 1984us; 1986us; 1988us; 1991us; 1993us; 1995us; 1997us; 2001us; 2003us; 2007us; 2009us; 2011us; 2013us; 2015us; 2017us; 2019us; 2021us; 2023us; 2025us; 2027us; 2029us; 2031us; 2033us; 2035us; 2037us; 2039us; 2041us; 2043us; 2045us; 2047us; 2049us; 2051us; 2053us; 2055us; 2057us; 2059us; 2061us; 2064us; 2067us; 2069us; 2071us; 2073us; 2075us; 2078us; 2084us; 2086us; 2090us; 2095us; 2097us; 2099us; 2101us; 2103us; 2105us; 2107us; 2110us; 2112us; 2115us; 2117us; 2119us; 2121us; 2123us; 2125us; 2127us; 2129us; 2131us; 2135us; 2139us; 2143us; 2147us; 2150us; 2152us; 2154us; 2156us; 2159us; 2162us; 2164us; 2166us; 2168us; 2170us; 2173us; 2175us; 2177us; 2180us; 2182us; 2184us; 2186us; 2188us; 2190us; 2193us; 2195us; 2197us; 2199us; 2201us; 2203us; 2205us; 2207us; 2209us; 2211us; 2213us; 2215us; 2217us; 2219us; 2221us; 2223us; 2225us; 2228us; 2230us; 2232us; 2234us; 2236us; 2239us; 2241us; 2243us; 2246us; 2249us; 2251us; 2253us; 2255us; 2257us; 2259us; 2261us; 2263us; 2265us; 2267us; 2270us; 2272us; 2274us; 2281us; 2283us; 2285us; 2287us; 2290us; 2294us; 2296us; 2298us; 2300us; 2302us; 2304us; 2310us; 2313us; 2315us; 2317us; 2319us; 2322us; 2324us; 2326us; 2333us; 2340us; 2347us; 2354us; 2361us; 2368us; 2375us; 2382us; 2389us; 2397us; 2399us; 2401us; 2403us; 2405us; 2408us; 2411us; 2413us; 2415us; 2417us; 2419us; 2421us; 2424us; 2426us; 2429us; 2431us; 2433us; 2438us; 2440us; 2448us; 2454us; 2458us; 2460us; 2462us; 2464us; 2466us; 2468us; 2470us; 2472us; 2474us; 2484us; 2486us; 2488us; 2490us; 2495us; 2497us; 2499us; 2501us; 2503us; 2505us; 2507us; 2509us; 2511us; 2513us; 2515us; 2517us; 2519us; 2521us; 2523us; 2525us; 2527us; 2529us; 2531us; 2534us; 2536us; 2538us; 2540us; 2542us; 2544us; 2546us; 2555us; 2558us; 2560us; 2562us; 2566us; 2569us; 2571us; 2576us; 2581us; 2586us; 2588us; 2590us; 2593us; 2595us; 2597us; 2605us; 2613us; 2621us; 2629us; 2637us; 2645us; 2653us; 2660us; 2668us; 2676us; 2685us; 2700us; 2708us; 2710us; 2712us; 2714us; 2717us; 2720us; 2722us; 2724us; 2726us; 2728us; 2730us; 2732us; 2734us; 2736us; 2738us; 2741us; 2743us; 2746us; 2748us; 2752us; 2754us; 2756us; 2759us; 2761us; 2764us; 2767us; 2769us; 2771us; 2773us; 2775us; 2777us; 2779us; 2828us; 2831us; 2833us; 2836us; 2838us; 2840us; 2842us; 2844us; 2897us; 2951us; 3007us; 3010us; 3012us; 3014us; 3016us; 3018us; 3020us; 3022us; 3024us; 3030us; 3032us; 3035us; 3038us; 3041us; 3044us; 3047us; 3050us; 3053us; 3056us; 3059us; 3062us; 3066us; 3069us; 3072us; 3074us; 3076us; 3078us; 3080us; 3082us; 3084us; 3086us; 3088us; 3090us; 3092us; 3094us; 3096us; 3099us; 3102us; 3104us; 3106us; 3111us; 3113us; 3115us; 3118us; 3120us; 3122us; 3124us; 3126us; 3128us; 3131us; 3134us; 3136us; 3138us; 3141us; 3144us; 3146us; 3148us; 3152us; 3156us; 3158us; 3160us; 3162us; 3164us; 3168us; 3218us; 3220us; 3222us; 3224us; 3226us; 3275us; 3278us; 3327us; 3329us; 3331us; 3334us; 3336us; 3343us; 3395us; 3399us; 3402us; 3404us; 3406us; 3408us; 3410us; 3412us; 3414us; 3416us; 3432us; 3439us; 3444us; 3447us; 3449us; 3451us; 3453us; 3455us; 3457us; 3463us; 3468us; 3471us; 3473us; 3475us; 3477us; 3479us; 3481us; 3483us; 3485us; 3487us; 3489us; 3491us; 3494us; 3497us; 3546us; 3549us; 3598us; 3600us; 3602us; 3604us; 3606us; 3608us; 3610us; 3612us; 3614us; 3616us; 3619us; 3622us; 3625us; 3628us; 3631us; 3633us; 3635us; 3637us; 3639us; 3641us; 3643us; 3645us; 3647us; 3649us; 3651us; 3653us; 3655us; 3657us; 3659us; 3708us; 3710us; 3712us; 3761us; 3810us; 3859us; 3908us; 3957us; 4006us; 4055us; 4104us; 4153us; 4202us; 4251us; 4300us; 4349us; 4398us; 4447us; 4496us; 4545us; 4594us; 4643us; 4692us; 4741us; 4790us; 4839us; 4888us; 4938us; 4987us; 5035us; 5084us; 5133us; 5182us; 5234us; 5286us; 5336us; 5385us; 5434us; 5436us; 5438us; 5440us; 5442us; 5444us; 5446us; 5448us; 5451us; 5453us; 5455us; 5459us; 5465us; 5468us; 5471us; 5474us; 5477us; 5480us; 5483us; 5486us; 5489us; 5492us; 5495us; 5499us; 5501us; 5504us; 5507us; 5510us; 5513us; 5516us; 5519us; 5522us; 5525us; 5528us; 5530us; 5532us; 5534us; 5536us; 5538us; 5540us; 5542us; 5544us; 5546us; 5548us; 5550us; 5552us; 5554us; 5556us; 5558us; 5560us; 5562us; 5564us; 5566us; 5568us; 5570us; 5572us; 5574us; 5576us; 5578us; 5580us; 5583us; 5586us; 5588us; 5590us; 5592us; 5595us; 5597us; 5599us; 5601us; 5603us; 5609us; 5614us; 5617us; 5619us; 5621us; 5623us; 5625us; 5627us; 5629us; 5631us; 5633us; 5635us; 5637us; 5640us; 5643us; 5646us; 5648us; 5650us; 5652us; 5655us; 5658us; 5661us; 5663us; 5665us; 5668us; 5670us; 5672us; 5675us; 5677us; 5680us; 5682us; 5684us; 5687us; 5689us; 5691us; 5694us; 5696us; 5698us; 5701us; 5703us; 5705us; 5708us; 5710us; 5712us; 5715us; 5717us; 5719us; 5722us; 5724us; 5728us; 5736us; 5739us; 5746us; 5749us; 5754us; 5756us; 5760us; 5762us; 5764us; 5766us; 5768us; 5770us; 5772us; 5775us; 5782us; 5788us; 5790us; 5797us; 5799us; 5806us; 5813us; 5820us; 5827us; 5834us; 5841us; 5843us; 5845us; 5847us; 5849us; 5851us; 5854us; 5856us; 5858us; 5860us; 5862us; 5864us; 5866us; 5869us; 5871us; 5873us; 5875us; 5877us; 5879us; 5884us; 5887us; 5889us; 5891us; 5893us; 5895us; 5899us; 5902us; 5904us; 5906us; 5908us; 5910us; 5912us; 5914us; 5921us; 5923us; 5925us; 5927us; 5929us; 5931us; 5933us; 5939us; 5941us; 5943us; 5946us; 5948us; 5950us; 5952us; 5954us; 5957us; 5959us; 5961us; 5965us; 5968us; 5970us; 5972us; 5974us; 5976us; 5978us; 5980us; 5982us; 5984us; 5986us; 5988us; 5990us; 5992us; 5994us; 5996us; 5998us; 6003us; 6006us; 6008us; 6010us; 6012us; 6014us; 6016us; 6021us; 6027us; 6030us; 6032us; 6034us; 6036us; 6038us; 6043us; 6046us; 6048us; 6050us; 6052us; 6054us; 6064us; 6079us; 6093us; 6095us; 6098us; 6100us; 6102us; 6104us; 6107us; 6109us; 6111us; 6113us; 6115us; 6117us; 6119us; 6121us; 6123us; 6125us; 6127us; 6129us; 6131us; 6133us; 6135us; 6138us; 6141us; 6143us; 6145us; 6147us; 6153us; 6156us; 6158us; 6160us; 6162us; 6164us; 6166us; 6168us; 6170us; 6172us; 6174us; 6176us; 6178us; 6182us; 6184us; 6186us; 6188us; 6190us; 6194us; 6196us; 6198us; 6200us; 6203us; 6205us; 6207us; 6209us; 6211us; 6213us; 6215us; 6217us; 6220us; 6222us; 6224us; 6226us; 6228us; 6230us; 6232us; 6234us; 6236us; 6239us; 6241us; 6247us; 6249us; 6251us; 6253us; 6255us; 6257us; 6260us; 6262us; 6264us; 6266us; 6268us; 6271us; 6273us; 6277us; 6280us; 6282us; 6285us; 6287us; 6289us; 6291us; 6294us; 6296us; 6299us; 6301us; 6303us; 6305us; 6308us; 6310us; 6312us; 6314us; 6317us; 6320us; 6323us; 6325us; 6327us; 6331us; 6333us; 6335us; 6341us; 6345us; 6347us; 6349us; 6351us; 6354us; 6356us; 6358us; 6360us; 6362us; 6364us; 6366us; 6368us; 6371us; 6373us; 6375us; 6377us; 6379us; 6381us; 6383us; 6385us; 6387us; 6389us; 6391us; 6393us; 6395us; 6397us; 6402us; 6404us; 6406us; 6408us; 6410us; 6412us; 6414us; 6420us; 6423us; 6425us; 6427us; 6429us; 6431us; 6433us; 6436us; 6439us; 6442us; 6444us; 6446us; 6453us; 6459us; 6464us; 6467us; 6469us; 6471us; 6473us; 6475us; 6477us; 6479us; 6481us; 6483us; 6485us; 6487us; 6489us; 6491us; 6493us; 6495us; 6498us; 6500us; 6503us; 6505us; 6507us; 6509us; 6512us; 6514us; 6516us; 6519us; 6521us; 6523us; 6526us; 6528us; 6530us; 6534us; 6540us; 6542us; 6547us; 6549us; 6551us; 6553us; 6558us; 6564us; 6566us; 6571us; 6573us; 6575us; 6577us; 6582us; 6585us; 6587us; 6589us; 6591us; 6593us; 6600us; 6602us; 6604us; 6606us; 6608us; 6610us; 6612us; 6619us; 6621us; 6623us; 6625us; 6627us; 6631us; 6633us; 6636us; 6639us; 6644us; 6646us; 6648us; 6656us; 6658us; 6660us; 6662us; 6664us; 6669us; 6671us; 6673us; 6675us; 6677us; 6679us; 6681us; 6684us; 6686us; 6688us; 6693us; 6695us; 6699us; 6701us; 6704us; 6706us; 6708us; 6710us; 6712us; 6714us; 6716us; 6720us; 6725us; 6728us; 6730us; 6732us; 6735us; 6737us; 6739us; 6744us; 6746us; 6748us; 6750us; 6754us; 6758us; 6760us; 6762us; 6766us; 6768us; 6770us; 6774us; 6777us; 6783us; 6785us; 6787us; 6793us; 6799us; 6803us; 6806us; 6808us; 6810us; 6812us; 6814us; 6816us; 6818us; 6820us; 6822us; 6824us; 6826us; 6828us; 6830us; 6832us; 6835us; 6840us; 6842us; 6844us; 6846us; 6848us; 6850us; 6852us; 6860us; 6864us; 6868us; 6871us; 6873us; 6875us; 6877us; 6881us; 6883us; 6885us; 6887us; 6889us; 6893us; 6896us; 6898us; 6900us; 6902us; 6905us; 6909us; 6911us; 6913us; 6915us; 6919us; 6921us; 6923us; 6927us; 6929us; 6932us; 6934us; 6936us; 6938us; 6941us; 6943us; 6945us; 6949us; 6953us; 6957us; 6959us; 6961us; 6963us; 6965us; 6967us; 6969us; 6971us; 6974us; 6976us; 6978us; 6980us; 6982us; 6985us; 6987us; 6989us; 6994us; 6996us; 6998us; 7000us; 7002us; 7004us; 7008us; 7012us; 7014us; 7016us; 7018us; 7020us; 7022us; 7024us; 7026us; 7028us; 7030us; 7032us; 7034us; 7036us; 7038us; 7040us; 7042us; 7044us; 7046us; 7048us; 7050us; 7052us; 7054us; 7056us; 7058us; 7060us; 7062us; 7064us; 7066us; 7069us; 7071us; 7073us; 7075us; 7077us; 7079us; 7081us; 7083us; 7085us; 7087us; 7091us; 7093us; 7096us; 7098us; 7100us; 7102us; 7104us; 7106us; 7108us; 7111us; 7113us; 7115us; 7117us; 7120us; 7123us; 7125us; 7127us; 7129us; 7131us; 7133us; 7135us; 7137us; 7139us; 7141us; 7143us; 7145us; 7147us; 7149us; 7151us; 7153us; 7155us; 7157us; 7159us; 7161us; 7163us; 7165us; 7167us; 7169us; 7171us; 7173us; 7175us; 7177us; 7179us; 7181us; 7183us; 7185us; 7188us; 7190us; 7192us; 7194us; 7196us; 7199us; 7201us; 7203us; 7205us; 7207us; 7209us; 7211us; 7213us; 7215us; 7217us; 7219us; 7221us; 7223us; 7225us; 7227us; 7229us; 7231us; 7233us; 7235us; 7237us; 7239us; 7241us; 7243us; 7245us; 7247us; 7249us; 7251us; |]
let _fsyacc_action_rows = 1856
let _fsyacc_actionTableElements = [|16us; 16431us; 22us; 69us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 74us; 299us; 89us; 38us; 102us; 94us; 109us; 16542us; 110us; 16542us; 122us; 16542us; 151us; 16542us; 197us; 47us; 0us; 49152us; 86us; 16507us; 13us; 16542us; 22us; 231us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 32us; 16542us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 56us; 16542us; 63us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 76us; 16542us; 87us; 16542us; 89us; 38us; 90us; 16542us; 91us; 16542us; 93us; 16542us; 99us; 16542us; 101us; 16542us; 102us; 693us; 107us; 16542us; 108us; 16542us; 109us; 16542us; 115us; 16542us; 116us; 16542us; 117us; 16542us; 118us; 16542us; 120us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 126us; 16542us; 127us; 16542us; 131us; 16542us; 134us; 16542us; 135us; 16542us; 137us; 16542us; 138us; 16542us; 147us; 16542us; 148us; 16542us; 149us; 16542us; 151us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 184us; 16542us; 185us; 16542us; 188us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 197us; 217us; 0us; 49152us; 7us; 16542us; 10us; 14us; 21us; 12us; 68us; 13us; 74us; 299us; 85us; 11us; 89us; 38us; 102us; 693us; 0us; 49152us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 49152us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 49152us; 0us; 16389us; 0us; 16390us; 0us; 16391us; 0us; 16392us; 0us; 16393us; 0us; 16394us; 4us; 32768us; 10us; 14us; 21us; 37us; 68us; 13us; 85us; 36us; 0us; 16395us; 4us; 32768us; 10us; 14us; 21us; 37us; 68us; 13us; 85us; 36us; 0us; 16396us; 4us; 32768us; 10us; 14us; 21us; 37us; 68us; 13us; 85us; 36us; 0us; 16397us; 5us; 16542us; 10us; 14us; 68us; 13us; 74us; 299us; 89us; 38us; 102us; 693us; 0us; 16398us; 5us; 16542us; 10us; 14us; 68us; 13us; 74us; 299us; 89us; 38us; 102us; 693us; 0us; 16399us; 5us; 16542us; 10us; 14us; 68us; 13us; 74us; 299us; 89us; 38us; 102us; 693us; 0us; 16400us; 16us; 16401us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 74us; 299us; 102us; 693us; 109us; 16542us; 122us; 16542us; 138us; 16542us; 151us; 16542us; 163us; 16542us; 0us; 16402us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 78us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1822us; 38us; 1825us; 39us; 1827us; 40us; 1830us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 109us; 1826us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 122us; 682us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 138us; 699us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 151us; 1831us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 25us; 16403us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 0us; 16404us; 2us; 16405us; 21us; 37us; 85us; 36us; 0us; 16406us; 0us; 16407us; 0us; 16408us; 1us; 32768us; 193us; 39us; 0us; 16410us; 2us; 16409us; 194us; 1818us; 195us; 1817us; 0us; 16411us; 0us; 16412us; 2us; 32768us; 10us; 44us; 197us; 45us; 0us; 16413us; 1us; 32768us; 10us; 46us; 0us; 16414us; 4us; 16430us; 10us; 48us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 0us; 16415us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 1us; 17405us; 104us; 1804us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 1us; 16416us; 78us; 1729us; 1us; 17405us; 104us; 1804us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 1us; 16417us; 78us; 1729us; 1us; 16418us; 152us; 53us; 0us; 16419us; 1us; 16421us; 152us; 53us; 0us; 16420us; 1us; 17399us; 70us; 1801us; 16us; 16431us; 22us; 69us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 74us; 299us; 89us; 38us; 102us; 94us; 109us; 16542us; 110us; 16542us; 122us; 16542us; 151us; 16542us; 197us; 77us; 0us; 16422us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 8us; 32768us; 37us; 1822us; 38us; 1825us; 39us; 1827us; 40us; 1830us; 109us; 1826us; 110us; 96us; 122us; 682us; 151us; 1831us; 18us; 16431us; 22us; 69us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 70us; 1816us; 74us; 299us; 79us; 1815us; 89us; 38us; 102us; 94us; 109us; 16542us; 110us; 16542us; 122us; 16542us; 151us; 16542us; 197us; 77us; 0us; 16423us; 0us; 16424us; 0us; 16425us; 15us; 16431us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 74us; 299us; 89us; 38us; 102us; 94us; 109us; 16542us; 110us; 16542us; 122us; 16542us; 151us; 16542us; 197us; 74us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 1us; 17401us; 21us; 1802us; 0us; 16426us; 0us; 16427us; 6us; 16430us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 0us; 16428us; 0us; 16429us; 3us; 16430us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 3us; 17384us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 15us; 16434us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 74us; 299us; 89us; 38us; 102us; 94us; 109us; 16542us; 110us; 16542us; 122us; 16542us; 151us; 16542us; 197us; 81us; 0us; 16432us; 3us; 32768us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 4us; 16542us; 74us; 299us; 89us; 38us; 102us; 94us; 197us; 81us; 0us; 16433us; 0us; 16435us; 0us; 16436us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 8us; 32768us; 37us; 1822us; 38us; 1825us; 39us; 1827us; 40us; 1830us; 109us; 1826us; 110us; 96us; 122us; 682us; 151us; 1831us; 2us; 32768us; 70us; 1816us; 79us; 1815us; 5us; 32768us; 22us; 112us; 46us; 1727us; 57us; 1813us; 137us; 1814us; 193us; 1726us; 0us; 16437us; 0us; 16438us; 0us; 16439us; 0us; 16440us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 1us; 16441us; 78us; 1729us; 1us; 16542us; 74us; 299us; 1us; 17409us; 111us; 1805us; 1us; 17411us; 119us; 1806us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 2us; 16683us; 34us; 1821us; 161us; 17428us; 1us; 32768us; 79us; 103us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 16443us; 70us; 106us; 0us; 16442us; 71us; 32768us; 13us; 1110us; 22us; 108us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 25us; 16444us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 28us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 1us; 17397us; 19us; 1800us; 0us; 16445us; 8us; 16542us; 46us; 1727us; 57us; 1813us; 74us; 299us; 89us; 38us; 102us; 94us; 137us; 1814us; 193us; 1726us; 197us; 81us; 3us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 0us; 16446us; 15us; 16431us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 74us; 299us; 89us; 38us; 102us; 94us; 109us; 16542us; 110us; 16542us; 122us; 16542us; 151us; 16542us; 197us; 77us; 1us; 32768us; 143us; 117us; 3us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 0us; 16447us; 15us; 16431us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 74us; 299us; 89us; 38us; 102us; 94us; 109us; 16542us; 110us; 16542us; 122us; 16542us; 151us; 16542us; 197us; 77us; 1us; 32768us; 143us; 121us; 0us; 16448us; 1us; 16542us; 74us; 299us; 0us; 16449us; 1us; 16451us; 132us; 125us; 1us; 16542us; 74us; 299us; 0us; 16450us; 2us; 16491us; 70us; 128us; 88us; 210us; 7us; 16542us; 22us; 131us; 49us; 553us; 56us; 555us; 74us; 299us; 112us; 554us; 137us; 156us; 153us; 142us; 0us; 16452us; 0us; 16453us; 52us; 16471us; 14us; 16542us; 22us; 152us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 47us; 16542us; 48us; 16542us; 49us; 553us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 56us; 555us; 58us; 16542us; 67us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 89us; 16542us; 92us; 16542us; 93us; 16542us; 107us; 16542us; 110us; 16542us; 112us; 554us; 114us; 16542us; 120us; 16542us; 123us; 16542us; 137us; 156us; 149us; 16542us; 153us; 142us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 187us; 16542us; 190us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 1us; 17401us; 21us; 1802us; 14us; 16471us; 14us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 47us; 16542us; 48us; 16542us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 74us; 299us; 110us; 16542us; 112us; 16542us; 120us; 16542us; 1us; 16491us; 88us; 210us; 3us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 1us; 16491us; 88us; 210us; 0us; 16454us; 1us; 16491us; 88us; 210us; 0us; 16455us; 0us; 16456us; 0us; 16457us; 1us; 32768us; 121us; 143us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16458us; 0us; 16459us; 16us; 16471us; 14us; 16542us; 22us; 160us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 47us; 16542us; 48us; 16542us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 74us; 299us; 110us; 16542us; 112us; 16542us; 120us; 16542us; 197us; 150us; 3us; 32768us; 10us; 993us; 143us; 148us; 197us; 979us; 0us; 16460us; 0us; 16461us; 1us; 32768us; 143us; 151us; 0us; 16462us; 14us; 16471us; 14us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 47us; 16542us; 48us; 16542us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 74us; 299us; 110us; 16542us; 112us; 16542us; 120us; 16542us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16463us; 0us; 16464us; 15us; 16471us; 14us; 16542us; 22us; 160us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 47us; 16542us; 48us; 16542us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 74us; 299us; 110us; 16542us; 112us; 16542us; 120us; 16542us; 3us; 32768us; 10us; 993us; 143us; 158us; 197us; 979us; 0us; 16465us; 0us; 16466us; 14us; 16471us; 14us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 47us; 16542us; 48us; 16542us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 74us; 299us; 110us; 16542us; 112us; 16542us; 120us; 16542us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16467us; 0us; 16468us; 0us; 16469us; 0us; 16470us; 2us; 17403us; 21us; 1790us; 85us; 1791us; 14us; 16471us; 14us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 47us; 16542us; 48us; 16542us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 74us; 299us; 110us; 16542us; 112us; 16542us; 120us; 16542us; 0us; 16472us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 10us; 32768us; 14us; 557us; 47us; 188us; 48us; 334us; 50us; 206us; 51us; 335us; 52us; 336us; 54us; 184us; 110us; 186us; 112us; 556us; 120us; 193us; 44us; 32768us; 14us; 557us; 46us; 1727us; 47us; 188us; 48us; 334us; 50us; 206us; 51us; 335us; 52us; 336us; 54us; 184us; 56us; 541us; 58us; 628us; 67us; 1617us; 73us; 544us; 75us; 535us; 89us; 1646us; 92us; 1720us; 93us; 532us; 107us; 1668us; 110us; 186us; 112us; 556us; 114us; 1666us; 120us; 193us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17409us; 111us; 1805us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 2us; 16683us; 34us; 1821us; 161us; 17428us; 1us; 32768us; 79us; 178us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 16480us; 26us; 198us; 88us; 196us; 1us; 16443us; 70us; 106us; 0us; 16473us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 16474us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 16475us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 1us; 17411us; 119us; 1806us; 0us; 16476us; 5us; 32768us; 37us; 1822us; 38us; 1825us; 48us; 333us; 109us; 1826us; 110us; 189us; 1us; 17411us; 119us; 1806us; 0us; 16477us; 1us; 16542us; 74us; 299us; 0us; 16478us; 1us; 32768us; 79us; 194us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16479us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 0us; 16481us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 2us; 32768us; 20us; 200us; 197us; 201us; 0us; 16482us; 0us; 16483us; 1us; 16484us; 98us; 203us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 0us; 16485us; 0us; 16486us; 1us; 16487us; 48us; 207us; 0us; 16488us; 1us; 16491us; 88us; 210us; 0us; 16489us; 15us; 16471us; 14us; 16542us; 22us; 160us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 47us; 16542us; 48us; 16542us; 50us; 16542us; 51us; 16542us; 52us; 16542us; 54us; 16542us; 74us; 299us; 110us; 16542us; 112us; 16542us; 120us; 16542us; 3us; 32768us; 19us; 1794us; 20us; 1795us; 143us; 1796us; 0us; 16490us; 2us; 32768us; 10us; 214us; 197us; 215us; 0us; 16492us; 1us; 32768us; 10us; 216us; 0us; 16493us; 4us; 32768us; 10us; 218us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 0us; 16494us; 1us; 16495us; 152us; 53us; 0us; 16496us; 1us; 16498us; 152us; 53us; 0us; 16497us; 1us; 17399us; 70us; 1801us; 86us; 16507us; 13us; 16542us; 22us; 231us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 32us; 16542us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 56us; 16542us; 63us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 76us; 16542us; 87us; 16542us; 89us; 38us; 90us; 16542us; 91us; 16542us; 93us; 16542us; 99us; 16542us; 101us; 16542us; 102us; 693us; 107us; 16542us; 108us; 16542us; 109us; 16542us; 115us; 16542us; 116us; 16542us; 117us; 16542us; 118us; 16542us; 120us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 126us; 16542us; 127us; 16542us; 131us; 16542us; 134us; 16542us; 135us; 16542us; 137us; 16542us; 138us; 16542us; 147us; 16542us; 148us; 16542us; 149us; 16542us; 151us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 184us; 16542us; 185us; 16542us; 188us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 197us; 251us; 0us; 16499us; 4us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 197us; 246us; 78us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1822us; 38us; 1825us; 39us; 1827us; 40us; 1830us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 109us; 1826us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 122us; 682us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 138us; 699us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 151us; 1831us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 87us; 16507us; 13us; 16542us; 22us; 231us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 32us; 16542us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 56us; 16542us; 63us; 16542us; 70us; 270us; 71us; 16542us; 72us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 76us; 16542us; 87us; 16542us; 89us; 38us; 90us; 16542us; 91us; 16542us; 93us; 16542us; 99us; 16542us; 101us; 16542us; 102us; 693us; 107us; 16542us; 108us; 16542us; 109us; 16542us; 115us; 16542us; 116us; 16542us; 117us; 16542us; 118us; 16542us; 120us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 126us; 16542us; 127us; 16542us; 131us; 16542us; 134us; 16542us; 135us; 16542us; 137us; 16542us; 138us; 16542us; 147us; 16542us; 148us; 16542us; 149us; 16542us; 151us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 184us; 16542us; 185us; 16542us; 188us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 197us; 251us; 0us; 16500us; 0us; 16501us; 85us; 16507us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 32us; 16542us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 56us; 16542us; 63us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 76us; 16542us; 87us; 16542us; 89us; 38us; 90us; 16542us; 91us; 16542us; 93us; 16542us; 99us; 16542us; 101us; 16542us; 102us; 693us; 107us; 16542us; 108us; 16542us; 109us; 16542us; 115us; 16542us; 116us; 16542us; 117us; 16542us; 118us; 16542us; 120us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 126us; 16542us; 127us; 16542us; 131us; 16542us; 134us; 16542us; 135us; 16542us; 137us; 16542us; 138us; 16542us; 147us; 16542us; 148us; 16542us; 149us; 16542us; 151us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 184us; 16542us; 185us; 16542us; 188us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 197us; 236us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 1us; 17401us; 21us; 1802us; 0us; 16502us; 0us; 16503us; 6us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 0us; 16504us; 0us; 16505us; 0us; 16506us; 4us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 197us; 246us; 78us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1822us; 38us; 1825us; 39us; 1827us; 40us; 1830us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 109us; 1826us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 122us; 682us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 138us; 699us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 151us; 1831us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 28us; 16510us; 21us; 1785us; 63us; 1178us; 64us; 1170us; 68us; 1784us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 85us; 1783us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 85us; 16509us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 32us; 16542us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 56us; 16542us; 63us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 76us; 16542us; 87us; 16542us; 89us; 38us; 90us; 16542us; 91us; 16542us; 93us; 16542us; 99us; 16542us; 101us; 16542us; 102us; 693us; 107us; 16542us; 108us; 16542us; 109us; 16542us; 115us; 16542us; 116us; 16542us; 117us; 16542us; 118us; 16542us; 120us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 126us; 16542us; 127us; 16542us; 131us; 16542us; 134us; 16542us; 135us; 16542us; 137us; 16542us; 138us; 16542us; 147us; 16542us; 148us; 16542us; 149us; 16542us; 151us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 184us; 16542us; 185us; 16542us; 188us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 197us; 251us; 0us; 16508us; 0us; 16511us; 0us; 16512us; 21us; 16515us; 21us; 1785us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 68us; 1784us; 74us; 299us; 85us; 1783us; 89us; 38us; 102us; 693us; 109us; 16542us; 122us; 16542us; 138us; 16542us; 151us; 16542us; 163us; 16542us; 197us; 251us; 0us; 16513us; 85us; 16516us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 32us; 16542us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 56us; 16542us; 63us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 76us; 16542us; 87us; 16542us; 89us; 38us; 90us; 16542us; 91us; 16542us; 93us; 16542us; 99us; 16542us; 101us; 16542us; 102us; 693us; 107us; 16542us; 108us; 16542us; 109us; 16542us; 115us; 16542us; 116us; 16542us; 117us; 16542us; 118us; 16542us; 120us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 126us; 16542us; 127us; 16542us; 131us; 16542us; 134us; 16542us; 135us; 16542us; 137us; 16542us; 138us; 16542us; 147us; 16542us; 148us; 16542us; 149us; 16542us; 151us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 184us; 16542us; 185us; 16542us; 188us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 197us; 251us; 0us; 16514us; 3us; 32768us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 6us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 4us; 32768us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 143us; 292us; 4us; 16542us; 74us; 299us; 89us; 38us; 102us; 693us; 197us; 251us; 0us; 16517us; 0us; 16518us; 0us; 16519us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 11us; 32768us; 33us; 701us; 37us; 1822us; 38us; 1825us; 39us; 1827us; 40us; 1830us; 41us; 714us; 109us; 1826us; 122us; 682us; 138us; 699us; 151us; 1831us; 163us; 695us; 0us; 16520us; 1us; 16520us; 128us; 1006us; 0us; 16521us; 71us; 16521us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1011us; 0us; 16522us; 1us; 16542us; 74us; 299us; 1us; 16564us; 132us; 340us; 0us; 16523us; 0us; 16524us; 1us; 32768us; 70us; 270us; 5us; 32768us; 22us; 278us; 46us; 1727us; 56us; 1811us; 137us; 1812us; 193us; 1726us; 0us; 16525us; 2us; 16541us; 10us; 993us; 197us; 979us; 0us; 16526us; 0us; 16527us; 4us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 78us; 1729us; 0us; 16528us; 1us; 16529us; 78us; 1729us; 6us; 16542us; 56us; 1811us; 74us; 299us; 89us; 38us; 102us; 693us; 137us; 1812us; 197us; 252us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16530us; 0us; 16531us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16532us; 0us; 16533us; 0us; 16534us; 0us; 16535us; 1us; 16536us; 78us; 1729us; 85us; 16507us; 13us; 16542us; 24us; 16542us; 25us; 16542us; 29us; 16542us; 30us; 16542us; 32us; 16542us; 33us; 16542us; 37us; 16542us; 38us; 16542us; 39us; 16542us; 40us; 16542us; 41us; 16542us; 43us; 16542us; 44us; 16542us; 45us; 16542us; 46us; 16542us; 56us; 16542us; 63us; 16542us; 71us; 16542us; 72us; 16542us; 73us; 16542us; 74us; 299us; 75us; 16542us; 76us; 16542us; 87us; 16542us; 89us; 38us; 90us; 16542us; 91us; 16542us; 93us; 16542us; 99us; 16542us; 101us; 16542us; 102us; 693us; 107us; 16542us; 108us; 16542us; 109us; 16542us; 115us; 16542us; 116us; 16542us; 117us; 16542us; 118us; 16542us; 120us; 16542us; 122us; 16542us; 123us; 16542us; 124us; 16542us; 125us; 16542us; 126us; 16542us; 127us; 16542us; 131us; 16542us; 134us; 16542us; 135us; 16542us; 137us; 16542us; 138us; 16542us; 147us; 16542us; 148us; 16542us; 149us; 16542us; 151us; 16542us; 155us; 16542us; 156us; 16542us; 159us; 16542us; 160us; 16542us; 163us; 16542us; 164us; 16542us; 165us; 16542us; 167us; 16542us; 168us; 16542us; 169us; 16542us; 170us; 16542us; 171us; 16542us; 172us; 16542us; 173us; 16542us; 174us; 16542us; 175us; 16542us; 176us; 16542us; 177us; 16542us; 178us; 16542us; 179us; 16542us; 181us; 16542us; 182us; 16542us; 184us; 16542us; 185us; 16542us; 188us; 16542us; 193us; 16542us; 194us; 16542us; 195us; 16542us; 196us; 16542us; 197us; 253us; 3us; 32768us; 10us; 993us; 143us; 290us; 197us; 979us; 0us; 16537us; 0us; 16538us; 0us; 16539us; 6us; 16542us; 19us; 16586us; 20us; 16586us; 22us; 380us; 74us; 299us; 143us; 16586us; 197us; 386us; 3us; 32768us; 19us; 1794us; 20us; 1795us; 143us; 1796us; 0us; 16540us; 0us; 16541us; 1us; 16543us; 74us; 299us; 0us; 16544us; 14us; 32768us; 10us; 993us; 16us; 1854us; 37us; 1823us; 38us; 1825us; 39us; 1828us; 40us; 1830us; 46us; 1727us; 61us; 1852us; 95us; 1853us; 109us; 1826us; 151us; 1831us; 164us; 330us; 193us; 1726us; 197us; 304us; 2us; 17403us; 21us; 1790us; 85us; 1791us; 8us; 32768us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 55us; 302us; 61us; 1852us; 95us; 1853us; 197us; 979us; 1us; 17401us; 21us; 1802us; 0us; 16545us; 1us; 16903us; 55us; 305us; 1us; 17401us; 21us; 1802us; 0us; 16546us; 0us; 16547us; 0us; 16548us; 0us; 16549us; 9us; 17402us; 37us; 1822us; 38us; 1825us; 39us; 1827us; 40us; 1830us; 46us; 1727us; 109us; 1826us; 151us; 1831us; 164us; 330us; 193us; 1726us; 0us; 16550us; 3us; 17426us; 35us; 1820us; 36us; 1819us; 78us; 1729us; 28us; 17163us; 56us; 1518us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 93us; 1380us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16551us; 3us; 32768us; 22us; 319us; 46us; 1727us; 193us; 1726us; 3us; 17426us; 35us; 1820us; 36us; 1819us; 78us; 1729us; 28us; 17163us; 56us; 1518us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 93us; 1380us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16552us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 4us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 78us; 1729us; 2us; 17426us; 35us; 1820us; 36us; 1819us; 28us; 17163us; 56us; 1518us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 93us; 1380us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16553us; 1us; 32768us; 79us; 325us; 0us; 16554us; 1us; 32768us; 79us; 327us; 0us; 16555us; 1us; 17334us; 79us; 329us; 0us; 16556us; 1us; 32768us; 79us; 331us; 0us; 16557us; 10us; 32768us; 30us; 705us; 33us; 701us; 37us; 1822us; 38us; 1825us; 41us; 714us; 48us; 333us; 109us; 1826us; 110us; 449us; 138us; 699us; 163us; 695us; 0us; 16558us; 0us; 16559us; 0us; 16560us; 0us; 16561us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 1us; 16686us; 86us; 587us; 0us; 16562us; 1us; 16542us; 74us; 299us; 1us; 16564us; 132us; 340us; 0us; 16563us; 40us; 16542us; 10us; 16565us; 14us; 16565us; 15us; 16565us; 16us; 16565us; 17us; 16565us; 19us; 16565us; 20us; 16565us; 21us; 16565us; 30us; 16565us; 33us; 16565us; 37us; 16565us; 38us; 16565us; 39us; 16565us; 40us; 16565us; 41us; 16565us; 47us; 16565us; 48us; 16565us; 50us; 16565us; 51us; 16565us; 52us; 16565us; 54us; 16565us; 68us; 16565us; 70us; 344us; 74us; 299us; 85us; 16565us; 88us; 293us; 89us; 16565us; 102us; 16565us; 109us; 16565us; 110us; 16565us; 112us; 16565us; 120us; 16565us; 122us; 16565us; 132us; 16565us; 138us; 16565us; 143us; 16565us; 151us; 16565us; 152us; 16565us; 163us; 16565us; 197us; 16565us; 6us; 16542us; 22us; 354us; 49us; 553us; 56us; 555us; 74us; 299us; 112us; 554us; 153us; 366us; 0us; 16566us; 0us; 16567us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 2us; 17426us; 35us; 1820us; 36us; 1819us; 1us; 32768us; 93us; 823us; 1us; 16633us; 133us; 496us; 1us; 32768us; 70us; 352us; 6us; 16542us; 22us; 354us; 49us; 553us; 56us; 555us; 74us; 299us; 112us; 554us; 153us; 366us; 0us; 16568us; 11us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 22us; 376us; 49us; 553us; 56us; 555us; 74us; 299us; 112us; 554us; 153us; 366us; 197us; 386us; 1us; 17401us; 21us; 1802us; 7us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 74us; 299us; 88us; 16586us; 197us; 386us; 1us; 16628us; 88us; 485us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 1us; 16628us; 88us; 485us; 0us; 16569us; 0us; 16570us; 1us; 16628us; 88us; 485us; 0us; 16571us; 0us; 16572us; 0us; 16573us; 1us; 32768us; 121us; 367us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16574us; 0us; 16575us; 5us; 16542us; 10us; 16586us; 22us; 380us; 74us; 299us; 143us; 16586us; 197us; 374us; 3us; 32768us; 10us; 993us; 143us; 372us; 197us; 979us; 0us; 16576us; 0us; 16577us; 4us; 16542us; 10us; 16586us; 74us; 299us; 143us; 375us; 197us; 386us; 0us; 16578us; 6us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 74us; 299us; 197us; 386us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16579us; 0us; 16580us; 6us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 74us; 299us; 197us; 386us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16581us; 0us; 16582us; 0us; 16583us; 0us; 16584us; 10us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 19us; 16586us; 20us; 16586us; 74us; 299us; 88us; 16586us; 143us; 16586us; 197us; 386us; 0us; 16585us; 2us; 17403us; 21us; 1790us; 85us; 1791us; 10us; 16542us; 10us; 16586us; 15us; 16586us; 16us; 16586us; 17us; 16586us; 19us; 16586us; 20us; 16586us; 74us; 299us; 88us; 16586us; 143us; 16586us; 197us; 386us; 0us; 16587us; 1us; 17409us; 111us; 1805us; 0us; 16588us; 1us; 17409us; 111us; 1805us; 2us; 32768us; 20us; 395us; 197us; 396us; 0us; 16589us; 0us; 16590us; 1us; 16591us; 132us; 398us; 1us; 17409us; 111us; 1805us; 0us; 16592us; 1us; 16542us; 74us; 299us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17231us; 79us; 1555us; 1us; 32768us; 70us; 404us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16593us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17231us; 79us; 1555us; 3us; 32768us; 26us; 393us; 70us; 409us; 88us; 391us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16594us; 0us; 16595us; 1us; 16596us; 48us; 413us; 0us; 16597us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 15us; 32768us; 14us; 557us; 30us; 705us; 33us; 701us; 41us; 714us; 47us; 332us; 48us; 334us; 50us; 412us; 51us; 335us; 52us; 336us; 54us; 488us; 110us; 449us; 112us; 556us; 120us; 441us; 138us; 699us; 163us; 695us; 49us; 32768us; 14us; 557us; 30us; 705us; 33us; 701us; 41us; 714us; 46us; 1727us; 47us; 332us; 48us; 334us; 50us; 412us; 51us; 335us; 52us; 336us; 54us; 488us; 56us; 541us; 58us; 628us; 67us; 1617us; 73us; 544us; 75us; 535us; 89us; 1646us; 92us; 1720us; 93us; 532us; 107us; 1668us; 110us; 449us; 112us; 556us; 114us; 1666us; 120us; 441us; 123us; 1667us; 138us; 699us; 149us; 1665us; 163us; 695us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16598us; 0us; 16599us; 2us; 17409us; 110us; 455us; 111us; 1805us; 1us; 17397us; 19us; 1800us; 0us; 16600us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 7us; 16626us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 88us; 482us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 0us; 16601us; 1us; 17409us; 111us; 1805us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 2us; 16683us; 34us; 1821us; 161us; 17428us; 1us; 32768us; 79us; 430us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 16480us; 26us; 198us; 88us; 196us; 1us; 17397us; 19us; 1800us; 0us; 16602us; 0us; 16603us; 1us; 17397us; 19us; 1800us; 0us; 16604us; 1us; 17397us; 19us; 1800us; 0us; 16605us; 1us; 17397us; 19us; 1800us; 0us; 16606us; 35us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 16633us; 133us; 496us; 1us; 32768us; 70us; 444us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17397us; 19us; 1800us; 0us; 16607us; 1us; 16542us; 74us; 299us; 0us; 16608us; 1us; 17411us; 119us; 1806us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 1us; 32768us; 193us; 1726us; 1us; 32768us; 79us; 453us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16609us; 1us; 17411us; 119us; 1806us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 1us; 32768us; 193us; 1726us; 1us; 16611us; 79us; 463us; 1us; 32768us; 70us; 460us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 16480us; 26us; 198us; 88us; 196us; 0us; 16610us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16612us; 1us; 16852us; 78us; 466us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 0us; 16613us; 1us; 32768us; 78us; 469us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 0us; 16614us; 0us; 16615us; 4us; 32768us; 67us; 473us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 1us; 32768us; 78us; 474us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 0us; 16616us; 0us; 16617us; 0us; 16619us; 0us; 16620us; 0us; 16621us; 0us; 16622us; 0us; 16623us; 2us; 16542us; 22us; 502us; 74us; 299us; 3us; 32768us; 19us; 1794us; 20us; 1795us; 143us; 1796us; 0us; 16625us; 6us; 16542us; 19us; 16586us; 20us; 16586us; 22us; 380us; 74us; 299us; 143us; 16586us; 197us; 386us; 3us; 32768us; 19us; 1794us; 20us; 1795us; 143us; 1796us; 0us; 16627us; 37us; 32768us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 46us; 1727us; 56us; 1655us; 61us; 1852us; 67us; 1649us; 89us; 1646us; 92us; 1720us; 93us; 1639us; 95us; 1853us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 31us; 16636us; 35us; 1820us; 36us; 1819us; 56us; 17426us; 72us; 17426us; 73us; 17426us; 75us; 17426us; 93us; 17426us; 107us; 17426us; 123us; 17426us; 133us; 499us; 137us; 17426us; 149us; 17426us; 156us; 17426us; 167us; 17426us; 168us; 17426us; 169us; 17426us; 170us; 17426us; 171us; 17426us; 172us; 17426us; 173us; 17426us; 174us; 17426us; 175us; 17426us; 176us; 17426us; 177us; 17426us; 178us; 17426us; 179us; 17426us; 181us; 17426us; 182us; 17426us; 194us; 17426us; 195us; 17426us; 196us; 17426us; 0us; 16629us; 28us; 32768us; 56us; 1518us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 93us; 1380us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 16636us; 133us; 499us; 0us; 16630us; 0us; 16631us; 0us; 16632us; 1us; 32768us; 193us; 1726us; 0us; 16634us; 0us; 16635us; 2us; 32768us; 155us; 501us; 193us; 1726us; 0us; 16637us; 0us; 16638us; 1us; 16542us; 74us; 299us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16639us; 0us; 16640us; 0us; 16641us; 2us; 17403us; 21us; 1790us; 85us; 1791us; 14us; 16542us; 10us; 16643us; 14us; 16643us; 15us; 16643us; 16us; 16643us; 17us; 16643us; 19us; 16643us; 20us; 16643us; 21us; 16643us; 60us; 16643us; 61us; 16643us; 62us; 16643us; 74us; 299us; 112us; 16643us; 143us; 16643us; 0us; 16642us; 3us; 32768us; 48us; 521us; 51us; 522us; 197us; 518us; 4us; 17409us; 48us; 521us; 51us; 522us; 111us; 1805us; 197us; 518us; 3us; 17409us; 110us; 455us; 111us; 1805us; 197us; 517us; 1us; 17397us; 19us; 1800us; 0us; 16644us; 1us; 17397us; 19us; 1800us; 0us; 16645us; 0us; 16646us; 1us; 17409us; 111us; 1805us; 1us; 17397us; 19us; 1800us; 0us; 16647us; 0us; 16648us; 0us; 16649us; 3us; 16624us; 43us; 479us; 44us; 478us; 45us; 480us; 34us; 32768us; 46us; 1727us; 56us; 541us; 58us; 628us; 67us; 1617us; 73us; 544us; 75us; 535us; 89us; 1646us; 92us; 1720us; 93us; 532us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 17255us; 78us; 1729us; 156us; 526us; 1us; 32768us; 195us; 527us; 2us; 32768us; 10us; 993us; 197us; 979us; 0us; 16650us; 0us; 16651us; 0us; 16652us; 0us; 16653us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 550us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1669us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16654us; 2us; 16542us; 74us; 299us; 197us; 539us; 5us; 32768us; 10us; 993us; 60us; 1835us; 61us; 1832us; 62us; 1834us; 197us; 979us; 0us; 16655us; 0us; 16656us; 3us; 32768us; 60us; 1835us; 61us; 1832us; 62us; 1834us; 0us; 16657us; 2us; 32768us; 73us; 544us; 93us; 1656us; 0us; 16658us; 0us; 16659us; 2us; 16542us; 74us; 299us; 197us; 548us; 3us; 32768us; 10us; 993us; 66us; 1836us; 197us; 979us; 0us; 16660us; 0us; 16661us; 1us; 32768us; 66us; 1836us; 0us; 16662us; 30us; 32768us; 46us; 1727us; 56us; 1655us; 67us; 1649us; 89us; 1646us; 92us; 1720us; 93us; 1650us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 16798us; 89us; 552us; 0us; 16663us; 0us; 16664us; 0us; 16665us; 0us; 16666us; 0us; 16667us; 0us; 16668us; 5us; 32768us; 46us; 1727us; 92us; 1720us; 93us; 564us; 190us; 1723us; 193us; 1726us; 3us; 16669us; 34us; 1821us; 78us; 1729us; 161us; 17428us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 1us; 16670us; 78us; 1729us; 0us; 16671us; 0us; 16672us; 1us; 16542us; 74us; 299us; 4us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 98us; 569us; 0us; 16673us; 2us; 16686us; 86us; 587us; 98us; 569us; 1us; 16679us; 98us; 570us; 1us; 16542us; 74us; 299us; 2us; 16542us; 74us; 299us; 144us; 579us; 0us; 16674us; 0us; 16675us; 2us; 32768us; 92us; 1720us; 190us; 1723us; 0us; 16676us; 1us; 32768us; 161us; 576us; 1us; 16542us; 74us; 299us; 1us; 32768us; 162us; 578us; 0us; 16677us; 0us; 16678us; 1us; 32768us; 161us; 581us; 3us; 16542us; 74us; 299us; 86us; 16680us; 162us; 16680us; 1us; 16686us; 86us; 587us; 1us; 32768us; 162us; 584us; 0us; 16681us; 0us; 16682us; 27us; 16684us; 10us; 16835us; 16us; 16835us; 21us; 16835us; 26us; 16835us; 37us; 16835us; 39us; 16835us; 58us; 16835us; 59us; 16835us; 60us; 16835us; 61us; 16835us; 62us; 16835us; 65us; 16835us; 70us; 16835us; 79us; 16835us; 80us; 16835us; 85us; 16835us; 86us; 16835us; 88us; 16835us; 90us; 16835us; 94us; 16835us; 95us; 16835us; 96us; 16835us; 98us; 16835us; 99us; 16835us; 128us; 16835us; 133us; 16835us; 197us; 16835us; 4us; 32768us; 52us; 594us; 92us; 1720us; 93us; 609us; 190us; 1723us; 1us; 16687us; 132us; 591us; 1us; 17228us; 132us; 591us; 1us; 17230us; 132us; 591us; 4us; 32768us; 52us; 594us; 92us; 1720us; 93us; 609us; 190us; 1723us; 0us; 16688us; 0us; 16689us; 2us; 32768us; 92us; 1720us; 190us; 1723us; 1us; 32768us; 79us; 596us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16690us; 2us; 32768us; 79us; 601us; 81us; 599us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16691us; 5us; 32768us; 56us; 602us; 93us; 606us; 149us; 605us; 153us; 616us; 193us; 603us; 0us; 16692us; 3us; 16699us; 34us; 1678us; 56us; 604us; 161us; 1680us; 0us; 16693us; 0us; 16694us; 1us; 16542us; 74us; 299us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16695us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 4us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 103us; 619us; 1us; 32768us; 79us; 612us; 1us; 32768us; 93us; 613us; 1us; 16542us; 74us; 299us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16696us; 2us; 32768us; 34us; 1678us; 161us; 1680us; 0us; 16697us; 0us; 16698us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 16700us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 6us; 16701us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 1us; 16542us; 74us; 299us; 0us; 16702us; 1us; 32768us; 58us; 628us; 1us; 16542us; 74us; 299us; 0us; 16703us; 2us; 16704us; 21us; 1802us; 58us; 17401us; 0us; 16705us; 1us; 16707us; 58us; 628us; 1us; 16542us; 74us; 299us; 0us; 16706us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 3us; 32768us; 93us; 646us; 101us; 1737us; 193us; 1726us; 4us; 17401us; 21us; 1802us; 70us; 642us; 79us; 639us; 121us; 636us; 0us; 16708us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 75us; 535us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17401us; 21us; 1802us; 0us; 16709us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17401us; 21us; 1802us; 0us; 16710us; 18us; 32768us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17401us; 21us; 1802us; 0us; 16711us; 0us; 16712us; 29us; 32768us; 58us; 1772us; 63us; 1754us; 64us; 1752us; 70us; 1756us; 71us; 649us; 76us; 1760us; 80us; 647us; 84us; 1764us; 90us; 1761us; 91us; 1762us; 97us; 1755us; 103us; 1757us; 144us; 1767us; 146us; 1763us; 156us; 1769us; 159us; 1766us; 161us; 1758us; 162us; 1759us; 183us; 1765us; 184us; 1753us; 185us; 1750us; 186us; 1749us; 187us; 1751us; 188us; 1744us; 189us; 1748us; 190us; 1747us; 191us; 1746us; 192us; 1745us; 197us; 1735us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16713us; 1us; 32768us; 59us; 650us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16714us; 4us; 17334us; 21us; 1802us; 58us; 17401us; 70us; 654us; 121us; 658us; 0us; 16715us; 18us; 32768us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17401us; 21us; 1802us; 45us; 16716us; 10us; 16719us; 14us; 16719us; 15us; 16719us; 16us; 16719us; 17us; 16719us; 19us; 16719us; 20us; 16719us; 21us; 16719us; 30us; 16719us; 33us; 16719us; 37us; 16719us; 38us; 16719us; 39us; 16719us; 40us; 16719us; 41us; 16719us; 43us; 16719us; 44us; 16719us; 45us; 16719us; 47us; 16719us; 48us; 16719us; 50us; 16719us; 51us; 16719us; 52us; 16719us; 54us; 16719us; 68us; 16719us; 74us; 16719us; 85us; 16719us; 88us; 16719us; 89us; 16719us; 94us; 16719us; 95us; 16719us; 96us; 16719us; 102us; 16719us; 109us; 16719us; 110us; 16719us; 112us; 16719us; 120us; 16719us; 122us; 16719us; 132us; 16719us; 138us; 16719us; 143us; 16719us; 151us; 16719us; 152us; 16719us; 163us; 16719us; 197us; 16719us; 0us; 16717us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 75us; 535us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16718us; 1us; 16721us; 97us; 661us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16720us; 1us; 17334us; 79us; 664us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 16722us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 6us; 16723us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 0us; 16724us; 0us; 16725us; 2us; 17403us; 21us; 1790us; 85us; 1791us; 7us; 16542us; 10us; 17402us; 60us; 17402us; 61us; 17402us; 62us; 17402us; 66us; 17402us; 74us; 299us; 197us; 17402us; 0us; 16726us; 0us; 16727us; 1us; 17411us; 119us; 1806us; 0us; 16728us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 1us; 32768us; 193us; 1726us; 1us; 32768us; 79us; 678us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16729us; 1us; 16628us; 88us; 485us; 0us; 16730us; 0us; 16731us; 1us; 16542us; 74us; 299us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 1us; 32768us; 193us; 1726us; 1us; 16735us; 70us; 691us; 0us; 16732us; 1us; 16733us; 121us; 689us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 75us; 535us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16734us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 1us; 16736us; 78us; 1729us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 1us; 16737us; 78us; 1729us; 1us; 17405us; 104us; 1804us; 2us; 16542us; 74us; 299us; 197us; 749us; 0us; 16738us; 0us; 16739us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16740us; 1us; 17405us; 104us; 1804us; 2us; 16542us; 74us; 299us; 197us; 749us; 3us; 32768us; 10us; 993us; 19us; 712us; 197us; 979us; 0us; 16741us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 10us; 993us; 19us; 712us; 197us; 979us; 0us; 16742us; 0us; 16743us; 0us; 16744us; 0us; 16745us; 0us; 16746us; 0us; 16747us; 0us; 16748us; 1us; 16542us; 74us; 299us; 3us; 16618us; 43us; 479us; 44us; 478us; 45us; 480us; 1us; 32768us; 193us; 1726us; 2us; 17426us; 35us; 1820us; 36us; 1819us; 1us; 32768us; 93us; 719us; 4us; 16542us; 74us; 299us; 94us; 16752us; 95us; 16752us; 96us; 16752us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16749us; 1us; 16750us; 98us; 724us; 1us; 16751us; 98us; 726us; 1us; 16542us; 74us; 299us; 0us; 16753us; 1us; 16542us; 74us; 299us; 0us; 16754us; 3us; 32768us; 42us; 738us; 46us; 1727us; 193us; 1726us; 6us; 16755us; 35us; 1820us; 36us; 1819us; 71us; 17426us; 90us; 737us; 97us; 736us; 193us; 1726us; 0us; 16756us; 1us; 16757us; 78us; 1729us; 5us; 16762us; 35us; 1820us; 36us; 1819us; 71us; 17426us; 90us; 737us; 97us; 736us; 1us; 32768us; 71us; 734us; 1us; 32768us; 59us; 735us; 0us; 16758us; 0us; 16759us; 0us; 16760us; 1us; 32768us; 97us; 740us; 1us; 16763us; 97us; 740us; 0us; 16761us; 3us; 32768us; 42us; 739us; 46us; 1727us; 193us; 1726us; 1us; 16766us; 132us; 744us; 0us; 16764us; 2us; 16542us; 74us; 299us; 197us; 749us; 1us; 16766us; 132us; 744us; 0us; 16765us; 1us; 17409us; 111us; 1805us; 0us; 16767us; 0us; 16768us; 1us; 17411us; 119us; 1806us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17231us; 79us; 1555us; 3us; 32768us; 10us; 993us; 70us; 754us; 197us; 979us; 72us; 32768us; 13us; 1110us; 22us; 758us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 756us; 0us; 16769us; 0us; 16770us; 0us; 16771us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16772us; 0us; 16773us; 0us; 16774us; 0us; 16777us; 1us; 16775us; 86us; 766us; 0us; 16776us; 2us; 32768us; 92us; 1720us; 190us; 1723us; 2us; 32768us; 70us; 768us; 132us; 770us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16778us; 2us; 32768us; 92us; 1720us; 190us; 1723us; 0us; 16779us; 0us; 16780us; 2us; 32768us; 56us; 776us; 79us; 774us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16781us; 0us; 16782us; 0us; 16783us; 0us; 16784us; 0us; 16785us; 0us; 16786us; 0us; 16787us; 0us; 16788us; 0us; 16789us; 0us; 16790us; 0us; 16791us; 0us; 16792us; 0us; 16793us; 0us; 16794us; 0us; 16795us; 1us; 16795us; 144us; 881us; 0us; 16796us; 0us; 16797us; 0us; 16798us; 0us; 16799us; 1us; 16802us; 187us; 796us; 1us; 32768us; 179us; 797us; 0us; 16800us; 1us; 32768us; 179us; 799us; 1us; 16803us; 187us; 800us; 1us; 32768us; 179us; 801us; 0us; 16801us; 0us; 16804us; 2us; 32768us; 63us; 798us; 179us; 795us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16805us; 0us; 16806us; 2us; 32768us; 93us; 803us; 179us; 802us; 0us; 16807us; 1us; 16808us; 34us; 810us; 1us; 32768us; 161us; 1697us; 0us; 16809us; 5us; 16810us; 58us; 843us; 80us; 844us; 90us; 851us; 98us; 849us; 133us; 841us; 0us; 16811us; 1us; 32768us; 193us; 1726us; 0us; 16812us; 1us; 16814us; 79us; 818us; 2us; 16815us; 79us; 818us; 98us; 821us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16813us; 3us; 32768us; 74us; 299us; 76us; 814us; 193us; 1726us; 3us; 32768us; 74us; 299us; 76us; 814us; 193us; 1726us; 0us; 16816us; 8us; 32768us; 10us; 993us; 74us; 299us; 76us; 814us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 193us; 1726us; 197us; 828us; 5us; 32768us; 10us; 993us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 197us; 979us; 0us; 16817us; 0us; 16818us; 0us; 16819us; 3us; 16903us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16820us; 0us; 16821us; 3us; 16823us; 80us; 844us; 90us; 851us; 98us; 849us; 1us; 16824us; 80us; 844us; 2us; 16828us; 80us; 844us; 90us; 851us; 2us; 16829us; 80us; 844us; 90us; 851us; 1us; 16830us; 80us; 844us; 1us; 16831us; 80us; 844us; 6us; 32768us; 58us; 843us; 70us; 995us; 80us; 844us; 90us; 851us; 98us; 849us; 133us; 841us; 6us; 32768us; 58us; 843us; 70us; 1000us; 80us; 844us; 90us; 851us; 98us; 849us; 133us; 841us; 6us; 32768us; 58us; 843us; 70us; 1086us; 80us; 844us; 90us; 851us; 98us; 849us; 133us; 841us; 6us; 32768us; 58us; 843us; 70us; 1093us; 80us; 844us; 90us; 851us; 98us; 849us; 133us; 841us; 1us; 32768us; 193us; 1726us; 0us; 16822us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 16825us; 98us; 848us; 0us; 16826us; 0us; 16827us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 17403us; 21us; 1790us; 85us; 1791us; 0us; 16832us; 1us; 17402us; 193us; 1726us; 0us; 16833us; 1us; 32768us; 70us; 858us; 2us; 17373us; 70us; 858us; 78us; 1779us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 16834us; 58us; 930us; 79us; 933us; 80us; 936us; 90us; 941us; 98us; 939us; 133us; 928us; 29us; 16685us; 10us; 16854us; 16us; 16854us; 21us; 16854us; 26us; 16854us; 34us; 1821us; 37us; 16854us; 39us; 16854us; 58us; 16854us; 59us; 16854us; 60us; 16854us; 61us; 16854us; 62us; 16854us; 65us; 16854us; 70us; 16854us; 79us; 16854us; 80us; 16854us; 85us; 16854us; 86us; 16854us; 88us; 16854us; 90us; 16854us; 94us; 16854us; 95us; 16854us; 96us; 16854us; 98us; 16854us; 99us; 16854us; 128us; 16854us; 133us; 16854us; 161us; 17428us; 197us; 16854us; 37us; 32768us; 35us; 863us; 36us; 865us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 870us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16836us; 35us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 870us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16837us; 35us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 870us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16838us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1649us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1650us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16839us; 0us; 16840us; 63us; 16868us; 10us; 993us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 58us; 1772us; 63us; 1754us; 64us; 1752us; 67us; 465us; 70us; 1756us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 893us; 83us; 867us; 84us; 1764us; 90us; 1761us; 91us; 1762us; 93us; 900us; 97us; 1755us; 101us; 1737us; 103us; 1757us; 107us; 898us; 123us; 897us; 144us; 1767us; 146us; 1763us; 149us; 899us; 156us; 1368us; 159us; 1766us; 161us; 1758us; 162us; 1759us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 183us; 1765us; 184us; 1753us; 185us; 1750us; 186us; 1749us; 187us; 1751us; 188us; 1744us; 189us; 1748us; 190us; 1747us; 191us; 1746us; 192us; 1745us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 904us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16841us; 0us; 16842us; 37us; 16846us; 35us; 878us; 36us; 876us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16843us; 35us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16844us; 35us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16845us; 0us; 16847us; 1us; 32768us; 169us; 882us; 0us; 16848us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 3us; 32768us; 60us; 1835us; 61us; 1832us; 62us; 1834us; 0us; 16849us; 37us; 16884us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 59us; 888us; 0us; 16850us; 37us; 16884us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 65us; 891us; 0us; 16851us; 1us; 32768us; 193us; 1726us; 1us; 17358us; 193us; 1726us; 0us; 16853us; 0us; 16854us; 0us; 16855us; 0us; 16856us; 0us; 16857us; 0us; 16858us; 63us; 16868us; 10us; 993us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 58us; 1772us; 63us; 1754us; 64us; 1752us; 67us; 465us; 70us; 1756us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 893us; 83us; 867us; 84us; 1764us; 90us; 1761us; 91us; 1762us; 93us; 900us; 97us; 1755us; 101us; 1737us; 103us; 1757us; 107us; 898us; 123us; 897us; 144us; 1767us; 146us; 1763us; 149us; 899us; 156us; 1368us; 159us; 1766us; 161us; 1758us; 162us; 1759us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 183us; 1765us; 184us; 1753us; 185us; 1750us; 186us; 1749us; 187us; 1751us; 188us; 1744us; 189us; 1748us; 190us; 1747us; 191us; 1746us; 192us; 1745us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 904us; 5us; 32768us; 10us; 993us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 197us; 979us; 0us; 16859us; 0us; 16860us; 3us; 16903us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 2us; 16861us; 34us; 17338us; 161us; 17338us; 0us; 16862us; 1us; 32768us; 93us; 908us; 39us; 32768us; 10us; 993us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 912us; 6us; 16871us; 10us; 993us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 98us; 938us; 197us; 979us; 0us; 16863us; 0us; 16864us; 3us; 16903us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 16865us; 0us; 16866us; 6us; 16867us; 58us; 930us; 79us; 933us; 80us; 936us; 90us; 941us; 98us; 939us; 133us; 928us; 4us; 16870us; 79us; 933us; 80us; 936us; 90us; 941us; 98us; 939us; 3us; 16874us; 79us; 933us; 80us; 936us; 90us; 941us; 2us; 16875us; 79us; 933us; 80us; 936us; 3us; 16877us; 79us; 933us; 80us; 936us; 90us; 941us; 3us; 16878us; 79us; 933us; 80us; 936us; 90us; 941us; 2us; 16879us; 79us; 933us; 80us; 936us; 6us; 32768us; 58us; 930us; 79us; 933us; 80us; 936us; 90us; 941us; 98us; 939us; 133us; 928us; 2us; 16880us; 79us; 933us; 80us; 936us; 6us; 16883us; 58us; 930us; 79us; 933us; 80us; 936us; 90us; 941us; 98us; 939us; 133us; 928us; 8us; 17403us; 21us; 1790us; 58us; 930us; 79us; 933us; 80us; 936us; 85us; 1791us; 90us; 941us; 98us; 939us; 133us; 928us; 15us; 32768us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 58us; 930us; 61us; 1852us; 70us; 1430us; 79us; 933us; 80us; 936us; 90us; 941us; 95us; 1853us; 98us; 939us; 128us; 1426us; 133us; 928us; 197us; 984us; 7us; 17029us; 58us; 930us; 79us; 933us; 80us; 936us; 86us; 1225us; 90us; 941us; 98us; 939us; 133us; 928us; 1us; 32768us; 193us; 1726us; 0us; 16869us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 16871us; 98us; 938us; 1us; 16872us; 90us; 940us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16873us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16876us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 17403us; 21us; 1790us; 85us; 1791us; 0us; 16881us; 2us; 17402us; 46us; 1727us; 193us; 1726us; 0us; 16882us; 2us; 32768us; 70us; 947us; 78us; 1729us; 37us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16885us; 37us; 16884us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16886us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 16887us; 0us; 16888us; 0us; 16889us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 0us; 16890us; 25us; 16891us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 1us; 16893us; 18us; 961us; 0us; 16892us; 1us; 16895us; 79us; 963us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16894us; 1us; 32768us; 10us; 966us; 0us; 16896us; 29us; 16899us; 21us; 1790us; 28us; 974us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 85us; 1791us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 105us; 972us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 31us; 16899us; 21us; 1790us; 28us; 974us; 59us; 17096us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 85us; 1791us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 17096us; 103us; 1164us; 105us; 972us; 129us; 1161us; 144us; 17096us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 30us; 16899us; 21us; 1790us; 28us; 974us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 85us; 1791us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 105us; 972us; 129us; 1161us; 144us; 1421us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 70us; 16898us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16897us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16900us; 1us; 32768us; 22us; 975us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 0us; 16901us; 73us; 16902us; 13us; 1110us; 21us; 1012us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1011us; 0us; 16903us; 2us; 16903us; 19us; 1810us; 139us; 1809us; 2us; 16903us; 19us; 1810us; 139us; 1809us; 2us; 16903us; 19us; 1810us; 139us; 1809us; 2us; 16903us; 30us; 1808us; 138us; 1807us; 2us; 16903us; 19us; 1810us; 139us; 1809us; 1us; 16903us; 59us; 1315us; 1us; 16903us; 59us; 1338us; 1us; 16903us; 157us; 1372us; 1us; 16903us; 65us; 1378us; 3us; 16903us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 3us; 16903us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 3us; 16903us; 60us; 1835us; 61us; 1832us; 62us; 1834us; 1us; 16903us; 66us; 1836us; 0us; 16904us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 128us; 997us; 2us; 16907us; 31us; 999us; 166us; 994us; 0us; 16905us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 10us; 993us; 19us; 712us; 197us; 979us; 1us; 17401us; 21us; 1802us; 2us; 16907us; 31us; 999us; 166us; 994us; 0us; 16906us; 1us; 32768us; 128us; 1006us; 71us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1008us; 0us; 16908us; 0us; 16909us; 73us; 32768us; 13us; 1110us; 21us; 1012us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1011us; 0us; 16910us; 0us; 16911us; 72us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1014us; 0us; 16912us; 0us; 16913us; 0us; 16914us; 0us; 16915us; 0us; 16916us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 4us; 32768us; 10us; 993us; 26us; 1208us; 88us; 1206us; 197us; 979us; 0us; 16917us; 0us; 16918us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 4us; 32768us; 10us; 993us; 26us; 1208us; 88us; 1206us; 197us; 979us; 0us; 16919us; 0us; 16920us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 5us; 32768us; 10us; 993us; 26us; 1208us; 88us; 1206us; 130us; 1030us; 197us; 979us; 0us; 16921us; 0us; 16922us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16923us; 72us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 29us; 32768us; 10us; 993us; 28us; 1231us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 105us; 1230us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 197us; 979us; 0us; 16924us; 0us; 16925us; 0us; 16926us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16927us; 62us; 16929us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 160us; 1085us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16928us; 71us; 32768us; 13us; 1110us; 22us; 956us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16930us; 63us; 16932us; 13us; 1110us; 22us; 956us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 160us; 1085us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16931us; 72us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 980us; 29us; 32768us; 10us; 993us; 30us; 1808us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 138us; 1807us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 197us; 979us; 72us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1051us; 4us; 32768us; 10us; 993us; 19us; 1810us; 139us; 1809us; 197us; 979us; 0us; 16933us; 0us; 16934us; 2us; 32768us; 19us; 1810us; 139us; 1809us; 0us; 16935us; 0us; 16936us; 0us; 16937us; 0us; 16938us; 44us; 32768us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 61us; 1852us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 95us; 1853us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 983us; 10us; 17401us; 10us; 993us; 16us; 1854us; 21us; 1802us; 30us; 1808us; 37us; 1850us; 39us; 1851us; 61us; 1852us; 95us; 1853us; 138us; 1807us; 197us; 979us; 78us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1854us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1850us; 39us; 1851us; 41us; 714us; 46us; 1309us; 56us; 1317us; 61us; 1852us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 95us; 1853us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 981us; 9us; 32768us; 10us; 993us; 16us; 1854us; 19us; 1810us; 37us; 1850us; 39us; 1851us; 61us; 1852us; 95us; 1853us; 139us; 1809us; 197us; 979us; 0us; 16939us; 0us; 16940us; 0us; 16941us; 0us; 16942us; 0us; 16943us; 4us; 32768us; 10us; 993us; 30us; 1808us; 138us; 1807us; 197us; 979us; 73us; 32768us; 10us; 993us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 982us; 4us; 32768us; 10us; 993us; 19us; 1810us; 139us; 1809us; 197us; 979us; 0us; 16944us; 0us; 16945us; 0us; 16946us; 0us; 16947us; 0us; 16948us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 32768us; 19us; 1810us; 139us; 1809us; 0us; 16949us; 0us; 16950us; 0us; 16951us; 0us; 16952us; 72us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 25us; 16953us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 72us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 25us; 16954us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 0us; 16955us; 0us; 16956us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 128us; 1088us; 1us; 17401us; 21us; 1802us; 2us; 16907us; 31us; 999us; 166us; 994us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16957us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 10us; 993us; 19us; 712us; 197us; 979us; 1us; 17401us; 21us; 1802us; 3us; 16907us; 31us; 999us; 166us; 994us; 197us; 1099us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16958us; 0us; 16959us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 128us; 1102us; 1us; 17401us; 21us; 1802us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16960us; 71us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 10us; 993us; 19us; 712us; 197us; 979us; 0us; 16961us; 1us; 32768us; 99us; 1424us; 0us; 16962us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 25us; 16963us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16964us; 25us; 16968us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 20us; 16971us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 20us; 16972us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 9us; 16973us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 20us; 16974us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 18us; 16975us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 18us; 16976us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 9us; 16977us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 9us; 16978us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 9us; 16979us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 9us; 16980us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 9us; 16981us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 9us; 16983us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 9us; 16984us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 190us; 1174us; 192us; 1181us; 1us; 16985us; 192us; 1181us; 8us; 16986us; 63us; 1178us; 80us; 1176us; 83us; 1149us; 97us; 1179us; 159us; 1175us; 185us; 1177us; 187us; 1180us; 192us; 1181us; 4us; 16987us; 97us; 1179us; 159us; 1175us; 187us; 1180us; 192us; 1181us; 4us; 16988us; 97us; 1179us; 159us; 1175us; 187us; 1180us; 192us; 1181us; 1us; 16989us; 192us; 1181us; 1us; 16990us; 192us; 1181us; 1us; 16991us; 192us; 1181us; 25us; 17028us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 25us; 17032us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 25us; 17036us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 29us; 32768us; 10us; 993us; 28us; 1231us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 105us; 1230us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 197us; 979us; 23us; 17041us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 25us; 32768us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 23us; 17044us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 24us; 17096us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 24us; 17097us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 26us; 17152us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 144us; 1421us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 28us; 32768us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 106us; 1433us; 129us; 1161us; 140us; 1434us; 144us; 1421us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 26us; 17148us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 144us; 1422us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 25us; 17149us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 25us; 17156us; 63us; 1178us; 64us; 1170us; 70us; 1168us; 80us; 1176us; 81us; 1151us; 82us; 1153us; 83us; 1149us; 84us; 1155us; 90us; 1165us; 91us; 1166us; 97us; 1179us; 98us; 1247us; 103us; 1164us; 129us; 1161us; 146us; 1162us; 159us; 1175us; 161us; 1171us; 162us; 1173us; 185us; 1177us; 186us; 1167us; 187us; 1180us; 189us; 1163us; 190us; 1174us; 191us; 1169us; 192us; 1181us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16965us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16966us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16967us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17012us; 69us; 1157us; 71us; 32768us; 13us; 1110us; 22us; 956us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16969us; 1us; 16970us; 98us; 1245us; 6us; 16970us; 10us; 993us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 98us; 1245us; 197us; 979us; 71us; 32768us; 13us; 1110us; 16us; 1182us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1183us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1184us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1185us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1186us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1187us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1188us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1189us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1190us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1191us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 73us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1192us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 0us; 16982us; 71us; 32768us; 13us; 1110us; 16us; 1193us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1194us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1195us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1196us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1197us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1198us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1199us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1200us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 71us; 32768us; 13us; 1110us; 16us; 1201us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 16992us; 0us; 16993us; 0us; 16994us; 0us; 16995us; 0us; 16996us; 0us; 16997us; 0us; 16998us; 0us; 16999us; 0us; 17000us; 0us; 17001us; 0us; 17002us; 0us; 17003us; 0us; 17004us; 0us; 17005us; 0us; 17006us; 0us; 17007us; 0us; 17008us; 0us; 17009us; 0us; 17010us; 0us; 17011us; 0us; 17013us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17014us; 39us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 58us; 1213us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1216us; 0us; 17015us; 39us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 58us; 1213us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1216us; 3us; 32768us; 10us; 993us; 20us; 1210us; 197us; 979us; 0us; 17016us; 0us; 17017us; 0us; 17018us; 38us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1215us; 0us; 17019us; 0us; 17020us; 0us; 17021us; 0us; 17022us; 2us; 32768us; 99us; 1226us; 197us; 1224us; 2us; 17023us; 58us; 1220us; 197us; 1223us; 38us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1222us; 0us; 17024us; 0us; 17025us; 0us; 17026us; 0us; 17027us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17030us; 3us; 17035us; 27us; 1237us; 141us; 1236us; 142us; 1242us; 0us; 17031us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 22us; 1232us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 17033us; 0us; 17034us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 22us; 1238us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 5us; 32768us; 10us; 993us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 197us; 979us; 0us; 17037us; 0us; 17038us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17039us; 0us; 17040us; 77us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1854us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1850us; 39us; 1851us; 41us; 714us; 46us; 1309us; 56us; 1317us; 61us; 1852us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 95us; 1853us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 0us; 17042us; 77us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1854us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1850us; 39us; 1851us; 41us; 714us; 46us; 1309us; 56us; 1317us; 61us; 1852us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 95us; 1853us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 0us; 17043us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 44us; 17352us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17045us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 44us; 17348us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17046us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 44us; 17351us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17047us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 44us; 17364us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17048us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 44us; 17359us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17049us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 44us; 17360us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17050us; 31us; 32768us; 46us; 1727us; 56us; 1655us; 67us; 1649us; 89us; 1646us; 92us; 1720us; 93us; 1639us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1276us; 31us; 32768us; 46us; 1727us; 56us; 1655us; 67us; 1649us; 89us; 1646us; 92us; 1720us; 93us; 1639us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1276us; 2us; 17426us; 35us; 1820us; 36us; 1819us; 35us; 17196us; 14us; 17199us; 21us; 17199us; 26us; 17199us; 35us; 1820us; 36us; 1819us; 56us; 17426us; 72us; 17426us; 73us; 17426us; 75us; 17426us; 88us; 17199us; 93us; 17426us; 107us; 17426us; 112us; 17199us; 123us; 17426us; 137us; 17426us; 149us; 17426us; 156us; 17426us; 167us; 17426us; 168us; 17426us; 169us; 17426us; 170us; 17426us; 171us; 17426us; 172us; 17426us; 173us; 17426us; 174us; 17426us; 175us; 17426us; 176us; 17426us; 177us; 17426us; 178us; 17426us; 179us; 17426us; 181us; 17426us; 182us; 17426us; 194us; 17426us; 195us; 17426us; 196us; 17426us; 29us; 32768us; 56us; 1518us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 93us; 1380us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1275us; 29us; 32768us; 56us; 1518us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 93us; 1380us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1275us; 0us; 17051us; 5us; 17051us; 14us; 17198us; 26us; 17198us; 88us; 17198us; 112us; 17198us; 133us; 499us; 0us; 17052us; 0us; 17053us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17054us; 44us; 32768us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 120us; 1267us; 123us; 1355us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17055us; 36us; 17056us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1286us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 39us; 17056us; 26us; 1471us; 46us; 1309us; 56us; 1317us; 70us; 1458us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 88us; 1467us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1286us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 39us; 32768us; 26us; 1471us; 46us; 1309us; 56us; 1317us; 70us; 1458us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 88us; 1467us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1286us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17057us; 5us; 17058us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 76us; 1307us; 78us; 1299us; 35us; 32768us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 5us; 17059us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 76us; 1307us; 78us; 1299us; 5us; 17060us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 76us; 1307us; 78us; 1299us; 2us; 17061us; 34us; 1295us; 35us; 1294us; 1us; 17062us; 34us; 1295us; 5us; 17064us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 76us; 1307us; 78us; 1299us; 5us; 17292us; 34us; 1295us; 35us; 1294us; 36us; 1293us; 76us; 1307us; 78us; 1299us; 35us; 32768us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 35us; 32768us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 161us; 1680us; 0us; 17063us; 35us; 32768us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 35us; 17342us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 7us; 17080us; 10us; 993us; 46us; 1323us; 71us; 1332us; 93us; 1325us; 101us; 1737us; 193us; 1726us; 197us; 979us; 0us; 17065us; 1us; 32768us; 78us; 1302us; 7us; 17080us; 10us; 993us; 46us; 1323us; 71us; 1332us; 93us; 1325us; 101us; 1737us; 193us; 1726us; 197us; 979us; 0us; 17066us; 3us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 3us; 17358us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 0us; 17067us; 2us; 32768us; 93us; 1203us; 193us; 1202us; 0us; 17068us; 0us; 17069us; 0us; 17070us; 72us; 17145us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 985us; 3us; 32768us; 10us; 993us; 59us; 1313us; 197us; 979us; 0us; 17071us; 0us; 17072us; 0us; 17073us; 0us; 17074us; 2us; 32768us; 73us; 1521us; 93us; 1318us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17075us; 0us; 17076us; 0us; 17077us; 0us; 17078us; 0us; 17079us; 0us; 17081us; 89us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 58us; 1772us; 63us; 1250us; 64us; 1752us; 70us; 1756us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1305us; 80us; 1326us; 84us; 1764us; 87us; 1045us; 90us; 1262us; 91us; 1265us; 93us; 1382us; 97us; 1755us; 99us; 1112us; 101us; 1737us; 103us; 1757us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 144us; 1767us; 146us; 1763us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1368us; 159us; 1259us; 160us; 1085us; 161us; 1758us; 162us; 1759us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 183us; 1765us; 184us; 1256us; 185us; 1253us; 186us; 1749us; 187us; 1751us; 188us; 1298us; 189us; 1748us; 190us; 1747us; 191us; 1746us; 192us; 1745us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1735us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 1us; 32768us; 78us; 1328us; 1us; 32768us; 179us; 1329us; 0us; 17082us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17083us; 75us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 97us; 1348us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 144us; 1346us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 190us; 1349us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 986us; 2us; 32768us; 10us; 993us; 197us; 979us; 0us; 17084us; 3us; 32768us; 10us; 993us; 59us; 1336us; 197us; 979us; 0us; 17085us; 0us; 17086us; 0us; 17087us; 0us; 17088us; 1us; 17090us; 98us; 1341us; 73us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 97us; 1348us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 144us; 1346us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 190us; 1349us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17089us; 1us; 17095us; 144us; 1344us; 71us; 17092us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 190us; 1349us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17091us; 71us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 190us; 1349us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17093us; 0us; 17094us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17098us; 0us; 17099us; 0us; 17100us; 0us; 17101us; 0us; 17102us; 0us; 17103us; 0us; 17104us; 0us; 17105us; 0us; 17106us; 0us; 17107us; 72us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 143us; 1366us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1364us; 3us; 32768us; 10us; 993us; 143us; 1362us; 197us; 979us; 0us; 17108us; 0us; 17109us; 1us; 32768us; 143us; 1365us; 0us; 17110us; 0us; 17111us; 72us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 987us; 73us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 157us; 1770us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 987us; 3us; 32768us; 10us; 993us; 157us; 1370us; 197us; 979us; 0us; 17112us; 0us; 17113us; 0us; 17114us; 0us; 17115us; 72us; 17145us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 988us; 3us; 32768us; 10us; 993us; 65us; 1376us; 197us; 979us; 0us; 17116us; 0us; 17117us; 0us; 17118us; 0us; 17119us; 81us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1392us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1389us; 39us; 1390us; 41us; 714us; 46us; 1309us; 56us; 1317us; 61us; 1391us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 89us; 1435us; 90us; 1261us; 91us; 1264us; 93us; 1381us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 989us; 97us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1392us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1389us; 39us; 1390us; 41us; 714us; 46us; 1309us; 56us; 1317us; 58us; 1772us; 61us; 1391us; 63us; 1250us; 64us; 1752us; 70us; 1756us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1305us; 84us; 1764us; 87us; 1045us; 89us; 1435us; 90us; 1262us; 91us; 1265us; 93us; 1381us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 97us; 1755us; 99us; 1112us; 101us; 1737us; 103us; 1757us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 144us; 1767us; 146us; 1763us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1368us; 159us; 1259us; 160us; 1085us; 161us; 1758us; 162us; 1759us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 183us; 1765us; 184us; 1256us; 185us; 1253us; 186us; 1749us; 187us; 1751us; 188us; 1298us; 189us; 1748us; 190us; 1724us; 191us; 1746us; 192us; 1745us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 990us; 97us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1392us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1389us; 39us; 1390us; 41us; 714us; 46us; 1309us; 56us; 1317us; 58us; 1772us; 61us; 1391us; 63us; 1250us; 64us; 1752us; 70us; 1756us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1305us; 84us; 1764us; 87us; 1045us; 89us; 1435us; 90us; 1262us; 91us; 1265us; 93us; 1381us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 97us; 1755us; 99us; 1112us; 101us; 1737us; 103us; 1757us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 144us; 1767us; 146us; 1763us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1368us; 159us; 1259us; 160us; 1085us; 161us; 1758us; 162us; 1759us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 183us; 1765us; 184us; 1256us; 185us; 1253us; 186us; 1749us; 187us; 1751us; 188us; 1298us; 189us; 1748us; 190us; 1724us; 191us; 1746us; 192us; 1745us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 990us; 0us; 17120us; 9us; 32768us; 10us; 993us; 16us; 1848us; 37us; 1845us; 39us; 1846us; 61us; 1847us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 197us; 979us; 0us; 17121us; 0us; 17122us; 0us; 17123us; 0us; 17123us; 0us; 17124us; 0us; 17125us; 0us; 17126us; 0us; 17127us; 0us; 17128us; 1us; 32768us; 79us; 1395us; 1us; 32768us; 93us; 1396us; 1us; 16542us; 74us; 299us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17129us; 0us; 17130us; 0us; 17131us; 0us; 17132us; 4us; 17132us; 94us; 17135us; 95us; 17135us; 96us; 17135us; 103us; 17135us; 4us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 103us; 1406us; 0us; 17133us; 1us; 32768us; 190us; 1723us; 0us; 17134us; 77us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 54us; 1451us; 56us; 1317us; 60us; 1835us; 61us; 1832us; 62us; 1834us; 63us; 1249us; 67us; 1462us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1268us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 991us; 5us; 32768us; 10us; 993us; 60us; 1835us; 61us; 1832us; 62us; 1834us; 197us; 979us; 0us; 17136us; 0us; 17137us; 0us; 17138us; 0us; 17139us; 0us; 17140us; 0us; 17141us; 0us; 17142us; 0us; 17143us; 0us; 17144us; 0us; 17146us; 0us; 17147us; 72us; 32768us; 10us; 993us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17150us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17151us; 77us; 32768us; 10us; 993us; 13us; 1110us; 16us; 1854us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1850us; 39us; 1851us; 41us; 714us; 46us; 1309us; 56us; 1317us; 61us; 1852us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 95us; 1853us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 0us; 17153us; 0us; 17154us; 0us; 17155us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 70us; 32768us; 13us; 1110us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17157us; 0us; 17158us; 0us; 17159us; 2us; 32768us; 194us; 1818us; 195us; 1817us; 3us; 17165us; 37us; 1822us; 38us; 1825us; 109us; 1826us; 0us; 17162us; 37us; 17167us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 79us; 1447us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1286us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 89us; 1440us; 0us; 17160us; 0us; 17161us; 0us; 17164us; 1us; 32768us; 93us; 1444us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17166us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1449us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17168us; 36us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1669us; 0us; 17169us; 30us; 32768us; 46us; 1727us; 56us; 1655us; 67us; 1649us; 89us; 1646us; 92us; 1720us; 93us; 1639us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 2us; 17426us; 35us; 1820us; 36us; 1819us; 28us; 17163us; 56us; 1518us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 93us; 1380us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17188us; 2us; 17180us; 21us; 1480us; 85us; 1481us; 0us; 17170us; 0us; 17171us; 71us; 32768us; 13us; 1110us; 22us; 956us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17188us; 2us; 17180us; 21us; 1480us; 85us; 1481us; 0us; 17172us; 1us; 17173us; 70us; 1463us; 71us; 17174us; 13us; 1110us; 22us; 956us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17188us; 2us; 17180us; 21us; 1480us; 85us; 1481us; 0us; 17175us; 3us; 32768us; 46us; 1727us; 67us; 1485us; 193us; 1726us; 0us; 17188us; 2us; 17180us; 21us; 1480us; 85us; 1481us; 0us; 17176us; 5us; 17180us; 21us; 1480us; 46us; 1727us; 67us; 1485us; 85us; 1481us; 193us; 1726us; 1us; 32768us; 20us; 1473us; 0us; 17177us; 0us; 17188us; 2us; 17180us; 21us; 1480us; 85us; 1481us; 1us; 32768us; 20us; 1477us; 0us; 17178us; 0us; 17179us; 3us; 17179us; 46us; 1727us; 67us; 1485us; 193us; 1726us; 1us; 17181us; 85us; 1483us; 1us; 17182us; 21us; 1482us; 0us; 17183us; 0us; 17184us; 1us; 17185us; 78us; 1729us; 0us; 17186us; 0us; 17187us; 8us; 17192us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 61us; 1852us; 70us; 1488us; 95us; 1853us; 197us; 979us; 78us; 17190us; 10us; 993us; 13us; 1110us; 16us; 1854us; 22us; 956us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 37us; 1850us; 39us; 1851us; 41us; 714us; 46us; 1309us; 56us; 1317us; 61us; 1852us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 95us; 1853us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 0us; 17189us; 0us; 17191us; 0us; 17193us; 3us; 17401us; 21us; 1802us; 26us; 1502us; 88us; 1500us; 1us; 17401us; 21us; 1802us; 3us; 17206us; 14us; 557us; 112us; 556us; 197us; 1511us; 0us; 17194us; 2us; 32768us; 14us; 557us; 112us; 556us; 0us; 17195us; 0us; 17197us; 0us; 17200us; 3us; 16542us; 22us; 502us; 74us; 299us; 197us; 749us; 0us; 17202us; 2us; 16542us; 74us; 299us; 197us; 749us; 1us; 32768us; 20us; 1504us; 0us; 17203us; 3us; 17395us; 19us; 1797us; 20us; 1798us; 143us; 1799us; 0us; 17204us; 3us; 17206us; 14us; 557us; 112us; 556us; 197us; 1511us; 0us; 17205us; 3us; 17206us; 14us; 557us; 112us; 556us; 197us; 1511us; 0us; 17207us; 3us; 17206us; 14us; 557us; 112us; 556us; 197us; 1511us; 0us; 17208us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 8us; 17201us; 26us; 1502us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 88us; 1500us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 3us; 17395us; 19us; 1797us; 20us; 1798us; 143us; 1799us; 1us; 17401us; 21us; 1802us; 0us; 17209us; 1us; 32768us; 73us; 1521us; 0us; 17210us; 0us; 17211us; 39us; 32768us; 10us; 993us; 46us; 1309us; 56us; 1317us; 66us; 1836us; 67us; 1462us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 992us; 3us; 32768us; 10us; 993us; 66us; 1836us; 197us; 979us; 0us; 17212us; 0us; 17213us; 0us; 17214us; 0us; 17215us; 0us; 17216us; 35us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 32768us; 99us; 1530us; 72us; 32768us; 13us; 1110us; 22us; 951us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1532us; 0us; 17217us; 0us; 17218us; 36us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 67us; 465us; 71us; 886us; 72us; 889us; 75us; 883us; 76us; 892us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1544us; 2us; 32768us; 99us; 1535us; 197us; 1542us; 73us; 32768us; 10us; 993us; 13us; 1110us; 18us; 1539us; 24us; 1533us; 25us; 1548us; 29us; 1105us; 30us; 705us; 32us; 1092us; 33us; 701us; 41us; 714us; 46us; 1309us; 56us; 1317us; 63us; 1249us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 87us; 1045us; 90us; 1261us; 91us; 1264us; 93us; 1382us; 99us; 1112us; 101us; 1737us; 107us; 1356us; 108us; 1026us; 115us; 1037us; 116us; 1041us; 117us; 1018us; 118us; 1022us; 120us; 1267us; 123us; 1355us; 124us; 1056us; 125us; 1528us; 126us; 1546us; 127us; 1032us; 131us; 1100us; 134us; 1039us; 135us; 1043us; 137us; 1360us; 147us; 1277us; 148us; 1279us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 159us; 1258us; 160us; 1085us; 163us; 695us; 164us; 1079us; 165us; 1081us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 184us; 1255us; 185us; 1252us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 3us; 32768us; 10us; 993us; 20us; 1537us; 197us; 979us; 0us; 17219us; 0us; 17220us; 1us; 32768us; 20us; 1540us; 0us; 17221us; 0us; 17222us; 1us; 32768us; 20us; 1543us; 0us; 17223us; 1us; 32768us; 20us; 1545us; 0us; 17224us; 39us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 58us; 1213us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1216us; 0us; 17225us; 39us; 32768us; 43us; 479us; 44us; 478us; 45us; 480us; 46us; 468us; 56us; 907us; 58us; 1213us; 67us; 465us; 71us; 886us; 72us; 889us; 74us; 299us; 75us; 883us; 76us; 892us; 83us; 867us; 93us; 900us; 101us; 1737us; 107us; 898us; 123us; 897us; 149us; 899us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 790us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1216us; 1us; 32768us; 20us; 1550us; 0us; 17226us; 1us; 17227us; 86us; 1552us; 4us; 32768us; 52us; 594us; 92us; 1720us; 93us; 609us; 190us; 1723us; 1us; 17229us; 86us; 1554us; 4us; 32768us; 52us; 594us; 92us; 1720us; 93us; 609us; 190us; 1723us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17232us; 1us; 17234us; 99us; 1558us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17233us; 1us; 17236us; 97us; 1561us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17235us; 1us; 17238us; 97us; 1564us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 74us; 299us; 76us; 1577us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17237us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 76us; 1570us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 7us; 17241us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 79us; 1568us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 17239us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 1us; 32768us; 193us; 1726us; 1us; 32768us; 79us; 1572us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 17240us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 7us; 17244us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 79us; 1575us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 17242us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 1us; 32768us; 193us; 1726us; 1us; 32768us; 79us; 1579us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 6us; 17243us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 1us; 17246us; 99us; 1582us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17245us; 1us; 32768us; 10us; 1585us; 0us; 17247us; 8us; 17251us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 97us; 1587us; 187us; 1591us; 190us; 1723us; 193us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17248us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17249us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17250us; 8us; 17254us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 97us; 1594us; 187us; 1596us; 190us; 1723us; 193us; 1726us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17252us; 31us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17253us; 1us; 17255us; 78us; 1729us; 0us; 17256us; 1us; 17256us; 81us; 1615us; 1us; 17258us; 190us; 1603us; 4us; 17258us; 34us; 1678us; 78us; 1675us; 161us; 1680us; 190us; 1603us; 3us; 32768us; 63us; 807us; 93us; 803us; 179us; 802us; 0us; 17257us; 9us; 32768us; 10us; 993us; 36us; 1607us; 46us; 1727us; 71us; 1620us; 92us; 1720us; 97us; 1657us; 190us; 1723us; 193us; 1726us; 197us; 979us; 0us; 17259us; 1us; 32768us; 71us; 1620us; 0us; 17260us; 0us; 17261us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1669us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 4us; 32768us; 46us; 1727us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 0us; 17262us; 0us; 17263us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17264us; 1us; 17282us; 81us; 1618us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17265us; 2us; 32768us; 59us; 1621us; 98us; 1622us; 0us; 17266us; 2us; 32768us; 59us; 1623us; 98us; 1624us; 0us; 17267us; 2us; 32768us; 59us; 1625us; 98us; 1626us; 0us; 17268us; 1us; 32768us; 59us; 1627us; 0us; 17269us; 1us; 32768us; 98us; 1629us; 32us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17273us; 1us; 17270us; 98us; 1633us; 4us; 32768us; 10us; 993us; 98us; 1633us; 162us; 1684us; 197us; 979us; 32us; 17314us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17271us; 0us; 17272us; 1us; 17274us; 190us; 1637us; 3us; 32768us; 63us; 807us; 93us; 803us; 179us; 802us; 0us; 17275us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1669us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 4us; 32768us; 46us; 1727us; 92us; 1720us; 190us; 1723us; 193us; 1726us; 0us; 17276us; 1us; 17277us; 78us; 1672us; 1us; 17278us; 78us; 1672us; 0us; 17279us; 30us; 32768us; 46us; 1727us; 56us; 1655us; 67us; 1649us; 89us; 1646us; 92us; 1720us; 93us; 1650us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 1us; 17280us; 78us; 1672us; 0us; 17281us; 0us; 17282us; 33us; 32768us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 1669us; 5us; 32768us; 10us; 993us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 197us; 979us; 6us; 17309us; 10us; 993us; 70us; 1693us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 197us; 979us; 0us; 17283us; 0us; 17284us; 1us; 32768us; 93us; 1656us; 33us; 32768us; 10us; 993us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 33us; 32768us; 10us; 993us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 5us; 32768us; 10us; 993us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 197us; 979us; 0us; 17285us; 0us; 17286us; 0us; 17287us; 0us; 17288us; 0us; 17289us; 0us; 17290us; 0us; 17291us; 35us; 32768us; 46us; 1309us; 56us; 1317us; 71us; 1311us; 72us; 1374us; 73us; 1521us; 75us; 1408us; 76us; 1304us; 93us; 1382us; 101us; 1737us; 107us; 1356us; 123us; 1355us; 137us; 1360us; 149us; 1354us; 155us; 1301us; 156us; 1367us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 188us; 1297us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17293us; 0us; 17294us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17295us; 0us; 17296us; 2us; 32768us; 46us; 1727us; 193us; 1726us; 3us; 17297us; 34us; 1678us; 78us; 1729us; 161us; 1680us; 0us; 17298us; 7us; 32768us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 61us; 1852us; 95us; 1853us; 197us; 979us; 0us; 17299us; 0us; 17300us; 1us; 32768us; 161us; 1680us; 0us; 17301us; 35us; 17314us; 10us; 993us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 162us; 1690us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 1us; 32768us; 98us; 1682us; 39us; 17314us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 46us; 1727us; 56us; 541us; 61us; 1852us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 95us; 1853us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 197us; 979us; 0us; 17273us; 0us; 17302us; 0us; 17303us; 0us; 17304us; 8us; 17312us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 61us; 1852us; 95us; 1853us; 162us; 1688us; 197us; 979us; 0us; 17305us; 0us; 17306us; 0us; 17307us; 0us; 17308us; 1us; 17309us; 70us; 1693us; 32us; 17311us; 46us; 1727us; 56us; 541us; 67us; 1617us; 73us; 544us; 89us; 1646us; 92us; 1720us; 93us; 1610us; 107us; 1668us; 114us; 1666us; 123us; 1667us; 149us; 1665us; 167us; 792us; 168us; 791us; 169us; 789us; 170us; 788us; 171us; 787us; 172us; 785us; 173us; 786us; 174us; 784us; 175us; 782us; 176us; 780us; 177us; 778us; 178us; 783us; 179us; 781us; 181us; 779us; 182us; 777us; 187us; 1589us; 190us; 1723us; 193us; 1726us; 194us; 1818us; 195us; 1817us; 196us; 794us; 0us; 17310us; 0us; 17312us; 0us; 17313us; 8us; 32768us; 46us; 1727us; 67us; 1700us; 92us; 1720us; 93us; 1704us; 179us; 1710us; 187us; 1719us; 190us; 1723us; 193us; 1726us; 3us; 32768us; 97us; 1717us; 162us; 1699us; 187us; 1718us; 0us; 17315us; 1us; 32768us; 162us; 1701us; 0us; 17316us; 1us; 17317us; 78us; 1729us; 0us; 17318us; 7us; 32768us; 46us; 1727us; 92us; 1720us; 93us; 1704us; 179us; 1710us; 187us; 1719us; 190us; 1723us; 193us; 1726us; 5us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 97us; 1717us; 187us; 1718us; 0us; 17319us; 1us; 17320us; 190us; 1708us; 3us; 32768us; 63us; 807us; 93us; 803us; 179us; 802us; 0us; 17321us; 0us; 17322us; 6us; 17323us; 46us; 1727us; 92us; 1720us; 93us; 1704us; 179us; 1710us; 190us; 1723us; 193us; 1726us; 0us; 17324us; 0us; 17325us; 0us; 17326us; 0us; 17327us; 0us; 17328us; 7us; 32768us; 46us; 1727us; 92us; 1720us; 93us; 1704us; 179us; 1710us; 187us; 1719us; 190us; 1723us; 193us; 1726us; 7us; 32768us; 46us; 1727us; 92us; 1720us; 93us; 1704us; 179us; 1710us; 187us; 1719us; 190us; 1723us; 193us; 1726us; 7us; 32768us; 46us; 1727us; 92us; 1720us; 93us; 1704us; 179us; 1710us; 187us; 1719us; 190us; 1723us; 193us; 1726us; 1us; 32768us; 193us; 1726us; 0us; 17329us; 0us; 17330us; 1us; 32768us; 193us; 1726us; 1us; 17345us; 193us; 1726us; 0us; 17331us; 0us; 17332us; 0us; 17333us; 0us; 17334us; 8us; 32768us; 10us; 993us; 16us; 1854us; 37us; 1850us; 39us; 1851us; 61us; 1852us; 95us; 1853us; 193us; 1726us; 197us; 979us; 0us; 17335us; 0us; 17336us; 27us; 32768us; 58us; 1772us; 63us; 1754us; 64us; 1752us; 70us; 1756us; 76us; 1760us; 84us; 1764us; 90us; 1761us; 91us; 1762us; 97us; 1755us; 103us; 1757us; 144us; 1767us; 146us; 1763us; 156us; 1769us; 159us; 1766us; 161us; 1758us; 162us; 1759us; 183us; 1765us; 184us; 1753us; 185us; 1750us; 186us; 1749us; 187us; 1751us; 188us; 1744us; 189us; 1748us; 190us; 1747us; 191us; 1746us; 192us; 1745us; 197us; 1735us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17337us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17338us; 0us; 17339us; 1us; 32768us; 58us; 1739us; 5us; 32768us; 67us; 1741us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 193us; 1771us; 0us; 17340us; 1us; 32768us; 58us; 1742us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17341us; 0us; 17342us; 0us; 17343us; 0us; 17344us; 0us; 17345us; 0us; 17346us; 0us; 17347us; 0us; 17348us; 0us; 17349us; 0us; 17350us; 0us; 17351us; 0us; 17352us; 0us; 17353us; 0us; 17354us; 0us; 17355us; 0us; 17356us; 0us; 17357us; 0us; 17358us; 0us; 17359us; 0us; 17360us; 0us; 17361us; 0us; 17362us; 0us; 17363us; 0us; 17364us; 1us; 17365us; 144us; 1768us; 0us; 17366us; 1us; 32768us; 157us; 1770us; 0us; 17367us; 0us; 17368us; 1us; 32768us; 193us; 1771us; 0us; 17369us; 0us; 17370us; 0us; 17371us; 0us; 17372us; 1us; 17373us; 78us; 1779us; 0us; 17374us; 4us; 32768us; 93us; 1732us; 101us; 1737us; 193us; 1726us; 197us; 1781us; 0us; 17375us; 0us; 17376us; 0us; 17377us; 0us; 17378us; 0us; 17379us; 0us; 17380us; 3us; 17381us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 0us; 17382us; 3us; 17384us; 21us; 1785us; 68us; 1784us; 85us; 1783us; 0us; 17383us; 1us; 17385us; 85us; 1792us; 1us; 17386us; 21us; 1793us; 0us; 17387us; 0us; 17388us; 0us; 17389us; 0us; 17390us; 0us; 17391us; 0us; 17392us; 0us; 17393us; 0us; 17394us; 0us; 17396us; 0us; 17398us; 0us; 17400us; 0us; 17402us; 0us; 17404us; 0us; 17408us; 0us; 17410us; 0us; 17412us; 0us; 17413us; 0us; 17414us; 0us; 17415us; 0us; 17416us; 0us; 17417us; 0us; 17418us; 0us; 17419us; 0us; 17420us; 0us; 17421us; 0us; 17422us; 0us; 17423us; 0us; 17424us; 0us; 17425us; 0us; 17427us; 3us; 32768us; 37us; 1822us; 38us; 1825us; 109us; 1826us; 3us; 17450us; 37us; 1822us; 38us; 1825us; 109us; 1826us; 0us; 17429us; 0us; 17430us; 0us; 17431us; 3us; 32768us; 39us; 1827us; 40us; 1830us; 151us; 1831us; 3us; 17451us; 39us; 1827us; 40us; 1830us; 151us; 1831us; 0us; 17432us; 0us; 17433us; 0us; 17434us; 3us; 32768us; 60us; 1835us; 61us; 1832us; 62us; 1834us; 0us; 17435us; 0us; 17436us; 0us; 17437us; 0us; 17438us; 3us; 32768us; 94us; 1840us; 95us; 1837us; 96us; 1839us; 0us; 17439us; 0us; 17440us; 0us; 17441us; 3us; 32768us; 15us; 1844us; 16us; 1841us; 17us; 1843us; 0us; 17442us; 0us; 17443us; 0us; 17444us; 0us; 17445us; 0us; 17446us; 0us; 17447us; 0us; 17448us; 0us; 17449us; 0us; 17450us; 0us; 17451us; 0us; 17452us; 0us; 17453us; 0us; 17454us; 0us; 17455us; |]
let _fsyacc_actionTableRowOffsets = [|0us; 17us; 18us; 105us; 106us; 114us; 115us; 186us; 187us; 220us; 221us; 222us; 223us; 224us; 225us; 226us; 227us; 232us; 233us; 238us; 239us; 244us; 245us; 251us; 252us; 258us; 259us; 265us; 266us; 283us; 284us; 288us; 367us; 393us; 394us; 397us; 398us; 399us; 400us; 402us; 403us; 406us; 407us; 408us; 411us; 412us; 414us; 415us; 420us; 421us; 425us; 427us; 430us; 432us; 434us; 437us; 439us; 441us; 442us; 444us; 445us; 447us; 464us; 465us; 469us; 478us; 497us; 498us; 499us; 500us; 516us; 522us; 524us; 525us; 526us; 533us; 534us; 535us; 539us; 543us; 559us; 560us; 564us; 569us; 570us; 571us; 572us; 576us; 585us; 588us; 594us; 595us; 596us; 597us; 598us; 601us; 603us; 605us; 607us; 609us; 613us; 617us; 620us; 622us; 656us; 658us; 659us; 731us; 757us; 828us; 857us; 859us; 860us; 869us; 873us; 874us; 890us; 892us; 896us; 897us; 913us; 915us; 916us; 918us; 919us; 921us; 923us; 924us; 927us; 935us; 936us; 937us; 990us; 992us; 1007us; 1009us; 1013us; 1015us; 1016us; 1018us; 1019us; 1020us; 1021us; 1023us; 1057us; 1058us; 1059us; 1076us; 1080us; 1081us; 1082us; 1084us; 1085us; 1100us; 1106us; 1107us; 1108us; 1124us; 1128us; 1129us; 1130us; 1145us; 1151us; 1152us; 1153us; 1154us; 1155us; 1158us; 1173us; 1174us; 1178us; 1182us; 1193us; 1238us; 1240us; 1244us; 1248us; 1251us; 1253us; 1287us; 1290us; 1292us; 1293us; 1325us; 1332us; 1364us; 1371us; 1373us; 1374us; 1380us; 1382us; 1383us; 1385us; 1386us; 1388us; 1422us; 1423us; 1427us; 1428us; 1432us; 1435us; 1436us; 1437us; 1439us; 1443us; 1444us; 1445us; 1447us; 1448us; 1450us; 1451us; 1467us; 1471us; 1472us; 1475us; 1476us; 1478us; 1479us; 1484us; 1485us; 1487us; 1488us; 1490us; 1491us; 1493us; 1580us; 1581us; 1586us; 1665us; 1753us; 1754us; 1755us; 1841us; 1847us; 1849us; 1850us; 1851us; 1858us; 1859us; 1860us; 1861us; 1866us; 1945us; 1974us; 2060us; 2061us; 2062us; 2063us; 2085us; 2086us; 2172us; 2173us; 2177us; 2184us; 2189us; 2194us; 2195us; 2196us; 2197us; 2201us; 2213us; 2214us; 2216us; 2217us; 2289us; 2290us; 2292us; 2294us; 2295us; 2296us; 2298us; 2304us; 2305us; 2308us; 2309us; 2310us; 2315us; 2316us; 2318us; 2325us; 2331us; 2332us; 2333us; 2339us; 2340us; 2341us; 2342us; 2343us; 2345us; 2431us; 2435us; 2436us; 2437us; 2438us; 2445us; 2449us; 2450us; 2451us; 2453us; 2454us; 2469us; 2472us; 2481us; 2483us; 2484us; 2486us; 2488us; 2489us; 2490us; 2491us; 2492us; 2502us; 2503us; 2507us; 2536us; 2537us; 2541us; 2545us; 2574us; 2575us; 2578us; 2583us; 2586us; 2615us; 2616us; 2618us; 2619us; 2621us; 2622us; 2624us; 2625us; 2627us; 2628us; 2639us; 2640us; 2641us; 2642us; 2643us; 2647us; 2649us; 2650us; 2652us; 2654us; 2655us; 2696us; 2703us; 2704us; 2705us; 2709us; 2712us; 2714us; 2716us; 2718us; 2725us; 2726us; 2738us; 2740us; 2748us; 2750us; 2756us; 2758us; 2759us; 2760us; 2762us; 2763us; 2764us; 2765us; 2767us; 2801us; 2802us; 2803us; 2809us; 2813us; 2814us; 2815us; 2820us; 2821us; 2828us; 2834us; 2835us; 2836us; 2843us; 2849us; 2850us; 2851us; 2852us; 2853us; 2864us; 2865us; 2868us; 2879us; 2880us; 2882us; 2883us; 2885us; 2888us; 2889us; 2890us; 2892us; 2894us; 2895us; 2897us; 2934us; 2936us; 2938us; 3010us; 3011us; 3048us; 3050us; 3054us; 3126us; 3127us; 3128us; 3130us; 3131us; 3135us; 3139us; 3155us; 3205us; 3206us; 3207us; 3210us; 3212us; 3213us; 3245us; 3253us; 3254us; 3256us; 3260us; 3263us; 3265us; 3299us; 3302us; 3304us; 3305us; 3306us; 3308us; 3309us; 3311us; 3312us; 3314us; 3315us; 3351us; 3353us; 3355us; 3427us; 3429us; 3430us; 3432us; 3433us; 3435us; 3439us; 3441us; 3443us; 3476us; 3477us; 3479us; 3483us; 3485us; 3487us; 3489us; 3561us; 3564us; 3565us; 3598us; 3599us; 3601us; 3605us; 3606us; 3608us; 3612us; 3613us; 3614us; 3619us; 3621us; 3625us; 3626us; 3627us; 3628us; 3629us; 3630us; 3631us; 3632us; 3635us; 3639us; 3640us; 3647us; 3651us; 3652us; 3690us; 3722us; 3723us; 3752us; 3754us; 3755us; 3756us; 3757us; 3759us; 3760us; 3761us; 3764us; 3765us; 3766us; 3768us; 3774us; 3775us; 3776us; 3777us; 3780us; 3795us; 3796us; 3800us; 3805us; 3809us; 3811us; 3812us; 3814us; 3815us; 3816us; 3818us; 3820us; 3821us; 3822us; 3823us; 3827us; 3862us; 3865us; 3867us; 3870us; 3871us; 3872us; 3873us; 3874us; 3908us; 3912us; 3913us; 3916us; 3922us; 3923us; 3924us; 3928us; 3929us; 3932us; 3933us; 3934us; 3937us; 3941us; 3942us; 3943us; 3945us; 3946us; 3977us; 3979us; 3980us; 3981us; 3982us; 3983us; 3984us; 3985us; 3991us; 3995us; 3998us; 4000us; 4001us; 4002us; 4004us; 4009us; 4010us; 4013us; 4015us; 4017us; 4020us; 4021us; 4022us; 4025us; 4026us; 4028us; 4030us; 4032us; 4033us; 4034us; 4036us; 4040us; 4042us; 4044us; 4045us; 4046us; 4074us; 4079us; 4081us; 4083us; 4085us; 4090us; 4091us; 4092us; 4095us; 4097us; 4130us; 4131us; 4134us; 4167us; 4168us; 4174us; 4175us; 4179us; 4180us; 4181us; 4183us; 4187us; 4188us; 4220us; 4225us; 4227us; 4229us; 4231us; 4235us; 4236us; 4239us; 4240us; 4241us; 4273us; 4280us; 4287us; 4289us; 4290us; 4292us; 4294us; 4295us; 4298us; 4299us; 4301us; 4303us; 4304us; 4308us; 4312us; 4317us; 4318us; 4351us; 4353us; 4354us; 4388us; 4390us; 4391us; 4410us; 4412us; 4413us; 4414us; 4444us; 4448us; 4449us; 4451us; 4455us; 4456us; 4461us; 4462us; 4481us; 4483us; 4529us; 4530us; 4563us; 4564us; 4566us; 4598us; 4599us; 4601us; 4633us; 4640us; 4647us; 4648us; 4649us; 4652us; 4660us; 4661us; 4662us; 4664us; 4665us; 4669us; 4671us; 4673us; 4706us; 4707us; 4709us; 4710us; 4711us; 4713us; 4717us; 4719us; 4721us; 4722us; 4724us; 4757us; 4758us; 4761us; 4763us; 4766us; 4768us; 4770us; 4773us; 4774us; 4775us; 4847us; 4848us; 4850us; 4853us; 4857us; 4858us; 4930us; 4934us; 4935us; 4936us; 4937us; 4938us; 4939us; 4940us; 4941us; 4943us; 4947us; 4949us; 4952us; 4954us; 4959us; 4963us; 4964us; 4966us; 4968us; 4970us; 4971us; 4973us; 4974us; 4978us; 4985us; 4986us; 4988us; 4994us; 4996us; 4998us; 4999us; 5000us; 5001us; 5003us; 5005us; 5006us; 5010us; 5012us; 5013us; 5016us; 5018us; 5019us; 5021us; 5022us; 5023us; 5025us; 5062us; 5064us; 5068us; 5141us; 5142us; 5143us; 5144us; 5215us; 5221us; 5222us; 5223us; 5224us; 5225us; 5227us; 5228us; 5231us; 5234us; 5306us; 5307us; 5310us; 5311us; 5312us; 5315us; 5348us; 5349us; 5350us; 5351us; 5352us; 5353us; 5354us; 5355us; 5356us; 5357us; 5358us; 5359us; 5360us; 5361us; 5362us; 5363us; 5365us; 5366us; 5367us; 5368us; 5369us; 5371us; 5373us; 5374us; 5376us; 5378us; 5380us; 5381us; 5382us; 5385us; 5389us; 5390us; 5391us; 5394us; 5395us; 5397us; 5399us; 5400us; 5406us; 5407us; 5409us; 5410us; 5412us; 5415us; 5448us; 5449us; 5453us; 5457us; 5458us; 5467us; 5473us; 5474us; 5475us; 5476us; 5480us; 5481us; 5482us; 5486us; 5488us; 5491us; 5494us; 5496us; 5498us; 5505us; 5512us; 5519us; 5526us; 5528us; 5529us; 5566us; 5603us; 5605us; 5606us; 5607us; 5644us; 5681us; 5718us; 5755us; 5758us; 5759us; 5761us; 5762us; 5764us; 5767us; 5805us; 5812us; 5842us; 5880us; 5881us; 5917us; 5918us; 5954us; 5955us; 5987us; 5988us; 5989us; 6053us; 6057us; 6058us; 6059us; 6097us; 6098us; 6134us; 6135us; 6171us; 6172us; 6173us; 6175us; 6176us; 6179us; 6183us; 6184us; 6222us; 6224us; 6225us; 6263us; 6265us; 6266us; 6268us; 6270us; 6271us; 6272us; 6273us; 6274us; 6275us; 6276us; 6340us; 6346us; 6347us; 6348us; 6352us; 6355us; 6356us; 6358us; 6398us; 6405us; 6406us; 6407us; 6411us; 6412us; 6413us; 6420us; 6425us; 6429us; 6432us; 6436us; 6440us; 6443us; 6450us; 6453us; 6460us; 6469us; 6485us; 6493us; 6495us; 6496us; 6534us; 6536us; 6538us; 6571us; 6572us; 6610us; 6648us; 6649us; 6687us; 6725us; 6763us; 6801us; 6804us; 6805us; 6808us; 6809us; 6812us; 6850us; 6851us; 6889us; 6890us; 6961us; 6967us; 6968us; 6969us; 6970us; 7041us; 7045us; 7046us; 7072us; 7074us; 7075us; 7077us; 7110us; 7111us; 7113us; 7114us; 7144us; 7176us; 7207us; 7278us; 7279us; 7350us; 7351us; 7353us; 7424us; 7428us; 7429us; 7503us; 7504us; 7507us; 7510us; 7513us; 7516us; 7519us; 7521us; 7523us; 7525us; 7527us; 7531us; 7535us; 7539us; 7541us; 7542us; 7579us; 7651us; 7653us; 7656us; 7657us; 7694us; 7766us; 7770us; 7772us; 7775us; 7776us; 7778us; 7850us; 7851us; 7852us; 7926us; 7927us; 7928us; 8001us; 8002us; 8003us; 8004us; 8005us; 8006us; 8077us; 8082us; 8083us; 8084us; 8155us; 8160us; 8161us; 8162us; 8233us; 8239us; 8240us; 8241us; 8313us; 8314us; 8387us; 8417us; 8418us; 8419us; 8420us; 8491us; 8492us; 8555us; 8556us; 8628us; 8629us; 8693us; 8694us; 8767us; 8797us; 8870us; 8875us; 8876us; 8877us; 8880us; 8881us; 8882us; 8883us; 8884us; 8929us; 8940us; 9019us; 9029us; 9030us; 9031us; 9032us; 9033us; 9034us; 9039us; 9113us; 9118us; 9119us; 9120us; 9121us; 9122us; 9123us; 9195us; 9198us; 9199us; 9200us; 9201us; 9202us; 9275us; 9301us; 9374us; 9400us; 9401us; 9402us; 9439us; 9511us; 9513us; 9515us; 9518us; 9590us; 9591us; 9628us; 9700us; 9704us; 9706us; 9710us; 9782us; 9783us; 9784us; 9855us; 9857us; 9859us; 9931us; 9932us; 10004us; 10008us; 10009us; 10011us; 10012us; 10083us; 10109us; 10180us; 10181us; 10207us; 10228us; 10249us; 10259us; 10280us; 10299us; 10318us; 10328us; 10338us; 10348us; 10358us; 10368us; 10378us; 10388us; 10390us; 10399us; 10404us; 10409us; 10411us; 10413us; 10415us; 10441us; 10467us; 10493us; 10523us; 10547us; 10573us; 10597us; 10622us; 10647us; 10674us; 10703us; 10730us; 10756us; 10782us; 10815us; 10816us; 10849us; 10850us; 10883us; 10884us; 10955us; 10957us; 11029us; 11030us; 11032us; 11039us; 11111us; 11183us; 11255us; 11327us; 11399us; 11471us; 11543us; 11615us; 11687us; 11759us; 11833us; 11834us; 11906us; 11978us; 12050us; 12122us; 12194us; 12266us; 12338us; 12410us; 12482us; 12483us; 12484us; 12485us; 12486us; 12487us; 12488us; 12489us; 12490us; 12491us; 12492us; 12493us; 12494us; 12495us; 12496us; 12497us; 12498us; 12499us; 12500us; 12501us; 12502us; 12503us; 12574us; 12578us; 12579us; 12619us; 12620us; 12660us; 12664us; 12665us; 12666us; 12667us; 12706us; 12707us; 12708us; 12709us; 12710us; 12713us; 12716us; 12755us; 12756us; 12757us; 12758us; 12759us; 12830us; 12901us; 12902us; 12906us; 12907us; 12978us; 12980us; 13051us; 13057us; 13058us; 13059us; 13130us; 13132us; 13203us; 13209us; 13210us; 13211us; 13282us; 13283us; 13284us; 13362us; 13363us; 13441us; 13442us; 13487us; 13532us; 13533us; 13578us; 13623us; 13624us; 13669us; 13714us; 13715us; 13760us; 13805us; 13806us; 13851us; 13896us; 13897us; 13942us; 13987us; 13988us; 14020us; 14052us; 14055us; 14091us; 14121us; 14151us; 14152us; 14158us; 14159us; 14160us; 14205us; 14206us; 14251us; 14252us; 14289us; 14329us; 14369us; 14370us; 14376us; 14412us; 14418us; 14424us; 14427us; 14429us; 14435us; 14441us; 14477us; 14513us; 14515us; 14516us; 14552us; 14588us; 14596us; 14597us; 14599us; 14607us; 14608us; 14612us; 14616us; 14617us; 14620us; 14621us; 14622us; 14623us; 14696us; 14700us; 14701us; 14702us; 14703us; 14704us; 14707us; 14778us; 14779us; 14780us; 14781us; 14782us; 14783us; 14784us; 14874us; 14878us; 14880us; 14882us; 14883us; 14887us; 14888us; 14964us; 14967us; 14968us; 14972us; 14973us; 14974us; 14975us; 14976us; 14978us; 15052us; 15053us; 15055us; 15127us; 15128us; 15200us; 15201us; 15202us; 15273us; 15274us; 15275us; 15276us; 15277us; 15278us; 15279us; 15280us; 15281us; 15282us; 15283us; 15356us; 15360us; 15361us; 15362us; 15364us; 15365us; 15366us; 15439us; 15513us; 15517us; 15518us; 15519us; 15520us; 15521us; 15594us; 15598us; 15599us; 15600us; 15601us; 15602us; 15684us; 15782us; 15880us; 15881us; 15891us; 15892us; 15893us; 15894us; 15895us; 15896us; 15897us; 15898us; 15899us; 15900us; 15902us; 15904us; 15906us; 15910us; 15981us; 15982us; 15983us; 15984us; 15985us; 15990us; 15995us; 15996us; 15998us; 15999us; 16077us; 16083us; 16084us; 16085us; 16086us; 16087us; 16088us; 16089us; 16090us; 16091us; 16092us; 16093us; 16094us; 16167us; 16238us; 16239us; 16310us; 16311us; 16389us; 16390us; 16391us; 16392us; 16463us; 16534us; 16535us; 16536us; 16537us; 16540us; 16544us; 16545us; 16583us; 16585us; 16586us; 16587us; 16588us; 16590us; 16623us; 16627us; 16628us; 16661us; 16662us; 16699us; 16700us; 16731us; 16734us; 16763us; 16764us; 16767us; 16768us; 16769us; 16841us; 16842us; 16845us; 16846us; 16848us; 16920us; 16921us; 16924us; 16925us; 16929us; 16930us; 16933us; 16934us; 16940us; 16942us; 16943us; 16944us; 16947us; 16949us; 16950us; 16951us; 16955us; 16957us; 16959us; 16960us; 16961us; 16963us; 16964us; 16965us; 16974us; 17053us; 17054us; 17055us; 17056us; 17060us; 17062us; 17066us; 17067us; 17070us; 17071us; 17072us; 17073us; 17077us; 17078us; 17081us; 17083us; 17084us; 17088us; 17089us; 17093us; 17094us; 17098us; 17099us; 17103us; 17104us; 17136us; 17145us; 17149us; 17151us; 17152us; 17154us; 17155us; 17156us; 17196us; 17200us; 17201us; 17202us; 17203us; 17204us; 17205us; 17241us; 17243us; 17316us; 17317us; 17318us; 17355us; 17358us; 17432us; 17436us; 17437us; 17438us; 17440us; 17441us; 17442us; 17444us; 17445us; 17447us; 17448us; 17488us; 17489us; 17529us; 17531us; 17532us; 17534us; 17539us; 17541us; 17546us; 17580us; 17581us; 17583us; 17617us; 17618us; 17620us; 17654us; 17655us; 17657us; 17691us; 17692us; 17725us; 17733us; 17765us; 17772us; 17774us; 17776us; 17808us; 17815us; 17823us; 17855us; 17862us; 17864us; 17866us; 17898us; 17905us; 17907us; 17940us; 17941us; 17943us; 17944us; 17953us; 17985us; 17986us; 18018us; 18019us; 18051us; 18052us; 18061us; 18093us; 18094us; 18126us; 18127us; 18129us; 18130us; 18132us; 18134us; 18139us; 18143us; 18144us; 18154us; 18155us; 18157us; 18158us; 18159us; 18193us; 18197us; 18202us; 18203us; 18204us; 18237us; 18238us; 18240us; 18273us; 18274us; 18277us; 18278us; 18281us; 18282us; 18285us; 18286us; 18288us; 18289us; 18291us; 18324us; 18325us; 18327us; 18332us; 18365us; 18366us; 18367us; 18369us; 18373us; 18374us; 18408us; 18412us; 18417us; 18418us; 18420us; 18422us; 18423us; 18454us; 18456us; 18457us; 18458us; 18492us; 18498us; 18505us; 18506us; 18507us; 18509us; 18543us; 18577us; 18583us; 18584us; 18585us; 18586us; 18587us; 18588us; 18589us; 18590us; 18626us; 18627us; 18628us; 18632us; 18633us; 18634us; 18637us; 18641us; 18642us; 18650us; 18651us; 18652us; 18654us; 18655us; 18691us; 18693us; 18733us; 18734us; 18735us; 18736us; 18737us; 18746us; 18747us; 18748us; 18749us; 18750us; 18752us; 18785us; 18786us; 18787us; 18788us; 18797us; 18801us; 18802us; 18804us; 18805us; 18807us; 18808us; 18816us; 18822us; 18823us; 18825us; 18829us; 18830us; 18831us; 18838us; 18839us; 18840us; 18841us; 18842us; 18843us; 18851us; 18859us; 18867us; 18869us; 18870us; 18871us; 18873us; 18875us; 18876us; 18877us; 18878us; 18879us; 18888us; 18889us; 18890us; 18918us; 18922us; 18923us; 18927us; 18928us; 18929us; 18931us; 18937us; 18938us; 18940us; 18944us; 18945us; 18946us; 18947us; 18948us; 18949us; 18950us; 18951us; 18952us; 18953us; 18954us; 18955us; 18956us; 18957us; 18958us; 18959us; 18960us; 18961us; 18962us; 18963us; 18964us; 18965us; 18966us; 18967us; 18968us; 18970us; 18971us; 18973us; 18974us; 18975us; 18977us; 18978us; 18979us; 18980us; 18981us; 18983us; 18984us; 18989us; 18990us; 18991us; 18992us; 18993us; 18994us; 18995us; 18999us; 19000us; 19004us; 19005us; 19007us; 19009us; 19010us; 19011us; 19012us; 19013us; 19014us; 19015us; 19016us; 19017us; 19018us; 19019us; 19020us; 19021us; 19022us; 19023us; 19024us; 19025us; 19026us; 19027us; 19028us; 19029us; 19030us; 19031us; 19032us; 19033us; 19034us; 19035us; 19036us; 19037us; 19038us; 19039us; 19043us; 19047us; 19048us; 19049us; 19050us; 19054us; 19058us; 19059us; 19060us; 19061us; 19065us; 19066us; 19067us; 19068us; 19069us; 19073us; 19074us; 19075us; 19076us; 19080us; 19081us; 19082us; 19083us; 19084us; 19085us; 19086us; 19087us; 19088us; 19089us; 19090us; 19091us; 19092us; 19093us; |]
let _fsyacc_reductionSymbolCounts = [|1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 2us; 3us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 0us; 2us; 1us; 2us; 3us; 2us; 4us; 3us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 3us; 3us; 2us; 1us; 1us; 5us; 5us; 3us; 3us; 2us; 12us; 0us; 2us; 5us; 3us; 5us; 3us; 2us; 3us; 1us; 3us; 2us; 7us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 0us; 3us; 11us; 4us; 4us; 4us; 5us; 5us; 5us; 0us; 2us; 3us; 3us; 1us; 3us; 1us; 1us; 2us; 2us; 3us; 0us; 2us; 3us; 2us; 1us; 2us; 2us; 1us; 3us; 4us; 1us; 4us; 3us; 3us; 1us; 1us; 0us; 5us; 4us; 3us; 1us; 2us; 2us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 5us; 3us; 5us; 2us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 0us; 1us; 2us; 5us; 4us; 4us; 2us; 1us; 3us; 3us; 4us; 6us; 2us; 2us; 2us; 2us; 2us; 1us; 1us; 1us; 3us; 3us; 0us; 1us; 3us; 2us; 8us; 7us; 6us; 2us; 1us; 1us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 2us; 0us; 3us; 2us; 3us; 3us; 1us; 3us; 6us; 5us; 4us; 1us; 2us; 3us; 4us; 5us; 5us; 10us; 3us; 4us; 5us; 5us; 8us; 5us; 6us; 8us; 0us; 2us; 3us; 3us; 1us; 4us; 2us; 0us; 1us; 1us; 1us; 1us; 1us; 0us; 3us; 0us; 3us; 0us; 3us; 5us; 2us; 1us; 0us; 2us; 1us; 0us; 2us; 2us; 3us; 3us; 1us; 3us; 2us; 4us; 4us; 3us; 4us; 1us; 1us; 6us; 3us; 3us; 3us; 5us; 3us; 3us; 3us; 2us; 1us; 3us; 3us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 3us; 3us; 1us; 3us; 3us; 1us; 2us; 5us; 3us; 1us; 0us; 5us; 1us; 0us; 1us; 0us; 0us; 2us; 3us; 1us; 4us; 3us; 3us; 4us; 3us; 5us; 7us; 4us; 4us; 3us; 3us; 1us; 2us; 3us; 1us; 1us; 3us; 1us; 4us; 6us; 6us; 6us; 1us; 3us; 4us; 2us; 4us; 2us; 3us; 4us; 3us; 1us; 3us; 1us; 1us; 1us; 3us; 2us; 2us; 5us; 2us; 1us; 5us; 1us; 3us; 0us; 2us; 2us; 3us; 1us; 2us; 4us; 3us; 1us; 1us; 1us; 1us; 1us; 1us; 8us; 1us; 1us; 0us; 3us; 3us; 2us; 3us; 1us; 4us; 2us; 2us; 2us; 2us; 2us; 2us; 3us; 0us; 2us; 1us; 6us; 6us; 5us; 3us; 3us; 1us; 2us; 2us; 0us; 4us; 3us; 1us; 3us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 4us; 1us; 2us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 1us; 2us; 3us; 2us; 1us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 4us; 4us; 2us; 1us; 3us; 1us; 2us; 3us; 3us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 4us; 3us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 1us; 3us; 3us; 3us; 3us; 2us; 3us; 3us; 0us; 2us; 3us; 3us; 3us; 1us; 3us; 1us; 2us; 1us; 3us; 1us; 2us; 3us; 2us; 1us; 3us; 5us; 1us; 1us; 1us; 6us; 7us; 0us; 3us; 3us; 2us; 2us; 3us; 3us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 4us; 3us; 3us; 2us; 2us; 2us; 1us; 2us; 2us; 1us; 5us; 5us; 5us; 3us; 2us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 5us; 5us; 4us; 3us; 5us; 2us; 4us; 3us; 2us; 2us; 2us; 2us; 8us; 8us; 7us; 5us; 3us; 4us; 2us; 2us; 3us; 3us; 3us; 3us; 3us; 1us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 3us; 1us; 1us; 3us; 2us; 3us; 3us; 1us; 2us; 2us; 1us; 2us; 2us; 4us; 4us; 3us; 2us; 2us; 0us; 2us; 2us; 2us; 4us; 4us; 0us; 2us; 4us; 4us; 3us; 3us; 3us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 2us; 4us; 4us; 2us; 2us; 2us; 1us; 2us; 1us; 2us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 2us; 3us; 1us; 1us; 3us; 3us; 3us; 2us; 4us; 4us; 1us; 1us; 1us; 0us; 1us; 5us; 3us; 3us; 3us; 3us; 3us; 2us; 3us; 1us; 3us; 2us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 3us; 3us; 3us; 2us; 2us; 3us; 3us; 3us; 2us; 2us; 2us; 2us; 2us; 6us; 1us; 1us; 1us; 3us; 3us; 1us; 3us; 3us; 3us; 2us; 2us; 1us; 1us; 1us; 1us; 0us; 1us; 1us; 3us; 5us; 3us; 2us; 3us; 3us; 3us; 2us; 5us; 3us; 1us; 1us; 6us; 2us; 0us; 0us; 1us; 0us; 4us; 0us; 2us; 3us; 6us; 1us; 5us; 1us; 2us; 5us; 5us; 4us; 6us; 1us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 3us; 0us; 3us; 2us; 3us; 1us; 2us; 4us; 3us; 2us; 5us; 4us; 2us; 1us; 0us; 2us; 3us; 3us; 2us; 0us; 2us; 2us; 5us; 2us; 1us; 3us; 3us; 3us; 2us; 2us; 4us; 4us; 5us; 5us; 5us; 4us; 4us; 3us; 2us; 3us; 1us; 3us; 1us; 3us; 0us; 2us; 3us; 1us; 3us; 1us; 3us; 1us; 4us; 5us; 2us; 3us; 4us; 1us; 3us; 1us; 2us; 3us; 2us; 3us; 1us; 3us; 3us; 1us; 1us; 1us; 3us; 1us; 2us; 3us; 2us; 4us; 1us; 3us; 3us; 2us; 3us; 4us; 5us; 4us; 3us; 3us; 0us; 1us; 3us; 4us; 1us; 1us; 1us; 2us; 1us; 1us; 3us; 3us; 6us; 6us; 5us; 4us; 3us; 1us; 1us; 2us; 1us; 1us; 3us; 2us; 3us; 4us; 3us; 1us; 2us; 6us; 6us; 4us; 3us; 3us; 2us; 2us; 1us; 3us; 2us; 1us; 1us; 0us; 3us; 3us; 1us; 1us; 3us; 1us; 3us; 1us; 1us; 2us; 1us; 3us; 3us; 2us; 2us; 1us; 2us; 1us; 1us; 1us; 3us; 3us; 3us; 3us; 1us; 4us; 6us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 1us; 2us; 3us; 1us; 1us; 1us; 1us; 3us; 3us; 1us; 1us; 1us; 1us; 1us; 2us; 2us; 0us; 1us; 1us; 2us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 0us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 0us; 1us; 0us; 2us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 2us; 1us; 1us; 2us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; 1us; |]
let _fsyacc_productionToNonTerminalTable = [|0us; 1us; 2us; 3us; 4us; 5us; 5us; 5us; 6us; 6us; 7us; 7us; 7us; 7us; 7us; 7us; 7us; 8us; 8us; 9us; 10us; 11us; 11us; 12us; 12us; 13us; 14us; 14us; 15us; 16us; 16us; 16us; 17us; 18us; 19us; 19us; 20us; 20us; 21us; 22us; 22us; 23us; 23us; 23us; 23us; 24us; 24us; 24us; 25us; 25us; 25us; 26us; 26us; 26us; 26us; 26us; 26us; 26us; 27us; 28us; 28us; 28us; 29us; 29us; 29us; 30us; 31us; 31us; 32us; 32us; 33us; 33us; 34us; 34us; 34us; 35us; 35us; 35us; 35us; 36us; 36us; 36us; 36us; 37us; 37us; 37us; 38us; 38us; 39us; 40us; 40us; 40us; 40us; 40us; 40us; 40us; 41us; 41us; 41us; 41us; 42us; 42us; 43us; 43us; 43us; 44us; 45us; 45us; 46us; 46us; 46us; 47us; 47us; 48us; 48us; 49us; 50us; 50us; 51us; 51us; 51us; 51us; 52us; 52us; 53us; 53us; 53us; 53us; 53us; 54us; 54us; 54us; 54us; 54us; 55us; 55us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 56us; 57us; 57us; 58us; 58us; 58us; 58us; 58us; 58us; 58us; 59us; 59us; 59us; 60us; 61us; 61us; 62us; 62us; 63us; 63us; 63us; 63us; 64us; 64us; 65us; 65us; 65us; 66us; 66us; 66us; 66us; 67us; 67us; 67us; 67us; 68us; 69us; 69us; 70us; 70us; 70us; 70us; 71us; 71us; 71us; 72us; 72us; 72us; 73us; 73us; 73us; 73us; 74us; 74us; 75us; 75us; 75us; 76us; 76us; 76us; 77us; 78us; 78us; 78us; 79us; 79us; 80us; 81us; 81us; 82us; 82us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 83us; 84us; 85us; 86us; 86us; 87us; 87us; 87us; 87us; 87us; 88us; 88us; 89us; 89us; 89us; 90us; 90us; 91us; 91us; 92us; 92us; 93us; 93us; 93us; 94us; 94us; 95us; 96us; 96us; 97us; 97us; 98us; 98us; 98us; 99us; 99us; 100us; 100us; 100us; 100us; 101us; 101us; 102us; 102us; 102us; 102us; 102us; 103us; 103us; 103us; 104us; 104us; 105us; 105us; 105us; 106us; 107us; 107us; 107us; 108us; 108us; 109us; 109us; 109us; 110us; 110us; 111us; 111us; 112us; 113us; 114us; 114us; 114us; 115us; 116us; 116us; 117us; 117us; 118us; 118us; 119us; 119us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 120us; 121us; 121us; 122us; 122us; 122us; 123us; 124us; 124us; 125us; 125us; 125us; 125us; 126us; 126us; 126us; 127us; 127us; 127us; 128us; 128us; 129us; 129us; 130us; 130us; 131us; 131us; 132us; 132us; 133us; 134us; 135us; 136us; 137us; 138us; 138us; 139us; 139us; 140us; 141us; 141us; 142us; 143us; 144us; 145us; 145us; 145us; 145us; 146us; 146us; 147us; 148us; 148us; 148us; 149us; 149us; 150us; 150us; 151us; 151us; 151us; 151us; 151us; 152us; 152us; 153us; 154us; 154us; 155us; 155us; 156us; 156us; 156us; 157us; 157us; 157us; 158us; 159us; 159us; 160us; 161us; 161us; 162us; 162us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 163us; 164us; 164us; 164us; 164us; 165us; 165us; 166us; 166us; 167us; 167us; 168us; 169us; 169us; 169us; 169us; 170us; 170us; 171us; 171us; 171us; 171us; 171us; 172us; 172us; 172us; 172us; 172us; 172us; 173us; 173us; 174us; 174us; 175us; 175us; 176us; 177us; 177us; 177us; 177us; 177us; 177us; 178us; 178us; 179us; 179us; 179us; 179us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 180us; 181us; 181us; 182us; 182us; 182us; 182us; 182us; 182us; 182us; 182us; 183us; 183us; 184us; 184us; 185us; 185us; 186us; 187us; 187us; 187us; 188us; 188us; 188us; 189us; 189us; 190us; 190us; 191us; 191us; 192us; 193us; 193us; 193us; 193us; 193us; 193us; 194us; 194us; 195us; 195us; 195us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 196us; 197us; 197us; 198us; 198us; 198us; 199us; 199us; 199us; 199us; 200us; 201us; 201us; 201us; 201us; 201us; 202us; 202us; 203us; 204us; 205us; 205us; 205us; 206us; 206us; 206us; 206us; 206us; 206us; 207us; 207us; 207us; 207us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 208us; 209us; 209us; 210us; 210us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 211us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 212us; 213us; 213us; 214us; 214us; 214us; 214us; 214us; 215us; 215us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 216us; 217us; 217us; 217us; 217us; 218us; 218us; 218us; 218us; 219us; 219us; 219us; 219us; 220us; 220us; 220us; 220us; 220us; 220us; 220us; 220us; 220us; 221us; 221us; 221us; 222us; 222us; 223us; 223us; 224us; 224us; 224us; 224us; 224us; 225us; 225us; 225us; 226us; 226us; 227us; 227us; 228us; 228us; 228us; 229us; 230us; 230us; 230us; 230us; 231us; 231us; 232us; 232us; 233us; 234us; 234us; 235us; 235us; 236us; 236us; 237us; 237us; 237us; 238us; 238us; 239us; 239us; 239us; 239us; 239us; 239us; 239us; 240us; 240us; 241us; 241us; 241us; 241us; 242us; 242us; 243us; 243us; 244us; 244us; 244us; 244us; 244us; 245us; 245us; 245us; 246us; 246us; 246us; 247us; 247us; 248us; 248us; 248us; 249us; 250us; 250us; 250us; 251us; 252us; 252us; 253us; 253us; 253us; 253us; 253us; 254us; 254us; 254us; 254us; 254us; 254us; 254us; 254us; 255us; 255us; 256us; 256us; 257us; 257us; 258us; 258us; 259us; 259us; 260us; 260us; 261us; 261us; 262us; 262us; 262us; 262us; 262us; 262us; 263us; 263us; 264us; 265us; 265us; 265us; 265us; 266us; 266us; 266us; 267us; 267us; 268us; 268us; 269us; 269us; 269us; 269us; 269us; 269us; 269us; 270us; 270us; 270us; 270us; 271us; 272us; 272us; 272us; 273us; 273us; 274us; 274us; 275us; 275us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 276us; 277us; 277us; 278us; 278us; 278us; 278us; 278us; 278us; 278us; 279us; 279us; 279us; 280us; 280us; 281us; 282us; 282us; 283us; 283us; 283us; 284us; 284us; 284us; 285us; 285us; 286us; 286us; 286us; 286us; 287us; 287us; 288us; 289us; 290us; 290us; 290us; 290us; 291us; 291us; 291us; 291us; 291us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 292us; 293us; 294us; 294us; 295us; 295us; 296us; 296us; 296us; 296us; 297us; 298us; 298us; 298us; 299us; 299us; 300us; 300us; 301us; 301us; 301us; 301us; 302us; 302us; 302us; 303us; 303us; 303us; 303us; 304us; 304us; 305us; 305us; 306us; 306us; 307us; 307us; 308us; 308us; 309us; 309us; 310us; 310us; 311us; 311us; 312us; 312us; 313us; 313us; 314us; 314us; 315us; 315us; 316us; 316us; 317us; 317us; 318us; 318us; 318us; 319us; 319us; 320us; 320us; 320us; 321us; 321us; 321us; 322us; 322us; 322us; 323us; 324us; 324us; 324us; 325us; 325us; 325us; 326us; 326us; 326us; 326us; 326us; 327us; 327us; 327us; 327us; 327us; 327us; |]
let _fsyacc_immediateActions = [|65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 65535us; 49152us; 16389us; 16390us; 16391us; 16392us; 16393us; 16394us; 65535us; 16395us; 65535us; 16396us; 65535us; 16397us; 65535us; 16398us; 65535us; 16399us; 65535us; 16400us; 65535us; 16402us; 65535us; 65535us; 65535us; 16404us; 65535us; 16406us; 16407us; 16408us; 65535us; 65535us; 65535us; 16411us; 16412us; 65535us; 16413us; 65535us; 16414us; 65535us; 16415us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16419us; 65535us; 16420us; 65535us; 65535us; 16422us; 65535us; 65535us; 65535us; 16423us; 16424us; 16425us; 65535us; 65535us; 65535us; 16426us; 16427us; 65535us; 16428us; 16429us; 65535us; 65535us; 65535us; 16432us; 65535us; 65535us; 16433us; 16435us; 16436us; 65535us; 65535us; 65535us; 65535us; 16437us; 16438us; 16439us; 16440us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16442us; 65535us; 65535us; 65535us; 65535us; 65535us; 16445us; 65535us; 65535us; 16446us; 65535us; 65535us; 65535us; 16447us; 65535us; 65535us; 16448us; 65535us; 16449us; 65535us; 65535us; 16450us; 65535us; 65535us; 16452us; 16453us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16454us; 65535us; 16455us; 16456us; 16457us; 65535us; 65535us; 16458us; 16459us; 65535us; 65535us; 16460us; 16461us; 65535us; 16462us; 65535us; 65535us; 16463us; 16464us; 65535us; 65535us; 16465us; 16466us; 65535us; 65535us; 16467us; 16468us; 16469us; 16470us; 65535us; 65535us; 16472us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16473us; 65535us; 65535us; 65535us; 65535us; 65535us; 16476us; 65535us; 65535us; 16477us; 65535us; 16478us; 65535us; 65535us; 16479us; 65535us; 16481us; 65535us; 65535us; 16482us; 16483us; 65535us; 65535us; 16485us; 16486us; 65535us; 16488us; 65535us; 16489us; 65535us; 65535us; 16490us; 65535us; 16492us; 65535us; 16493us; 65535us; 16494us; 65535us; 16496us; 65535us; 16497us; 65535us; 65535us; 16499us; 65535us; 65535us; 65535us; 16500us; 16501us; 65535us; 65535us; 65535us; 16502us; 16503us; 65535us; 16504us; 16505us; 16506us; 65535us; 65535us; 65535us; 65535us; 16508us; 16511us; 16512us; 65535us; 16513us; 65535us; 16514us; 65535us; 65535us; 65535us; 65535us; 16517us; 16518us; 16519us; 65535us; 65535us; 16520us; 65535us; 16521us; 65535us; 16522us; 65535us; 65535us; 16523us; 16524us; 65535us; 65535us; 16525us; 65535us; 16526us; 16527us; 65535us; 16528us; 65535us; 65535us; 65535us; 16530us; 16531us; 65535us; 16532us; 16533us; 16534us; 16535us; 65535us; 65535us; 65535us; 16537us; 16538us; 16539us; 65535us; 65535us; 16540us; 16541us; 65535us; 16544us; 65535us; 65535us; 65535us; 65535us; 16545us; 65535us; 65535us; 16546us; 16547us; 16548us; 16549us; 65535us; 16550us; 65535us; 65535us; 16551us; 65535us; 65535us; 65535us; 16552us; 65535us; 65535us; 65535us; 65535us; 16553us; 65535us; 16554us; 65535us; 16555us; 65535us; 16556us; 65535us; 16557us; 65535us; 16558us; 16559us; 16560us; 16561us; 65535us; 65535us; 16562us; 65535us; 65535us; 16563us; 65535us; 65535us; 16566us; 16567us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16568us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16569us; 16570us; 65535us; 16571us; 16572us; 16573us; 65535us; 65535us; 16574us; 16575us; 65535us; 65535us; 16576us; 16577us; 65535us; 16578us; 65535us; 65535us; 16579us; 16580us; 65535us; 65535us; 16581us; 16582us; 16583us; 16584us; 65535us; 16585us; 65535us; 65535us; 16587us; 65535us; 16588us; 65535us; 65535us; 16589us; 16590us; 65535us; 65535us; 16592us; 65535us; 65535us; 65535us; 65535us; 65535us; 16593us; 65535us; 65535us; 65535us; 65535us; 16594us; 16595us; 65535us; 16597us; 65535us; 65535us; 65535us; 65535us; 16598us; 16599us; 65535us; 65535us; 16600us; 65535us; 65535us; 16601us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16602us; 16603us; 65535us; 16604us; 65535us; 16605us; 65535us; 16606us; 65535us; 65535us; 65535us; 65535us; 65535us; 16607us; 65535us; 16608us; 65535us; 65535us; 65535us; 65535us; 65535us; 16609us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16610us; 65535us; 16612us; 65535us; 65535us; 16613us; 65535us; 65535us; 16614us; 16615us; 65535us; 65535us; 65535us; 16616us; 16617us; 16619us; 16620us; 16621us; 16622us; 16623us; 65535us; 65535us; 16625us; 65535us; 65535us; 16627us; 65535us; 65535us; 16629us; 65535us; 65535us; 16630us; 16631us; 16632us; 65535us; 16634us; 16635us; 65535us; 16637us; 16638us; 65535us; 65535us; 16639us; 16640us; 16641us; 65535us; 65535us; 16642us; 65535us; 65535us; 65535us; 65535us; 16644us; 65535us; 16645us; 16646us; 65535us; 65535us; 16647us; 16648us; 16649us; 65535us; 65535us; 65535us; 65535us; 65535us; 16650us; 16651us; 16652us; 16653us; 65535us; 65535us; 16654us; 65535us; 65535us; 16655us; 16656us; 65535us; 16657us; 65535us; 16658us; 16659us; 65535us; 65535us; 16660us; 16661us; 65535us; 16662us; 65535us; 65535us; 16663us; 16664us; 16665us; 16666us; 16667us; 16668us; 65535us; 65535us; 65535us; 65535us; 16671us; 16672us; 65535us; 65535us; 16673us; 65535us; 65535us; 65535us; 65535us; 16674us; 16675us; 65535us; 16676us; 65535us; 65535us; 65535us; 16677us; 16678us; 65535us; 65535us; 65535us; 65535us; 16681us; 16682us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16688us; 16689us; 65535us; 65535us; 65535us; 16690us; 65535us; 65535us; 16691us; 65535us; 16692us; 65535us; 16693us; 16694us; 65535us; 65535us; 16695us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16696us; 65535us; 16697us; 16698us; 65535us; 65535us; 65535us; 65535us; 16702us; 65535us; 65535us; 16703us; 65535us; 16705us; 65535us; 65535us; 16706us; 65535us; 65535us; 65535us; 16708us; 65535us; 65535us; 16709us; 65535us; 65535us; 16710us; 65535us; 65535us; 16711us; 16712us; 65535us; 65535us; 16713us; 65535us; 65535us; 16714us; 65535us; 16715us; 65535us; 65535us; 65535us; 16717us; 65535us; 16718us; 65535us; 65535us; 16720us; 65535us; 65535us; 65535us; 65535us; 16724us; 16725us; 65535us; 65535us; 16726us; 16727us; 65535us; 16728us; 65535us; 65535us; 65535us; 65535us; 16729us; 65535us; 16730us; 16731us; 65535us; 65535us; 65535us; 65535us; 16732us; 65535us; 65535us; 16734us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16738us; 16739us; 65535us; 16740us; 65535us; 65535us; 65535us; 16741us; 65535us; 65535us; 16742us; 16743us; 16744us; 16745us; 16746us; 16747us; 16748us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16749us; 65535us; 65535us; 65535us; 16753us; 65535us; 16754us; 65535us; 65535us; 16756us; 65535us; 65535us; 65535us; 65535us; 16758us; 16759us; 16760us; 65535us; 65535us; 16761us; 65535us; 65535us; 16764us; 65535us; 65535us; 16765us; 65535us; 16767us; 16768us; 65535us; 65535us; 65535us; 65535us; 65535us; 16769us; 16770us; 16771us; 65535us; 65535us; 16772us; 16773us; 16774us; 65535us; 65535us; 16776us; 65535us; 65535us; 65535us; 16778us; 65535us; 16779us; 16780us; 65535us; 65535us; 16781us; 16782us; 16783us; 16784us; 16785us; 16786us; 16787us; 16788us; 16789us; 16790us; 16791us; 16792us; 16793us; 16794us; 16795us; 65535us; 16796us; 16797us; 16798us; 16799us; 65535us; 65535us; 16800us; 65535us; 65535us; 65535us; 16801us; 16804us; 65535us; 65535us; 16805us; 16806us; 65535us; 16807us; 65535us; 65535us; 16809us; 65535us; 16811us; 65535us; 16812us; 65535us; 65535us; 65535us; 16813us; 65535us; 65535us; 16816us; 65535us; 65535us; 16817us; 16818us; 16819us; 65535us; 16820us; 16821us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16822us; 65535us; 65535us; 65535us; 65535us; 16827us; 65535us; 65535us; 65535us; 65535us; 65535us; 16832us; 65535us; 16833us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16836us; 65535us; 16837us; 65535us; 16838us; 65535us; 16839us; 16840us; 65535us; 65535us; 16841us; 16842us; 65535us; 16843us; 65535us; 16844us; 65535us; 16845us; 16847us; 65535us; 16848us; 65535us; 65535us; 16849us; 65535us; 65535us; 16850us; 65535us; 65535us; 16851us; 65535us; 65535us; 16853us; 16854us; 16855us; 16856us; 16857us; 16858us; 65535us; 65535us; 16859us; 16860us; 65535us; 65535us; 16862us; 65535us; 65535us; 65535us; 16863us; 16864us; 65535us; 16865us; 16866us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16869us; 65535us; 65535us; 65535us; 65535us; 16873us; 65535us; 65535us; 16876us; 65535us; 65535us; 65535us; 65535us; 65535us; 16881us; 65535us; 16882us; 65535us; 65535us; 16885us; 65535us; 16886us; 65535us; 65535us; 16887us; 16888us; 16889us; 65535us; 65535us; 16890us; 65535us; 65535us; 16892us; 65535us; 65535us; 16894us; 65535us; 16896us; 65535us; 65535us; 65535us; 65535us; 16897us; 65535us; 16900us; 65535us; 65535us; 65535us; 16901us; 65535us; 16903us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16904us; 65535us; 65535us; 65535us; 65535us; 16905us; 65535us; 65535us; 65535us; 65535us; 65535us; 16906us; 65535us; 65535us; 16908us; 16909us; 65535us; 16910us; 16911us; 65535us; 16912us; 16913us; 16914us; 16915us; 16916us; 65535us; 65535us; 16917us; 16918us; 65535us; 65535us; 16919us; 16920us; 65535us; 65535us; 16921us; 16922us; 65535us; 16923us; 65535us; 65535us; 16924us; 16925us; 16926us; 65535us; 65535us; 65535us; 65535us; 65535us; 16930us; 65535us; 16931us; 65535us; 65535us; 65535us; 65535us; 16933us; 16934us; 65535us; 16935us; 16936us; 16937us; 16938us; 65535us; 65535us; 65535us; 65535us; 16939us; 16940us; 16941us; 16942us; 16943us; 65535us; 65535us; 65535us; 16944us; 16945us; 16946us; 16947us; 16948us; 65535us; 65535us; 16949us; 16950us; 16951us; 65535us; 65535us; 65535us; 65535us; 65535us; 16955us; 16956us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16957us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16958us; 16959us; 65535us; 65535us; 65535us; 65535us; 16960us; 65535us; 65535us; 16961us; 65535us; 16962us; 65535us; 65535us; 65535us; 16964us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16965us; 65535us; 16966us; 65535us; 16967us; 65535us; 65535us; 65535us; 16969us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16982us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 16992us; 16993us; 16994us; 16995us; 16996us; 16997us; 16998us; 16999us; 17000us; 17001us; 17002us; 17003us; 17004us; 17005us; 17006us; 17007us; 17008us; 17009us; 17010us; 17011us; 17013us; 65535us; 65535us; 17014us; 65535us; 17015us; 65535us; 65535us; 17016us; 17017us; 17018us; 65535us; 17019us; 17020us; 17021us; 17022us; 65535us; 65535us; 65535us; 17024us; 17025us; 17026us; 17027us; 65535us; 65535us; 17030us; 65535us; 17031us; 65535us; 65535us; 65535us; 65535us; 17033us; 17034us; 65535us; 65535us; 65535us; 65535us; 17037us; 17038us; 65535us; 17039us; 17040us; 65535us; 17042us; 65535us; 17043us; 65535us; 65535us; 17045us; 65535us; 65535us; 17046us; 65535us; 65535us; 17047us; 65535us; 65535us; 17048us; 65535us; 65535us; 17049us; 65535us; 65535us; 17050us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17051us; 65535us; 17052us; 17053us; 65535us; 17054us; 65535us; 17055us; 65535us; 65535us; 65535us; 17057us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17063us; 65535us; 65535us; 65535us; 17065us; 65535us; 65535us; 17066us; 65535us; 65535us; 17067us; 65535us; 17068us; 17069us; 17070us; 65535us; 65535us; 17071us; 17072us; 17073us; 17074us; 65535us; 65535us; 17075us; 17076us; 17077us; 17078us; 17079us; 17081us; 65535us; 65535us; 65535us; 65535us; 17082us; 65535us; 17083us; 65535us; 65535us; 17084us; 65535us; 17085us; 17086us; 17087us; 17088us; 65535us; 65535us; 17089us; 65535us; 65535us; 17091us; 65535us; 17093us; 17094us; 65535us; 17098us; 17099us; 17100us; 17101us; 17102us; 17103us; 17104us; 17105us; 17106us; 17107us; 65535us; 65535us; 17108us; 17109us; 65535us; 17110us; 17111us; 65535us; 65535us; 65535us; 17112us; 17113us; 17114us; 17115us; 65535us; 65535us; 17116us; 17117us; 17118us; 17119us; 65535us; 65535us; 65535us; 17120us; 65535us; 17121us; 17122us; 17123us; 65535us; 17124us; 17125us; 17126us; 17127us; 17128us; 65535us; 65535us; 65535us; 65535us; 65535us; 17129us; 17130us; 17131us; 17132us; 65535us; 65535us; 17133us; 65535us; 17134us; 65535us; 65535us; 17136us; 17137us; 17138us; 17139us; 17140us; 17141us; 17142us; 17143us; 17144us; 17146us; 17147us; 65535us; 65535us; 17150us; 65535us; 17151us; 65535us; 17153us; 17154us; 17155us; 65535us; 65535us; 17157us; 17158us; 17159us; 65535us; 65535us; 65535us; 65535us; 65535us; 17160us; 17161us; 17164us; 65535us; 65535us; 65535us; 17166us; 65535us; 17168us; 65535us; 17169us; 65535us; 65535us; 65535us; 65535us; 65535us; 17170us; 17171us; 65535us; 65535us; 65535us; 17172us; 65535us; 65535us; 65535us; 65535us; 17175us; 65535us; 65535us; 65535us; 17176us; 65535us; 65535us; 17177us; 65535us; 65535us; 65535us; 17178us; 17179us; 65535us; 65535us; 65535us; 17183us; 17184us; 65535us; 17186us; 17187us; 65535us; 65535us; 17189us; 17191us; 17193us; 65535us; 65535us; 65535us; 17194us; 65535us; 17195us; 17197us; 17200us; 65535us; 17202us; 65535us; 65535us; 17203us; 65535us; 17204us; 65535us; 17205us; 65535us; 17207us; 65535us; 17208us; 65535us; 65535us; 65535us; 65535us; 17209us; 65535us; 17210us; 17211us; 65535us; 65535us; 17212us; 17213us; 17214us; 17215us; 17216us; 65535us; 65535us; 65535us; 17217us; 17218us; 65535us; 65535us; 65535us; 65535us; 17219us; 17220us; 65535us; 17221us; 17222us; 65535us; 17223us; 65535us; 17224us; 65535us; 17225us; 65535us; 65535us; 17226us; 65535us; 65535us; 65535us; 65535us; 65535us; 17232us; 65535us; 65535us; 17233us; 65535us; 65535us; 17235us; 65535us; 65535us; 17237us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17245us; 65535us; 17247us; 65535us; 65535us; 17248us; 65535us; 17249us; 65535us; 17250us; 65535us; 65535us; 17252us; 65535us; 17253us; 65535us; 17256us; 65535us; 65535us; 65535us; 65535us; 17257us; 65535us; 17259us; 65535us; 17260us; 17261us; 65535us; 65535us; 65535us; 17262us; 17263us; 65535us; 17264us; 65535us; 65535us; 17265us; 65535us; 17266us; 65535us; 17267us; 65535us; 17268us; 65535us; 17269us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17271us; 17272us; 65535us; 65535us; 17275us; 65535us; 65535us; 65535us; 17276us; 65535us; 65535us; 17279us; 65535us; 65535us; 17281us; 17282us; 65535us; 65535us; 65535us; 17283us; 17284us; 65535us; 65535us; 65535us; 65535us; 17285us; 17286us; 17287us; 17288us; 17289us; 17290us; 17291us; 65535us; 17293us; 17294us; 65535us; 17295us; 17296us; 65535us; 65535us; 17298us; 65535us; 17299us; 17300us; 65535us; 17301us; 65535us; 65535us; 65535us; 65535us; 17302us; 17303us; 17304us; 65535us; 17305us; 17306us; 17307us; 17308us; 65535us; 65535us; 17310us; 17312us; 17313us; 65535us; 65535us; 17315us; 65535us; 17316us; 65535us; 17318us; 65535us; 65535us; 17319us; 65535us; 65535us; 17321us; 17322us; 65535us; 17324us; 17325us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 65535us; 17329us; 17330us; 65535us; 65535us; 17331us; 17332us; 17333us; 17334us; 65535us; 17335us; 17336us; 65535us; 65535us; 17337us; 65535us; 17338us; 17339us; 65535us; 65535us; 17340us; 65535us; 65535us; 17341us; 17342us; 17343us; 17344us; 17345us; 17346us; 17347us; 17348us; 17349us; 17350us; 17351us; 17352us; 17353us; 17354us; 17355us; 17356us; 17357us; 17358us; 17359us; 17360us; 17361us; 17362us; 17363us; 17364us; 65535us; 17366us; 65535us; 17367us; 17368us; 65535us; 17369us; 17370us; 17371us; 17372us; 65535us; 17374us; 65535us; 17375us; 17376us; 17377us; 17378us; 17379us; 17380us; 65535us; 17382us; 65535us; 17383us; 65535us; 65535us; 17387us; 17388us; 17389us; 17390us; 17391us; 17392us; 17393us; 17394us; 17396us; 17398us; 17400us; 17402us; 17404us; 17408us; 17410us; 17412us; 17413us; 17414us; 17415us; 17416us; 17417us; 17418us; 17419us; 17420us; 17421us; 17422us; 17423us; 17424us; 17425us; 17427us; 65535us; 65535us; 17429us; 17430us; 17431us; 65535us; 65535us; 17432us; 17433us; 17434us; 65535us; 17435us; 17436us; 17437us; 17438us; 65535us; 17439us; 17440us; 17441us; 65535us; 17442us; 17443us; 17444us; 17445us; 17446us; 17447us; 17448us; 17449us; 17450us; 17451us; 17452us; 17453us; 17454us; 17455us; |]
let _fsyacc_reductions ()  =    [| 
# 2791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.ParsedSigFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startsignatureFile));
# 2800 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.ParsedImplFile)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startimplementationFile));
# 2809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.ParsedFsiInteraction)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_startinteraction));
# 2818 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypedSeqExprEOF));
# 2827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
                      raise (Internal.Utilities.Text.Parsing.Accept(Microsoft.FSharp.Core.Operators.box _1))
                   )
                 : '_starttypEOF));
# 2836 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 497 "../pars.fsy"
                            IDefns (_1, lhs parseState) 
                   )
# 497 "../pars.fsy"
                 : SyntaxTree.ParsedFsiInteraction));
# 2847 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 500 "../pars.fsy"
                            warning(Error(FSComp.SR.parsUnexpectedSemicolon(), rhs parseState 1))
                            IDefns ([], lhs parseState) 
                   )
# 500 "../pars.fsy"
                 : SyntaxTree.ParsedFsiInteraction));
# 2858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 504 "../pars.fsy"
                            IDefns ([], lhs parseState) 
                   )
# 504 "../pars.fsy"
                 : SyntaxTree.ParsedFsiInteraction));
# 2868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 508 "../pars.fsy"
                                              
                   )
# 508 "../pars.fsy"
                 : 'interactiveTerminator));
# 2878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 509 "../pars.fsy"
                                   checkEndOfFileError _1 
                   )
# 509 "../pars.fsy"
                 : 'interactiveTerminator));
# 2889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 523 "../pars.fsy"
                            [] 
                   )
# 523 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 526 "../pars.fsy"
                            _1 
                   )
# 526 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2912 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 529 "../pars.fsy"
                            _1 
                   )
# 529 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 532 "../pars.fsy"
                            _1 
                   )
# 532 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 535 "../pars.fsy"
                            _1 @ _3 
                   )
# 535 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2949 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 538 "../pars.fsy"
                            _1 @ _3 
                   )
# 538 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveHash)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveItemsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 541 "../pars.fsy"
                            _1 @ _3 
                   )
# 541 "../pars.fsy"
                 : 'interactiveItemsTerminator));
# 2975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 547 "../pars.fsy"
                             _1 
                   )
# 547 "../pars.fsy"
                 : 'interactiveDefns));
# 2986 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 550 "../pars.fsy"
                             _1 @ _2 
                   )
# 550 "../pars.fsy"
                 : 'interactiveDefns));
# 2998 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 556 "../pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] in 
                             attrDecls @ [ mkSynDoDecl(_3)] 
                   )
# 556 "../pars.fsy"
                 : 'interactiveExpr));
# 3015 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 566 "../pars.fsy"
                             [SynModuleDecl.HashDirective(_1, rhs parseState 1)] 
                   )
# 566 "../pars.fsy"
                 : 'interactiveHash));
# 3026 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 571 "../pars.fsy"
                                                
                   )
# 571 "../pars.fsy"
                 : 'interactiveSeparators));
# 3037 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'interactiveSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 573 "../pars.fsy"
                                                                      
                   )
# 573 "../pars.fsy"
                 : 'interactiveSeparators));
# 3049 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 577 "../pars.fsy"
                                     
                   )
# 577 "../pars.fsy"
                 : 'interactiveSeparator));
# 3059 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 578 "../pars.fsy"
                                     
                   )
# 578 "../pars.fsy"
                 : 'interactiveSeparator));
# 3069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 587 "../pars.fsy"
                            ParsedHashDirective (_2, _3, lhs parseState) 
                   )
# 587 "../pars.fsy"
                 : 'hashDirective));
# 3081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 593 "../pars.fsy"
                            [] 
                   )
# 593 "../pars.fsy"
                 : 'hashDirectiveArgs));
# 3091 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArgs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirectiveArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 596 "../pars.fsy"
                            _1 @ [_2] 
                   )
# 596 "../pars.fsy"
                 : 'hashDirectiveArgs));
# 3103 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 602 "../pars.fsy"
                             _1 
                   )
# 602 "../pars.fsy"
                 : 'hashDirectiveArg));
# 3114 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 611 "../pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 611 "../pars.fsy"
                 : SyntaxTree.ParsedSigFile));
# 3126 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 614 "../pars.fsy"
                            _1 
                   )
# 614 "../pars.fsy"
                 : SyntaxTree.ParsedSigFile));
# 3138 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 620 "../pars.fsy"
                            let emptySigFileFrag = ParsedSigFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedSigFile ([], [emptySigFileFrag]) 
                   )
# 620 "../pars.fsy"
                 : SyntaxTree.ParsedSigFile));
# 3150 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 628 "../pars.fsy"
                             _3, _4.Lid, grabXmlDoc(parseState, 1), _2 
                   )
# 628 "../pars.fsy"
                 : 'moduleIntro));
# 3164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 634 "../pars.fsy"
                             _2, _3.Lid, grabXmlDoc(parseState, 1)  
                   )
# 634 "../pars.fsy"
                 : 'namespaceIntro));
# 3176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 640 "../pars.fsy"
                             ParsedSigFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
# 640 "../pars.fsy"
                 : 'fileNamespaceSpecs));
# 3187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 643 "../pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedSigFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedSigFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleSigDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedSigFile (decls, _2) 
                   )
# 643 "../pars.fsy"
                 : 'fileNamespaceSpecs));
# 3212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpecList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 661 "../pars.fsy"
                            _1 :: _2 
                   )
# 661 "../pars.fsy"
                 : 'fileNamespaceSpecList));
# 3224 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 664 "../pars.fsy"
                            [_1] 
                   )
# 664 "../pars.fsy"
                 : 'fileNamespaceSpecList));
# 3235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 668 "../pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
# 668 "../pars.fsy"
                 : 'fileNamespaceSpec));
# 3248 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 674 "../pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let m = (rhs2 parseState 1 4)
                           let isRec, path2, xml, vis = _3 
                           (fun (isRec2, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedSigFileFragment.NamedModule(SynModuleOrNamespaceSig(lid, (isRec || isRec2), NamedModule, _4, xml, _1, vis, m)))  
                   )
# 674 "../pars.fsy"
                 : 'fileModuleSpec));
# 3269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmptyBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 684 "../pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedSigFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedSigFileFragment.NamespaceFragment(path, isRec, DeclaredNamespace, _1, xml, [], m))  
                   )
# 684 "../pars.fsy"
                 : 'fileModuleSpec));
# 3284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 693 "../pars.fsy"
                             _1 
                   )
# 693 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 696 "../pars.fsy"
                             _2 
                   )
# 696 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3308 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 699 "../pars.fsy"
                              // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                              // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                              _2 
                            
                   )
# 699 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 705 "../pars.fsy"
                              [] 
                   )
# 705 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmptyBlock));
# 3334 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 710 "../pars.fsy"
                             _1 
                   )
# 710 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3345 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 713 "../pars.fsy"
                             [] 
                   )
# 713 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3355 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 716 "../pars.fsy"
                             [] 
                   )
# 716 "../pars.fsy"
                 : 'moduleSpfnsPossiblyEmpty));
# 3365 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 721 "../pars.fsy"
                            _1 :: _3 
                   )
# 721 "../pars.fsy"
                 : 'moduleSpfns));
# 3378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 724 "../pars.fsy"
                            (* silent recovery *) _3 
                   )
# 724 "../pars.fsy"
                 : 'moduleSpfns));
# 3390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 727 "../pars.fsy"
                            [_1] 
                   )
# 727 "../pars.fsy"
                 : 'moduleSpfns));
# 3402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 732 "../pars.fsy"
                             SynModuleSigDecl.HashDirective (_1, rhs2 parseState 1 1)  
                   )
# 732 "../pars.fsy"
                 : 'moduleSpfn));
# 3413 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'valSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 735 "../pars.fsy"
                             _1 
                   )
# 735 "../pars.fsy"
                 : 'moduleSpfn));
# 3424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleAbbrevBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 738 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let isRec, path, xml, vis = _3 
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                             if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                             match vis with
                             | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreVisibilityOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                             | _ -> SynModuleSigDecl.ModuleAbbrev(List.head path, _5, rhs2 parseState 1 5) 
                   )
# 738 "../pars.fsy"
                 : 'moduleSpfn));
# 3446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'colonOrEquals)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpecBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 748 "../pars.fsy"
                             let isRec, path, xml, vis = _3 
                             if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleDefnMustBeSimpleName())
                             if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                             let info = ComponentInfo(_1, [], [], path, xml, false, vis, rhs parseState 3)
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             SynModuleSigDecl.NestedModule(info, isRec, _5, rhs2 parseState 1 5) 
                   )
# 748 "../pars.fsy"
                 : 'moduleSpfn));
# 3466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypeDefnSig list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 756 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (TypeDefnSig(ComponentInfo(cas, a, cs, b, c, d, d2, d3), e, f, g)), rest = 
                                match _3 with
                                | [] -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEmptyModuleDefn()) 
                                | h :: t -> h, t 
                             let tc = (TypeDefnSig(ComponentInfo(_1@cas, a, cs, b, c, d, d2, d3), e, f, g))in 
                             SynModuleSigDecl.Types (tc :: rest, rhs parseState 3) 
                   )
# 756 "../pars.fsy"
                 : 'moduleSpfn));
# 3485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 765 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionSig(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3 
                             let ec = (SynExceptionSig(SynExceptionDefnRepr(_1@cas, a, b, c, d, d2), e, f)) 
                             SynModuleSigDecl.Exception(ec, rhs parseState 3) 
                   )
# 765 "../pars.fsy"
                 : 'moduleSpfn));
# 3501 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 771 "../pars.fsy"
                             SynModuleSigDecl.Open (_2.Lid, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 771 "../pars.fsy"
                 : 'moduleSpfn));
# 3512 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _12 = (let data = parseState.GetInput(12) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 775 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attr1, attr2, isInline, isMutable, vis2, id, doc, explicitValTyparDecls, (ty, arity), konst = (_1), (_4), (_5), (_6), (_7), (_8), grabXmlDoc(parseState, 3), (_9), (_11), (_12) 
                             if not (isNil attr2) then errorR(Deprecated(FSComp.SR.parsAttributesMustComeBeforeVal(), rhs parseState 4))
                             let m = rhs2 parseState 1 11 
                             let valSpfn = ValSpfn((attr1@attr2), id, explicitValTyparDecls, ty, arity, isInline, isMutable, doc, vis2, konst, m) 
                             SynModuleSigDecl.Val(valSpfn, m)
                           
                   )
# 775 "../pars.fsy"
                 : 'valSpfn));
# 3538 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 786 "../pars.fsy"
                             None 
                   )
# 786 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 789 "../pars.fsy"
                             Some(_2) 
                   )
# 789 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 792 "../pars.fsy"
                             Some(_3) 
                   )
# 792 "../pars.fsy"
                 : 'optLiteralValueSpfn));
# 3572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfns)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 800 "../pars.fsy"
                             _2 
                   )
# 800 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 804 "../pars.fsy"
                             _3 
                   )
# 804 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3597 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'sigOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleSpfnsPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 808 "../pars.fsy"
                             _2 
                   )
# 808 "../pars.fsy"
                 : 'moduleSpecBlock));
# 3609 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 814 "../pars.fsy"
                            _2 
                   )
# 814 "../pars.fsy"
                 : SyntaxTree.SynTypeDefnSig list));
# 3621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 819 "../pars.fsy"
                            _1 :: _3 
                   )
# 819 "../pars.fsy"
                 : 'tyconSpfnList));
# 3633 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 822 "../pars.fsy"
                            [_1] 
                   )
# 822 "../pars.fsy"
                 : 'tyconSpfnList));
# 3644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 828 "../pars.fsy"
                             let lhsm = rhs parseState 1 
                             _3 lhsm _1 
                   )
# 828 "../pars.fsy"
                 : 'tyconSpfn));
# 3657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 831 "../pars.fsy"
                             TypeDefnSig(_1, SynTypeDefnSigRepr.Simple (SynTypeDefnSimpleRepr.None (lhs parseState), lhs parseState), _2, lhs parseState) 
                   )
# 831 "../pars.fsy"
                 : 'tyconSpfn));
# 3669 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 845 "../pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _2 lhsm nameInfo (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 845 "../pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 850 "../pars.fsy"
                            let m = lhs parseState 
                            (fun lhsm nameInfo -> 
                                _1 lhsm nameInfo _2) 
                   )
# 850 "../pars.fsy"
                 : 'tyconSpfnRhsBlock));
# 3701 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 858 "../pars.fsy"
                            let m = _1.Range 
                            (fun lhsm nameInfo augmentation -> 
                                TypeDefnSig(nameInfo, SynTypeDefnSigRepr.Simple (_1, m), augmentation, m)) 
                   )
# 858 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 863 "../pars.fsy"
                            let m = lhs parseState 
                            let needsCheck, (kind, decls) = _1
                            (fun nameRange nameInfo augmentation -> 
                                if needsCheck && isNil decls then
                                   reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                TypeDefnSig(nameInfo, SynTypeDefnSigRepr.ObjectModel (kind, decls, m), augmentation, m)) 
                   )
# 863 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3730 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 871 "../pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            let invoke = SynMemberSig.Member(ValSpfn([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m), AbstractMemberFlags MemberKind.Member, m) 
                            (fun nameRange nameInfo augmentation -> 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                TypeDefnSig(nameInfo, SynTypeDefnSigRepr.ObjectModel (TyconDelegate (ty, arity), [invoke], m), [], m)) 
                   )
# 871 "../pars.fsy"
                 : 'tyconSpfnRhs));
# 3746 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 882 "../pars.fsy"
                            let needsCheck, decls = _1 
                            needsCheck, (TyconUnspecified, decls) 
                   )
# 882 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3758 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 886 "../pars.fsy"
                            false, (_1, _2) 
                   )
# 886 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 889 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            false, (_1, _2) 
                   )
# 889 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 893 "../pars.fsy"
                            // silent recovery 
                            false, (_1, []) 
                   )
# 893 "../pars.fsy"
                 : 'tyconClassSpfn));
# 3796 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 900 "../pars.fsy"
                            true, _2 
                   )
# 900 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 903 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                            false, _2 
                   )
# 903 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 908 "../pars.fsy"
                            false, _2 
                   )
# 908 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3832 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 911 "../pars.fsy"
                            false, _2 
                   )
# 911 "../pars.fsy"
                 : 'classSpfnBlockKindUnspecified));
# 3844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 917 "../pars.fsy"
                             _2 
                   )
# 917 "../pars.fsy"
                 : 'classSpfnBlock));
# 3856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 920 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeSignature())
                             _2 
                   )
# 920 "../pars.fsy"
                 : 'classSpfnBlock));
# 3869 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 923 "../pars.fsy"
                             _1 
                   )
# 923 "../pars.fsy"
                 : 'classSpfnBlock));
# 3880 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 928 "../pars.fsy"
                            _1 
                   )
# 928 "../pars.fsy"
                 : 'classSpfnMembers));
# 3891 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 931 "../pars.fsy"
                            [] 
                   )
# 931 "../pars.fsy"
                 : 'classSpfnMembers));
# 3901 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 937 "../pars.fsy"
                            _1 :: _3 
                   )
# 937 "../pars.fsy"
                 : 'classSpfnMembersAtLeastOne));
# 3914 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberSpecFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _11 = (let data = parseState.GetInput(11) in (Microsoft.FSharp.Core.Operators.unbox data : 'optLiteralValueSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 943 "../pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isInline, doc, vis2, id, explicitValTyparDecls, (ty, arity), optLiteralValue = _4, grabXmlDoc(parseState, 3), _5, _6, _7, _9, _11
                            let getSetRangeOpt, getSet = _10 
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 3 
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            let valSpfn = ValSpfn(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, vis2, optLiteralValue, wholeRange)
                            let _, flags = _3 
                            SynMemberSig.Member(valSpfn, flags (getSetAdjuster arity), wholeRange) 
                   )
# 943 "../pars.fsy"
                 : 'classMemberSpfn));
# 3945 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 957 "../pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Interface (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 957 "../pars.fsy"
                 : 'classMemberSpfn));
# 3960 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 961 "../pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.Inherit (_4, unionRanges (rhs parseState 3) (_4).Range) 
                   )
# 961 "../pars.fsy"
                 : 'classMemberSpfn));
# 3974 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 965 "../pars.fsy"
                            let wholeRange = rhs2 parseState 1 4
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let fld = _4 _1 false wholeRange 
                            SynMemberSig.ValField (fld, wholeRange) 
                   )
# 965 "../pars.fsy"
                 : 'classMemberSpfn));
# 3990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 971 "../pars.fsy"
                            let wholeRange = rhs2 parseState 1 5
                            if Option.isSome _2 then errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            SynMemberSig.ValField(_5 _1 true wholeRange, wholeRange) 
                   )
# 971 "../pars.fsy"
                 : 'classMemberSpfn));
# 4005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 976 "../pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            SynMemberSig.NestedType(_5, rhs2 parseState 1 5) 
                   )
# 976 "../pars.fsy"
                 : 'classMemberSpfn));
# 4020 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 980 "../pars.fsy"
                            let vis, doc, (ty, valSynInfo) = _2, grabXmlDoc(parseState, 3), _5 
                            let m = unionRanges (rhs parseState 1) ty.Range 
                            let isInline = false 
                            let valSpfn = ValSpfn (_1, mkSynId (rhs parseState 3) "new", noInferredTypars, ty, valSynInfo, isInline, false, doc, vis, None, m)
                            SynMemberSig.Member(valSpfn, CtorMemberFlags, m) 
                   )
# 980 "../pars.fsy"
                 : 'classMemberSpfn));
# 4037 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 990 "../pars.fsy"
                           None, MemberKind.Member 
                   )
# 990 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 993 "../pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 993 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 996 "../pars.fsy"
                           Some (rhs2 parseState 1 2), _2 
                   )
# 996 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 999 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            Some (rhs2 parseState 1 2), _2 
                   )
# 999 "../pars.fsy"
                 : 'classMemberSpfnGetSet));
# 4081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1006 "../pars.fsy"
                           (let (id:Ident) = _1 
                            if id.idText = "get" then MemberKind.PropertyGet 
                            else if id.idText = "set" then MemberKind.PropertySet 
                            else raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsGetOrSetRequired())) 
                   )
# 1006 "../pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4095 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1012 "../pars.fsy"
                           let (id:Ident) = _1 
                           if not ((id.idText = "get" && _3.idText = "set") ||
                                   (id.idText = "set" && _3.idText = "get")) then 
                              raiseParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsGetOrSetRequired())
                           MemberKind.PropertyGetSet 
                   )
# 1012 "../pars.fsy"
                 : 'classMemberSpfnGetSetElements));
# 4111 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1019 "../pars.fsy"
                                       _1 
                   )
# 1019 "../pars.fsy"
                 : 'memberSpecFlags));
# 4122 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1020 "../pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
# 1020 "../pars.fsy"
                 : 'memberSpecFlags));
# 4132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1021 "../pars.fsy"
                                           (false, AbstractMemberFlags) 
                   )
# 1021 "../pars.fsy"
                 : 'memberSpecFlags));
# 4142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classSpfn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1027 "../pars.fsy"
                            SynExceptionSig(_1, _2, lhs parseState) 
                   )
# 1027 "../pars.fsy"
                 : 'exconSpfn));
# 4154 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classSpfnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1033 "../pars.fsy"
                            _2 
                   )
# 1033 "../pars.fsy"
                 : 'opt_classSpfn));
# 4166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1036 "../pars.fsy"
                            [] 
                   )
# 1036 "../pars.fsy"
                 : 'opt_classSpfn));
# 4176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1045 "../pars.fsy"
                            checkEndOfFileError _2; _1 
                   )
# 1045 "../pars.fsy"
                 : SyntaxTree.ParsedImplFile));
# 4188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1048 "../pars.fsy"
                            _1 
                   )
# 1048 "../pars.fsy"
                 : SyntaxTree.ParsedImplFile));
# 4200 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1054 "../pars.fsy"
                            let emptyImplFileFrag = ParsedImplFileFragment.AnonModule([], rhs parseState 1) in 
                            ParsedImplFile ([], [emptyImplFileFrag]) 
                   )
# 1054 "../pars.fsy"
                 : SyntaxTree.ParsedImplFile));
# 4212 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1061 "../pars.fsy"
                             ParsedImplFile ([], [ (_1 (false, [], PreXmlDoc.Empty)) ]) 
                   )
# 1061 "../pars.fsy"
                 : 'fileNamespaceImpls));
# 4223 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1064 "../pars.fsy"
                             // If there are namespaces, the first fileModuleImpl may only contain # directives 
                             let decls = 
                                 match (_1 (false, [], PreXmlDoc.Empty)) with 
                                 | ParsedImplFileFragment.AnonModule(decls, m) -> decls  
                                 | ParsedImplFileFragment.NamespaceFragment(_, _, _, decls, _, _, _) -> decls 
                                 | ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(_, _, _, _, _, _, _, m)) ->
                                     raiseParseErrorAt m (FSComp.SR.parsOnlyHashDirectivesAllowed())
                             let decls = 
                                 decls |> List.collect (function 
                                     | (SynModuleDecl.HashDirective (hd, _)) -> [hd]
                                     | d ->  
                                          reportParseErrorAt d.Range (FSComp.SR.parsOnlyHashDirectivesAllowed())
                                          [])
                             ParsedImplFile (decls, _2) 
                   )
# 1064 "../pars.fsy"
                 : 'fileNamespaceImpls));
# 4248 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImplList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1083 "../pars.fsy"
                            _1 :: _2 
                   )
# 1083 "../pars.fsy"
                 : 'fileNamespaceImplList));
# 4260 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileNamespaceImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1086 "../pars.fsy"
                            [_1] 
                   )
# 1086 "../pars.fsy"
                 : 'fileNamespaceImplList));
# 4271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namespaceIntro)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'deprecated_opt_equals)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'fileModuleImpl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1092 "../pars.fsy"
                            let isRec, path, xml = _1 in (_3 (isRec, path, xml)) 
                   )
# 1092 "../pars.fsy"
                 : 'fileNamespaceImpl));
# 4284 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1098 "../pars.fsy"
                           if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                           let m2 = rhs parseState 3
                           let m = (m2, _4) ||> unionRangeWithListBy (fun modu -> modu.Range)
                           let isRec2, path2, xml, vis = _3 
                           (fun (isRec, path, _) -> 
                             if not (isNil path) then errorR(Error(FSComp.SR.parsNamespaceOrModuleNotBoth(), m2))
                             let lid = path@path2 
                             ParsedImplFileFragment.NamedModule(SynModuleOrNamespace(lid, (isRec || isRec2), NamedModule, _4, xml, _1, vis, m))) 
                   )
# 1098 "../pars.fsy"
                 : 'fileModuleImpl));
# 4305 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynModuleDecl list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1108 "../pars.fsy"
                           let m = (rhs parseState 1) 
                           (fun (isRec, path, xml) -> 
                             match path with 
                             | [] -> ParsedImplFileFragment.AnonModule(_1, m)  
                             | _ -> ParsedImplFileFragment.NamespaceFragment(path, isRec, DeclaredNamespace, _1, xml, [], m)) 
                   )
# 1108 "../pars.fsy"
                 : 'fileModuleImpl));
# 4320 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1118 "../pars.fsy"
                            _2 
                   )
# 1118 "../pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
# 4333 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1121 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            _2 
                   )
# 1121 "../pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
# 4347 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1126 "../pars.fsy"
                            []  
                   )
# 1126 "../pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
# 4358 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1129 "../pars.fsy"
                            _1 
                   )
# 1129 "../pars.fsy"
                 : SyntaxTree.SynModuleDecl list));
# 4369 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1135 "../pars.fsy"
                            _1 
                   )
# 1135 "../pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4380 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1138 "../pars.fsy"
                            [] 
                   )
# 1138 "../pars.fsy"
                 : 'moduleDefnsOrExprPossiblyEmpty));
# 4390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1145 "../pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ mkSynDoDecl (_3) :: _5 
                   )
# 1145 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1152 "../pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1152 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4427 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1159 "../pars.fsy"
                             match _2 with
                             | Some vis -> errorR(Error(FSComp.SR.parsUnexpectedVisibilityDeclaration(vis.ToString()), rhs parseState 3))
                             | _ -> ()
                             let attrDecls = if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                             attrDecls @ [ mkSynDoDecl(_3) ] 
                   )
# 1159 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1166 "../pars.fsy"
                             _1 
                   )
# 1166 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4455 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1169 "../pars.fsy"
                            if not (isNil _1) then [ SynModuleDecl.Attributes (_1, rangeOfNonNilAttrs _1) ] else [] 
                   )
# 1169 "../pars.fsy"
                 : 'moduleDefnsOrExpr));
# 4466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1175 "../pars.fsy"
                             _1 @ _2 
                   )
# 1175 "../pars.fsy"
                 : 'moduleDefns));
# 4478 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1178 "../pars.fsy"
                             _1 @ _3 
                   )
# 1178 "../pars.fsy"
                 : 'moduleDefns));
# 4491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1181 "../pars.fsy"
                             _1 
                   )
# 1181 "../pars.fsy"
                 : 'moduleDefns));
# 4502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnOrDirective)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1184 "../pars.fsy"
                             _1 
                   )
# 1184 "../pars.fsy"
                 : 'moduleDefns));
# 4514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1187 "../pars.fsy"
                             _3 
                   )
# 1187 "../pars.fsy"
                 : 'moduleDefns));
# 4526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1193 "../pars.fsy"
                             _1  
                   )
# 1193 "../pars.fsy"
                 : 'moduleDefnOrDirective));
# 4537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hashDirective)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1196 "../pars.fsy"
                             [ SynModuleDecl.HashDirective (_1, rhs2 parseState 1 1) ] 
                   )
# 1196 "../pars.fsy"
                 : 'moduleDefnOrDirective));
# 4548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1205 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             let (BindingSetPreAttrs(_, _, _, _, mWhole)) = _3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole)  
                   )
# 1205 "../pars.fsy"
                 : 'moduleDefn));
# 4564 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1212 "../pars.fsy"
                             let hwlb, m = _3
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             parseState.ResetSynArgNameGenerator()
                             mkDefnBindings (m, hwlb, _1, _2, m)  
                   )
# 1212 "../pars.fsy"
                 : 'moduleDefn));
# 4580 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1219 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let mWhole = rhs parseState 3 
                             mkDefnBindings (mWhole, _3, _1, _2, mWhole) 
                   )
# 1219 "../pars.fsy"
                 : 'moduleDefn));
# 4595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1225 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let      (TypeDefn(ComponentInfo(cas, a, cs, b, c, d, d2, d3), e, f, g)) = _4
                             let tc = (TypeDefn(ComponentInfo(_1@cas, a, cs, b, c, d, d2, d3), e, f, g))
                             let types = tc :: _5
                             [ SynModuleDecl.Types(types, (rhs parseState 3, types) ||> unionRangeWithListBy (fun t -> t.Range) ) ] 
                   )
# 1225 "../pars.fsy"
                 : 'moduleDefn));
# 4614 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExceptionDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1233 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let (SynExceptionDefn(SynExceptionDefnRepr(cas, a, b, c, d, d2), e, f)) = _3 
                             let f = (f, _1) ||> unionRangeWithListBy (fun a -> a.Range)
                             let ec = (SynExceptionDefn(SynExceptionDefnRepr(_1@cas, a, b, c, d, d2), e, f)) 
                             [ SynModuleDecl.Exception(ec, f) ] 
                   )
# 1233 "../pars.fsy"
                 : 'moduleDefn));
# 4631 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'namedModuleDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1241 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let attribs, (isRec, path, xml, vis) = _1, _3 
                             match _5 with 
                             | Choice1Of2 eqn -> 
                                 if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                                 if isRec then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsInvalidUseOfRec())
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 if not (isNil _1) then raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviation())
                                 match vis with
                                 | Some vis -> raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsIgnoreAttributesOnModuleAbbreviationAlwaysPrivate(vis.ToString()))
                                 | _ -> ()
                                 [ SynModuleDecl.ModuleAbbrev(List.head path, eqn, (rhs parseState 3, eqn) ||> unionRangeWithListBy (fun id -> id.idRange) ) ]
                             | Choice2Of2 def -> 
                                 if not (isSingleton path) then raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsModuleAbbreviationMustBeSimpleName())
                                 let info = ComponentInfo(attribs, [], [], path, xml, false, vis, rhs parseState 3)
                                 [ SynModuleDecl.NestedModule(info, isRec, def, false, (rhs2 parseState 1 4, def) ||> unionRangeWithListBy (fun d -> d.Range) ) ] 
                   )
# 1241 "../pars.fsy"
                 : 'moduleDefn));
# 4660 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1260 "../pars.fsy"
                             errorR(Error(FSComp.SR.parsAttributeOnIncompleteCode(), rhs parseState 1))
                             [] 
                   )
# 1260 "../pars.fsy"
                 : 'moduleDefn));
# 4673 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1265 "../pars.fsy"
                             [SynModuleDecl.Open(_1, _1.Range)] 
                   )
# 1265 "../pars.fsy"
                 : 'moduleDefn));
# 4684 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1273 "../pars.fsy"
                            _2.Lid 
                   )
# 1273 "../pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1276 "../pars.fsy"
                            _1.Lid  
                   )
# 1276 "../pars.fsy"
                 : 'namedModuleAbbrevBlock));
# 4707 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1282 "../pars.fsy"
                            Choice2Of2 _2  
                   )
# 1282 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4719 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1285 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            Choice2Of2 _2 
                   )
# 1285 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4732 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1289 "../pars.fsy"
                              // There is an ambiguity here 
                              // In particular, consider the following two:
                              //
                              // module M2 = 
                              //    System.DateTime.Now
                              // module M2 = 
                              //    Microsoft.FSharp.Core.List
                              // The second is a module abbreviation, the first a module containing a single expression.
                              // The resolution is in favour of the module abbreviation, i.e. anything of the form 
                              //    module M2 = ID.ID.ID.ID
                              // will be taken as a module abbreviation, regardles of the identifiers themselves.
                              //
                              // This is similar to the ambiguitty between 
                              //    type X = int
                              // and 
                              //    type X = OneValue
                              // However in that case we do use type name lookup to make the resolution.
                              match _2 with 
                              | [ SynModuleDecl.DoExpr (_, LongOrSingleIdent(false, LongIdentWithDots(path, _), None, _), _) ] -> 
                                  Choice1Of2  path
                              | _ -> 
                                  Choice2Of2 _2 
                            
                   )
# 1289 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4766 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1315 "../pars.fsy"
                            // The lex filter ensures we can only get a mismatch in OBLOCKBEGIN/OBLOCKEND tokens if there was some other kind of error, hence we don't need to report this error
                            // reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnClosedBlockInHashLight())   
                            Choice2Of2 _2 
                   )
# 1315 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4780 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1320 "../pars.fsy"
                            Choice2Of2 [] 
                   )
# 1320 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'wrappedNamedModuleDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1323 "../pars.fsy"
                            Choice2Of2 _1 
                   )
# 1323 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1326 "../pars.fsy"
                            Choice1Of2 _1.Lid 
                   )
# 1326 "../pars.fsy"
                 : 'namedModuleDefnBlock));
# 4813 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1332 "../pars.fsy"
                            _2 
                   )
# 1332 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4825 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleDefnsOrExprPossiblyEmpty)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1335 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBeginOrStruct())  
                            _2 
                   )
# 1335 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4839 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'structOrBegin)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1339 "../pars.fsy"
                            [] 
                   )
# 1339 "../pars.fsy"
                 : 'wrappedNamedModuleDefn));
# 4850 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1344 "../pars.fsy"
                            _2 
                   )
# 1344 "../pars.fsy"
                 : SyntaxTree.SynMemberDefns));
# 4862 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1350 "../pars.fsy"
                             _1 
                   )
# 1350 "../pars.fsy"
                 : 'opt_attributes));
# 4873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1353 "../pars.fsy"
                             [] 
                   )
# 1353 "../pars.fsy"
                 : 'opt_attributes));
# 4883 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1358 "../pars.fsy"
                            _1 
                   )
# 1358 "../pars.fsy"
                 : 'attributes));
# 4894 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeList)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1361 "../pars.fsy"
                            _1 @ _2 
                   )
# 1361 "../pars.fsy"
                 : 'attributes));
# 4906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1367 "../pars.fsy"
                             mkAttributeList _2 (rhs2 parseState 1 3) 
                   )
# 1367 "../pars.fsy"
                 : 'attributeList));
# 4919 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1370 "../pars.fsy"
                             mkAttributeList [] (rhs2 parseState 1 3) 
                   )
# 1370 "../pars.fsy"
                 : 'attributeList));
# 4930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1373 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList _2 (rhs2 parseState 1 2) 
                   )
# 1373 "../pars.fsy"
                 : 'attributeList));
# 4944 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1377 "../pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedLBrackLess())
                             mkAttributeList [] (rhs parseState 1) 
                   )
# 1377 "../pars.fsy"
                 : 'attributeList));
# 4956 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1384 "../pars.fsy"
                            [_1] 
                   )
# 1384 "../pars.fsy"
                 : 'attributeListElements));
# 4967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeListElements)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attribute)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1387 "../pars.fsy"
                            _1 @ [_3] 
                   )
# 1387 "../pars.fsy"
                 : 'attributeListElements));
# 4980 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1394 "../pars.fsy"
                            let arg = match _3 with None -> mkSynUnit _1.Range | Some e -> e 
                            ({ TypeName=_1; ArgExpr=arg; Target=None; AppliesToGetterAndSetter=false; Range=_1.Range } : SynAttribute) 
                   )
# 1394 "../pars.fsy"
                 : 'attribute));
# 4994 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1399 "../pars.fsy"
                            let arg = match _4 with None -> mkSynUnit _2.Range | Some e -> e 
                            ({ TypeName=_2; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_2.Range } : SynAttribute) 
                   )
# 1399 "../pars.fsy"
                 : 'attribute));
# 5009 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributeTarget)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1404 "../pars.fsy"
                            let arg = match _6 with None -> mkSynUnit _3.Range | Some e -> e 
                            ({ TypeName=_3; ArgExpr=arg; Target=_1; AppliesToGetterAndSetter=false; Range=_3.Range } : SynAttribute) 
                   )
# 1404 "../pars.fsy"
                 : 'attribute));
# 5025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1411 "../pars.fsy"
                             Some(ident("module", (rhs parseState 1))) 
                   )
# 1411 "../pars.fsy"
                 : 'attributeTarget));
# 5036 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1414 "../pars.fsy"
                             Some(ident("type", (rhs parseState 1))) 
                   )
# 1414 "../pars.fsy"
                 : 'attributeTarget));
# 5047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1416 "../pars.fsy"
                                       Some(_1) 
                   )
# 1416 "../pars.fsy"
                 : 'attributeTarget));
# 5058 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1420 "../pars.fsy"
                             if _1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSyntaxError())
                             Some(ident("return", (rhs parseState 1))) 
                   )
# 1420 "../pars.fsy"
                 : 'attributeTarget));
# 5070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1425 "../pars.fsy"
                                           (true, StaticMemberFlags) 
                   )
# 1425 "../pars.fsy"
                 : 'memberFlags));
# 5080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1426 "../pars.fsy"
                                           (false, NonVirtualMemberFlags) 
                   )
# 1426 "../pars.fsy"
                 : 'memberFlags));
# 5090 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1427 "../pars.fsy"
                                           (false, OverrideMemberFlags) 
                   )
# 1427 "../pars.fsy"
                 : 'memberFlags));
# 5100 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1428 "../pars.fsy"
                                          (false, OverrideMemberFlags) 
                   )
# 1428 "../pars.fsy"
                 : 'memberFlags));
# 5110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconNameAndTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1433 "../pars.fsy"
                            let typars, lid, fixity, tpcs1, vis, xmlDoc = _2 
                            let tpcs2 = _3 
                            ComponentInfo(_1, typars, (tpcs1 @ tpcs2), lid, xmlDoc, fixity, vis, rangeOfLid lid)  
                   )
# 1433 "../pars.fsy"
                 : 'typeNameInfo));
# 5125 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1440 "../pars.fsy"
                            _2 :: _3 
                   )
# 1440 "../pars.fsy"
                 : 'tyconDefnList));
# 5137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1442 "../pars.fsy"
                            [] 
                   )
# 1442 "../pars.fsy"
                 : 'tyconDefnList));
# 5147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1447 "../pars.fsy"
                            TypeDefn(_1, SynTypeDefnRepr.Simple(SynTypeDefnSimpleRepr.None(_1.Range), _1.Range), [], _1.Range) 
                   )
# 1447 "../pars.fsy"
                 : 'tyconDefn));
# 5158 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1450 "../pars.fsy"
                            let nameRange = rhs parseState 1
                            let (tcDefRepr:SynTypeDefnRepr), members = _3 nameRange
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)    
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
# 1450 "../pars.fsy"
                 : 'tyconDefn));
# 5174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynMemberDefns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1457 "../pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun mem -> mem.Range)
                            TypeDefn(_1, SynTypeDefnRepr.ObjectModel(TyconAugmentation, [], m), _2, m) 
                   )
# 1457 "../pars.fsy"
                 : 'tyconDefn));
# 5187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeNameInfo)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatterns)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1461 "../pars.fsy"
                            let vis, spats, az = _3, _5, _6
                            let nameRange = rhs parseState 1
                            let (tcDefRepr, members) = _8 nameRange
                            let (ComponentInfo(_, _, _, lid, _, _, _, _)) = _1 
                            let memberCtorPattern = SynMemberDefn.ImplicitCtor (vis, _2, spats, az, rangeOfLid lid)
                            let tcDefRepr = 
                              match tcDefRepr with
                              | SynTypeDefnRepr.ObjectModel (k, cspec, m) -> SynTypeDefnRepr.ObjectModel (k, memberCtorPattern :: cspec, m)
                              | _ -> reportParseErrorAt (rhs2 parseState 1 5) (FSComp.SR.parsOnlyClassCanTakeValueArguments()); tcDefRepr
                            let declRange = unionRanges (rhs parseState 1) tcDefRepr.Range
                            let mWhole = (declRange, members) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                            
                            TypeDefn(_1, tcDefRepr, members, mWhole) 
                   )
# 1461 "../pars.fsy"
                 : 'tyconDefn));
# 5216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1487 "../pars.fsy"
                            let m = unionRanges (rhs parseState 1) (match _7 with [] -> (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5)) | _ -> (rhs parseState 7))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) _7)) 
                   )
# 1487 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1491 "../pars.fsy"
                            if not _6 then reportParseErrorAt (rhs parseState 6) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let m = unionRanges (rhs parseState 1) (match _5 with [] -> (rhs parseState 4) | _ -> (rhs parseState 5))
                            (fun nameRange -> _2 nameRange (checkForMultipleAugmentations m (_4 @ _5) [])) 
                   )
# 1491 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5250 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefnRhs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1496 "../pars.fsy"
                            let m = rhs parseState 1
                            (fun nameRange -> _1 nameRange _2) 
                   )
# 1496 "../pars.fsy"
                 : 'tyconDefnRhsBlock));
# 5263 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypeDefnSimpleRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1505 "../pars.fsy"
                            let m = _1.Range
                            (fun nameRange augmentation -> SynTypeDefnRepr.Simple (_1, m), augmentation) 
                   )
# 1505 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconClassDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1510 "../pars.fsy"
                            let needsCheck, (kind, decls), mopt = _1 
                            let m = match mopt with 
                                    | None -> (lhs parseState).StartRange // create a zero-width range
                                    | Some m -> m
                            (fun nameRange augmentation -> 
                                if needsCheck && isNil decls then 
                                    reportParseErrorAt nameRange (FSComp.SR.parsEmptyTypeDefinition())
                                SynTypeDefnRepr.ObjectModel (kind, decls, m), augmentation) 
                   )
# 1510 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5293 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1521 "../pars.fsy"
                            let m = lhs parseState 
                            let ty, arity = _3
                            (fun nameRange augmentation -> 
                                let valSpfn = ValSpfn([], mkSynId m "Invoke", inferredTyparDecls, ty, arity, false, false, PreXmlDoc.Empty, None, None, m) 
                                let invoke = SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags MemberKind.Member, m) 
                                if not (isNil augmentation) then raiseParseErrorAt m (FSComp.SR.parsAugmentationsIllegalOnDelegateType())
                                SynTypeDefnRepr.ObjectModel (TyconDelegate (ty, arity), [invoke], m), []) 
                   )
# 1521 "../pars.fsy"
                 : 'tyconDefnRhs));
# 5310 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlockKindUnspecified)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1533 "../pars.fsy"
                            let needsCheck, decls, mopt = _1 
                            needsCheck, (TyconUnspecified, decls), mopt 
                   )
# 1533 "../pars.fsy"
                 : 'tyconClassDefn));
# 5322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1537 "../pars.fsy"
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false, (_1, _2), Some(m) 
                   )
# 1537 "../pars.fsy"
                 : 'tyconClassDefn));
# 5335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1541 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedClassInterfaceOrStruct())
                            let m = (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range)
                            false, (_1, _2), Some(m) 
                   )
# 1541 "../pars.fsy"
                 : 'tyconClassDefn));
# 5350 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classOrInterfaceOrStruct)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1546 "../pars.fsy"
                            // silent recovery 
                            false, (_1, []), Some(rhs parseState 1) 
                   )
# 1546 "../pars.fsy"
                 : 'tyconClassDefn));
# 5362 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1553 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            false, _2, mopt 
                   )
# 1553 "../pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5379 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1561 "../pars.fsy"
                            let mopt =
                                match _2 with
                                | _ :: _ -> Some( (rhs parseState 1, _2) ||> unionRangeWithListBy (fun (d:SynMemberDefn) -> d.Range) )
                                | _ -> None
                            true, _2, mopt 
                   )
# 1561 "../pars.fsy"
                 : 'classDefnBlockKindUnspecified));
# 5395 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1571 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileTypeDefinition())
                             _2 
                   )
# 1571 "../pars.fsy"
                 : 'classDefnBlock));
# 5408 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1575 "../pars.fsy"
                             _2 
                   )
# 1575 "../pars.fsy"
                 : 'classDefnBlock));
# 5420 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1578 "../pars.fsy"
                             _1 
                   )
# 1578 "../pars.fsy"
                 : 'classDefnBlock));
# 5431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembersAtLeastOne)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1584 "../pars.fsy"
                            _1 
                   )
# 1584 "../pars.fsy"
                 : 'classDefnMembers));
# 5442 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1588 "../pars.fsy"
                            _2 
                   )
# 1588 "../pars.fsy"
                 : 'classDefnMembers));
# 5453 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1591 "../pars.fsy"
                            [] 
                   )
# 1591 "../pars.fsy"
                 : 'classDefnMembers));
# 5463 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1597 "../pars.fsy"
                            _1 @  _3 
                   )
# 1597 "../pars.fsy"
                 : 'classDefnMembersAtLeastOne));
# 5476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1603 "../pars.fsy"
                            _2  
                   )
# 1603 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1606 "../pars.fsy"
                            _2  
                   )
# 1606 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5498 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1609 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedWith())
                            _2  
                   )
# 1609 "../pars.fsy"
                 : 'classDefnMemberGetSet));
# 5510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1615 "../pars.fsy"
                            [_1]  
                   )
# 1615 "../pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5521 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSetElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1617 "../pars.fsy"
                            [_1;_3] 
                   )
# 1617 "../pars.fsy"
                 : 'classDefnMemberGetSetElements));
# 5533 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1621 "../pars.fsy"
                            let mRhs = (_6 : SynExpr).Range 
                            (_1, _2, _3, _4, _6, mRhs) 
                   )
# 1621 "../pars.fsy"
                 : 'classDefnMemberGetSetElement));
# 5549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1629 "../pars.fsy"
                            let mRhs = _5.Range 
                            let optReturnType = _3 
                            let bindingBuilder, mBindLhs = _2 
                            (fun vis memFlagsBuilder attrs rangeStart ->
                                 let memberFlags = Some (memFlagsBuilder MemberKind.Member)
                                 let binding = bindingBuilder (vis, _1, false, mBindLhs, NoDebugPointAtInvisibleBinding, optReturnType, _5, mRhs, [], attrs, memberFlags)
                                 let memberRange = unionRanges rangeStart mRhs
                                 [ SynMemberDefn.Member (binding, memberRange) ]) 
                   )
# 1629 "../pars.fsy"
                 : 'memberCore));
# 5570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnMemberGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1640 "../pars.fsy"
                            let mWhole = (rhs parseState 2, _4) ||> unionRangeWithListBy (fun (_, _, _, _, _, m2) -> m2) 
                            let propertyNameBindingBuilder, _ = _2 
                            let optPropertyType = _3 
                            let isMutable = false
                            (fun visNoLongerUsed memFlagsBuilder attrs rangeStart -> 
                                  let hasGet = ref false
                                  let hasSet = ref false
                                  // Iterate over 1 or 2 'get'/'set' entries
                                  _4 |> List.choose (fun (optInline, optAttrs, (bindingBuilder, mBindLhs), optReturnType, expr, exprm) ->
                                        let optInline = _1 || optInline 
                                        // optional attributes are only applied to getters and setters
                                        // the "top level" attrs will be applied to both
                                        let optAttrs =
                                            optAttrs |> List.map (fun attrList ->
                                                { attrList with Attributes = attrList.Attributes |> List.map (fun a -> { a with AppliesToGetterAndSetter = true } ) })
                                        let attrs = attrs @ optAttrs
                                        
                                        let binding = bindingBuilder (visNoLongerUsed, optInline, isMutable, mBindLhs, NoDebugPointAtInvisibleBinding, optReturnType, expr, exprm, [], attrs, Some (memFlagsBuilder MemberKind.Member))
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, _, _, mBindLhs, spBind)) = binding 
                                        let memberKind = 
                                              let getset = 
                                                    let rec go p = 
                                                        match p with 
                                                        | SynPat.LongIdent (LongIdentWithDots([id], _), _, _, _, _, _) ->  id.idText
                                                        | SynPat.Named (_, nm, _, _, _) ->  nm.idText
                                                        | SynPat.Typed (p, _, _) ->  go p
                                                        | SynPat.Attrib (p, _, _) ->  go p
                                                        | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                                    go pv 
                                              if getset = "get" then
                                                  if !hasGet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasGet := true
                                                      Some MemberKind.PropertyGet
                                              else if getset = "set" then
                                                  if !hasSet then 
                                                      reportParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                                      None
                                                  else
                                                      hasSet := true
                                                      Some MemberKind.PropertySet
                                              else
                                                  raiseParseErrorAt mBindLhs (FSComp.SR.parsGetAndOrSetRequired())
                                        match memberKind with
                                        | None -> None
                                        | Some memberKind ->
                                        // REVIEW: It's hard not to ignore the optPropertyType type annotation for 'set' properties. To apply it,
                                        // we should apply it to the last argument, but at this point we've already pushed the patterns that 
                                        // make up the arguments onto the RHS. So we just always give a warning. 
                                        begin match optPropertyType with 
                                        | Some _ -> errorR(Error(FSComp.SR.parsTypeAnnotationsOnGetSet(), mBindLhs))
                                        | None -> ()
                                        end
                                        
                                        let optReturnType = 
                                            match (memberKind, optReturnType) with 
                                            | MemberKind.PropertySet, _ -> optReturnType
                                            | _, None -> optPropertyType
                                            | _ -> optReturnType 
                                        // REDO with the correct member kind 
                                        let binding = bindingBuilder(vis, isInline, isMutable, mBindLhs, NoDebugPointAtInvisibleBinding, optReturnType, expr, exprm, [], attrs, Some(memFlagsBuilder memberKind)) 
                                        let (Binding (vis, _, isInline, _, attrs, doc, valSynData, pv, rhsRetInfo, rhsExpr, mBindLhs, spBind)) = binding 
                                     
                                        let (SynValData(_, valSynInfo, _)) = valSynData 
                                        // Setters have all arguments tupled in their internal TAST form, though they don't appear to be 
                                        // tupled from the syntax
                                        let memFlags = memFlagsBuilder memberKind
                                        let valSynInfo = 
                                            let adjustValueArg valueArg = 
                                                match valueArg with
                                                | [_] -> valueArg
                                                | _ -> SynInfo.unnamedTopArg
                                            match memberKind, valSynInfo, memFlags.IsInstance with 
                                            | MemberKind.PropertyGet, SynValInfo ([], _ret), false
                                            | MemberKind.PropertyGet, SynValInfo ([_], _ret), true  -> 
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsGetterMustHaveAtLeastOneArgument()) 
                                            | MemberKind.PropertyGet, SynValInfo (thisArg :: indexOrUnitArgs :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([thisArg; indexOrUnitArgs], ret)
                                            | MemberKind.PropertyGet, SynValInfo (indexOrUnitArgs :: rest, ret), false ->
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsGetterAtMostOneArgument ())
                                                SynValInfo ([indexOrUnitArgs], ret)
                                            | MemberKind.PropertySet, SynValInfo ([thisArg;valueArg], ret), true  -> 
                                                SynValInfo ([thisArg; adjustValueArg valueArg], ret)
                                            | MemberKind.PropertySet, SynValInfo (thisArg :: indexArgs :: valueArg :: rest, ret), true  -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([thisArg; indexArgs @ adjustValueArg valueArg], ret)
                                            | MemberKind.PropertySet, SynValInfo ([valueArg], ret), false -> 
                                                SynValInfo ([adjustValueArg valueArg], ret)
                                            | MemberKind.PropertySet, SynValInfo (indexArgs :: valueArg :: rest, ret), _ -> 
                                                if not rest.IsEmpty then
                                                    reportParseErrorAt mBindLhs (FSComp.SR.parsSetterAtMostTwoArguments ())
                                                SynValInfo ([indexArgs @ adjustValueArg valueArg], ret)
                                            | _ -> 
                                                // should be unreachable, cover just in case
                                                raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidProperty ())
                                        let valSynData = SynValData(Some(memFlags), valSynInfo, None) 
                                        // Fold together the information from the first lambda pattern and the get/set binding
                                        // This uses the 'this' variable from the first and the patterns for the get/set binding,
                                        // replacing the get/set identifier. A little gross. 
                                        let bindingPatAdjusted, xmlDocAdjusted = 
                                            let bindingOuter = propertyNameBindingBuilder(vis, optInline, isMutable, mBindLhs, spBind, optReturnType, expr, exprm, [], attrs, Some(memFlagsBuilder MemberKind.Member))
                                            let (Binding (_, _, _, _, _, doc2, _, bindingPatOuter, _, _, _, _)) = bindingOuter 
                                            
                                        
                                            let lidOuter, lidVisOuter = 
                                                match bindingPatOuter with 
                                                | SynPat.LongIdent (lid, None, None, SynArgPats.Pats [], lidVisOuter, m) ->  lid, lidVisOuter
                                                | SynPat.Named (_, id, _, visOuter, m) -> LongIdentWithDots([id], []), visOuter
                                                | p -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            // Merge the visibility from the outer point with the inner point, e.g.
                                            //    member <VIS1>  this.Size with <VIS2> get ()      = m_size
                                            
                                            let mergeLidVisOuter lidVisInner =
                                                match lidVisInner, lidVisOuter with 
                                                | None, None -> None
                                                | Some lidVisInner, None | None, Some lidVisInner -> Some lidVisInner
                                                | Some _, Some _ ->  
                                                    errorR(Error(FSComp.SR.parsMultipleAccessibilitiesForGetSet(), mBindLhs))
                                                    lidVisInner
                                        
                                            // Replace the "get" or the "set" with the right name
                                            let rec go p = 
                                                match p with 
                                                | SynPat.LongIdent (LongIdentWithDots([id], _), _, tyargs, SynArgPats.Pats args, lidVisInner, m) ->  
                                                    // Setters have all arguments tupled in their internal form, though they don't 
                                                    // appear to be tupled from the syntax. Somewhat unfortunate
                                                    let args = 
                                                        if id.idText = "set" then 
                                                            match args with 
                                                            | [SynPat.Paren(SynPat.Tuple (false, indexPats, _), indexPatRange);valuePat] when id.idText = "set" -> 
                                                                [SynPat.Tuple(false, indexPats@[valuePat], unionRanges indexPatRange valuePat.Range)] 
                                                            | [indexPat;valuePat] -> 
                                                                [SynPat.Tuple(false, args, unionRanges indexPat.Range valuePat.Range)] 
                                                            | [valuePat] -> 
                                                                [valuePat] 
                                                            | _ -> 
                                                                raiseParseErrorAt m (FSComp.SR.parsSetSyntax())
                                                        else 
                                                            args
                     //                               let idTool : Ident list = lidOuter |> List.map (fun (li:Ident) -> ident(li.idText, id.idRange)) |> List.rev |> List.take 1
                                                    SynPat.LongIdent (lidOuter, Some(id), tyargs, SynArgPats.Pats args, mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Named (_, nm, _, lidVisInner, m) ->  SynPat.LongIdent (lidOuter, None, None, SynArgPats.Pats [], mergeLidVisOuter lidVisInner, m)
                                                | SynPat.Typed (p, ty, m) ->  SynPat.Typed(go p, ty, m)
                                                | SynPat.Attrib (p, attribs, m) ->  SynPat.Attrib(go p, attribs, m)
                                                | SynPat.Wild(m) ->  SynPat.Wild(m)
                                                | _ -> raiseParseErrorAt mBindLhs (FSComp.SR.parsInvalidDeclarationSyntax()) 
                                            go pv, PreXmlDoc.Merge doc2 doc
                                        let binding = Binding (vis, NormalBinding, isInline, isMutable, attrs, xmlDocAdjusted, valSynData, bindingPatAdjusted, rhsRetInfo, rhsExpr, mBindLhs, spBind)
                                        let memberRange = unionRanges rangeStart mWhole
                                        Some (SynMemberDefn.Member (binding, memberRange))))
                            
                   )
# 1640 "../pars.fsy"
                 : 'memberCore));
# 5740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1826 "../pars.fsy"
                                   
                   )
# 1826 "../pars.fsy"
                 : 'abstractMemberFlags));
# 5750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1827 "../pars.fsy"
                                          
                   )
# 1827 "../pars.fsy"
                 : 'abstractMemberFlags));
# 5760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1833 "../pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(false, None, _1, _2, _3)] 
                   )
# 1833 "../pars.fsy"
                 : 'classDefnMember));
# 5774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1837 "../pars.fsy"
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            [mkClassMemberLocalBindings(true, Some (rhs parseState 3), _1, _2, _4)] 
                   )
# 1837 "../pars.fsy"
                 : 'classDefnMember));
# 5788 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1841 "../pars.fsy"
                            let rangeStart = rhs parseState 1
                            if Option.isSome _2 then
                                errorR (Error (FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier (), rhs parseState 2))
                            let _, flags = _3
                            _4 _2 flags _1 rangeStart 
                   )
# 1841 "../pars.fsy"
                 : 'classDefnMember));
# 5807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_interfaceImplDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1848 "../pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesAreNotPermittedOnInterfaceImplementations(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsInterfacesHaveSameVisibilityAsEnclosingType(), rhs parseState 3))
                             let mWhole = 
                                 match _5 with
                                 | None -> rhs2 parseState 1 4
                                 | Some(mems) -> (rhs2 parseState 1 4, mems) ||> unionRangeWithListBy (fun (mem:SynMemberDefn) -> mem.Range)
                             [ SynMemberDefn.Interface (_4, _5, mWhole) ] 
                   )
# 1848 "../pars.fsy"
                 : 'classDefnMember));
# 5828 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'abstractMemberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            let _9 = (let data = parseState.GetInput(9) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            let _10 = (let data = parseState.GetInput(10) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1857 "../pars.fsy"
                            let ty, arity = _8
                            let isInline, doc, id, explicitValTyparDecls = _4, grabXmlDoc(parseState, 3), _5, _6
                            let getSetRangeOpt, getSet = _9
                            let getSetAdjuster arity = match arity, getSet with SynValInfo([], _), MemberKind.Member -> MemberKind.PropertyGet | _ -> getSet
                            let wholeRange = 
                                let m = rhs parseState 1
                                match getSetRangeOpt with 
                                | None -> unionRanges m ty.Range
                                | Some m2 -> unionRanges m m2
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsAccessibilityModsIllegalForAbstract(), wholeRange))
                            let valSpfn = ValSpfn(_1, id, explicitValTyparDecls, ty, arity, isInline, false, doc, None, None, wholeRange)
                            [ SynMemberDefn.AbstractSlot(valSpfn, AbstractMemberFlags (getSetAdjuster arity), wholeRange) ] 
                   )
# 1857 "../pars.fsy"
                 : 'classDefnMember));
# 5858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'inheritsDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1871 "../pars.fsy"
                             if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalOnInherit(), rhs parseState 1))
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityIllegalOnInherit(), rhs parseState 1))
                             [ _3 ] 
                   )
# 1871 "../pars.fsy"
                 : 'classDefnMember));
# 5873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1876 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _3 rangeStart _1 false 
                   )
# 1876 "../pars.fsy"
                 : 'classDefnMember));
# 5889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'valDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1881 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             let rangeStart = rhs parseState 1
                             _4 rangeStart _1 true  
                   )
# 1881 "../pars.fsy"
                 : 'classDefnMember));
# 5905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberFlags)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1886 "../pars.fsy"
                            let rangeStart = rhs parseState 1 
                            if Option.isSome _2 then
                                errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                            let isStatic, flags = _3
                            _4 _1 isStatic flags rangeStart 
                   )
# 1886 "../pars.fsy"
                 : 'classDefnMember));
# 5924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optAsSpec)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1893 "../pars.fsy"
                             let m = unionRanges (rhs2 parseState 1 6) _7.Range 
                             let expr = _7
                             let valSynData = SynValData (Some CtorMemberFlags, SynValInfo([SynInfo.InferSynArgInfoFromPat _4], SynInfo.unnamedRetVal), _5) 
                             let vis = _2 
                             let declPat = SynPat.LongIdent (LongIdentWithDots([mkSynId (rhs parseState 3) "new"], []), None, Some noInferredTypars, SynArgPats.Pats [_4], vis, rhs parseState 3)
                             // Check that 'SynPatForConstructorDecl' matches this correctly
                             assert (match declPat with SynPatForConstructorDecl _ -> true | _ -> false)
                             [ SynMemberDefn.Member(Binding (None, NormalBinding, false, false, _1, grabXmlDoc(parseState, 3), valSynData, declPat, None, expr, m, NoDebugPointAtInvisibleBinding), m) ] 
                   )
# 1893 "../pars.fsy"
                 : 'classDefnMember));
# 5947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tyconDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1903 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsVisibilityDeclarationsShouldComePriorToIdentifier(), rhs parseState 2))
                             [ SynMemberDefn.NestedType(_5, None, rhs2 parseState 1 5) ] 
                   )
# 1903 "../pars.fsy"
                 : 'classDefnMember));
# 5962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1910 "../pars.fsy"
                             let mRhs = rhs2 parseState 4 6
                             let doc = grabXmlDoc(parseState, 4)
                             let mValDecl = rhs2 parseState 1 6
                             (fun rangeStart attribs isStatic -> 
                                 let mValDecl = unionRanges rangeStart mValDecl
                                 let fld = Field(attribs, isStatic, Some _4, _6, _2, doc, _3, mRhs)
                                 [ SynMemberDefn.ValField(fld, mValDecl) ]) 
                   )
# 1910 "../pars.fsy"
                 : 'valDefnDecl));
# 5982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typ)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfnGetSet)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1922 "../pars.fsy"
                            let doc = grabXmlDoc(parseState, 5)
                            let mGetSetOpt, getSet = _8
                            if _2 then
                                errorR (Error (FSComp.SR.parsMutableOnAutoPropertyShouldBeGetSet (), rhs parseState 3))
                            (fun attribs isStatic flags rangeStart ->
                                let memberRange = unionRanges rangeStart _7.Range
                                [ SynMemberDefn.AutoProperty(attribs, isStatic, _4, _5, getSet, flags, doc, _3, _7, mGetSetOpt, memberRange) ]) 
                   )
# 1922 "../pars.fsy"
                 : 'autoPropsDefnDecl));
# 6004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1933 "../pars.fsy"
                                        None 
                   )
# 1933 "../pars.fsy"
                 : 'opt_typ));
# 6014 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1934 "../pars.fsy"
                                      Some _2 
                   )
# 1934 "../pars.fsy"
                 : 'opt_typ));
# 6025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1939 "../pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident("_", rhs parseState 1)::lid, rhs parseState 2::dotms)) 
                   )
# 1939 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 6039 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1945 "../pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3
                            (None, LongIdentWithDots(ident(MangledGlobalName, rhs parseState 1) :: lid, rhs parseState 2 :: dotms)) 
                   )
# 1945 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 6051 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1949 "../pars.fsy"
                            (None, _1) 
                   )
# 1949 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 6062 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1952 "../pars.fsy"
                            if not (parseState.LexBuffer.SupportsFeature LanguageFeature.SingleUnderscorePattern) then
                               raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedSymbolDot())
                            let (LongIdentWithDots(lid, dotms)) = _4
                            (Some(_1), LongIdentWithDots(ident("_", rhs parseState 2)::lid, rhs parseState 3::dotms)) 
                   )
# 1952 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 6077 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1958 "../pars.fsy"
                            (Some(_1), _2) 
                   )
# 1958 "../pars.fsy"
                 : 'atomicPatternLongIdent));
# 6089 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1963 "../pars.fsy"
                            None 
                   )
# 1963 "../pars.fsy"
                 : 'opt_access));
# 6099 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1966 "../pars.fsy"
                            Some(_1) 
                   )
# 1966 "../pars.fsy"
                 : 'opt_access));
# 6110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1971 "../pars.fsy"
                            SynAccess.Private 
                   )
# 1971 "../pars.fsy"
                 : 'access));
# 6120 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1974 "../pars.fsy"
                            SynAccess.Public 
                   )
# 1974 "../pars.fsy"
                 : 'access));
# 6130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1977 "../pars.fsy"
                            SynAccess.Internal 
                   )
# 1977 "../pars.fsy"
                 : 'access));
# 6140 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'access)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1982 "../pars.fsy"
                            Some(_1) 
                   )
# 1982 "../pars.fsy"
                 : 'opt_declVisibility));
# 6151 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1985 "../pars.fsy"
                            None 
                   )
# 1985 "../pars.fsy"
                 : 'opt_declVisibility));
# 6161 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1990 "../pars.fsy"
                            Some(_2) 
                   )
# 1990 "../pars.fsy"
                 : 'opt_interfaceImplDefn));
# 6173 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1993 "../pars.fsy"
                            None 
                   )
# 1993 "../pars.fsy"
                 : 'opt_interfaceImplDefn));
# 6183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'classDefnBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 1998 "../pars.fsy"
                            _2 
                   )
# 1998 "../pars.fsy"
                 : 'opt_classDefn));
# 6195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2001 "../pars.fsy"
                            [] 
                   )
# 2001 "../pars.fsy"
                 : 'opt_classDefn));
# 6205 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2007 "../pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) ((_2): SynType).Range 
                            SynMemberDefn.Inherit(_2, _3, mDecl) 
                   )
# 2007 "../pars.fsy"
                 : 'inheritsDefn));
# 6218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optBaseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2011 "../pars.fsy"
                            let mDecl = unionRanges (rhs parseState 1) _4.Range 
                            SynMemberDefn.ImplicitInherit(_2, _4, _5, mDecl) 
                   )
# 2011 "../pars.fsy"
                 : 'inheritsDefn));
# 6233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2015 "../pars.fsy"
                            let mDecl = (rhs parseState 1)
                            if not _2 then errorR(Error(FSComp.SR.parsTypeNameCannotBeEmpty(), mDecl))
                            SynMemberDefn.Inherit(SynType.LongIdent(LongIdentWithDots([], [])), None, mDecl) 
                   )
# 2015 "../pars.fsy"
                 : 'inheritsDefn));
# 6246 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'asSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2021 "../pars.fsy"
                             Some(_1) 
                   )
# 2021 "../pars.fsy"
                 : 'optAsSpec));
# 6257 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2024 "../pars.fsy"
                             None 
                   )
# 2024 "../pars.fsy"
                 : 'optAsSpec));
# 6267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2028 "../pars.fsy"
                            _2 
                   )
# 2028 "../pars.fsy"
                 : 'asSpec));
# 6278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2032 "../pars.fsy"
                            Some(_1) 
                   )
# 2032 "../pars.fsy"
                 : 'optBaseSpec));
# 6289 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2035 "../pars.fsy"
                            None 
                   )
# 2035 "../pars.fsy"
                 : 'optBaseSpec));
# 6299 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2039 "../pars.fsy"
                             if (_2).idText <> "base" then 
                                  errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
# 2039 "../pars.fsy"
                 : 'baseSpec));
# 6312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2044 "../pars.fsy"
                             errorR(Error(FSComp.SR.parsInheritDeclarationsCannotHaveAsBindings(), rhs2 parseState 1 2)) 
                             ident("base", rhs parseState 2) 
                   )
# 2044 "../pars.fsy"
                 : 'baseSpec));
# 6323 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2051 "../pars.fsy"
                             _2 
                   )
# 2051 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2054 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileObjectMembers())
                             _2 
                   )
# 2054 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2058 "../pars.fsy"
                             _1 
                   )
# 2058 "../pars.fsy"
                 : 'objectImplementationBlock));
# 6359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMembers)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2064 "../pars.fsy"
                             _1 @  _3 
                   )
# 2064 "../pars.fsy"
                 : 'objectImplementationMembers));
# 6372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2067 "../pars.fsy"
                             _1 
                   )
# 2067 "../pars.fsy"
                 : 'objectImplementationMembers));
# 6384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2073 "../pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 None OverrideMemberFlags _1 rangeStart 
                   )
# 2073 "../pars.fsy"
                 : 'objectImplementationMember));
# 6399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'autoPropsDefnDecl)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2077 "../pars.fsy"
                            let rangeStart = rhs parseState 1
                            _3 _1 false OverrideMemberFlags rangeStart 
                   )
# 2077 "../pars.fsy"
                 : 'objectImplementationMember));
# 6414 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberOrOverride)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2081 "../pars.fsy"
                             [] 
                   )
# 2081 "../pars.fsy"
                 : 'objectImplementationMember));
# 6426 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'memberCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_ODECLEND)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2084 "../pars.fsy"
                             [] 
                   )
# 2084 "../pars.fsy"
                 : 'objectImplementationMember));
# 6439 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2088 "../pars.fsy"
                                    
                   )
# 2088 "../pars.fsy"
                 : 'memberOrOverride));
# 6449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2089 "../pars.fsy"
                                      
                   )
# 2089 "../pars.fsy"
                 : 'memberOrOverride));
# 6459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2097 "../pars.fsy"
                            errorR(Error(FSComp.SR.parsUnexpectedQuotationOperatorInTypeAliasDidYouMeanVerbatimString(), rhs parseState 4)) 
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.ErrorRecovery, SynType.LongIdent(_3), unionRanges (rhs parseState 1) _3.Range)  
                   )
# 2097 "../pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
# 6476 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2102 "../pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsTypeAbbreviationsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            SynTypeDefnSimpleRepr.TypeAbbrev (ParserDetail.Ok, _3, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 2102 "../pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
# 6491 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : (SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase) Choice list)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2108 "../pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            let rangesOf3 = _3 |> List.map (function |Choice1Of2(ec)->ec.Range | Choice2Of2(uc)->uc.Range)
                            let mWhole = (rhs2 parseState 1 2, rangesOf3) ||> List.fold unionRanges 
                            if _3 |> List.exists (function Choice1Of2 _ -> true | _ -> false) then (
                                if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumTypesCannotHaveVisibilityDeclarations(), rhs parseState 2));
                                SynTypeDefnSimpleRepr.Enum (_3 |> List.choose (function 
                                                                   | Choice1Of2 data ->  
                                                                     Some(data) 
                                                                   | Choice2Of2(UnionCase(_, _, _, _, _, m)) -> 
                                                                     errorR(Error(FSComp.SR.parsAllEnumFieldsRequireValues(), m)); None),
                                                mWhole)
                            ) else 
                                SynTypeDefnSimpleRepr.Union (_2,
                                                 _3 |> List.choose (function Choice2Of2 data -> Some(data) | Choice1Of2 _ -> failwith "huh?"),
                                                 mWhole) 
                   )
# 2108 "../pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
# 6518 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2126 "../pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            SynTypeDefnSimpleRepr.Record (_2, _3, lhs parseState) 
                   )
# 2126 "../pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
# 6532 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declVisibility)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyTyconRepr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2131 "../pars.fsy"
                            if not (isNil _1) then errorR(Error(FSComp.SR.parsAttributesIllegalHere(), rhs parseState 1))
                            libraryOnlyError (lhs parseState)
                            if Option.isSome _2 then errorR(Error(FSComp.SR.parsInlineAssemblyCannotHaveVisibilityDeclarations(), rhs parseState 2))
                            _4 
                   )
# 2131 "../pars.fsy"
                 : SyntaxTree.SynTypeDefnSimpleRepr));
# 6549 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2140 "../pars.fsy"
                            _2 
                   )
# 2140 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6561 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2143 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace()) 
                            _2 
                   )
# 2143 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6574 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2147 "../pars.fsy"
                            [] 
                   )
# 2147 "../pars.fsy"
                 : 'braceFieldDeclList));
# 6585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2151 "../pars.fsy"
                               _2, true 
                   )
# 2151 "../pars.fsy"
                 : 'anonRecdType));
# 6596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarFieldDeclListCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2153 "../pars.fsy"
                               _1, false 
                   )
# 2153 "../pars.fsy"
                 : 'anonRecdType));
# 6607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2158 "../pars.fsy"
                            _2 
                   )
# 2158 "../pars.fsy"
                 : 'braceBarFieldDeclListCore));
# 6619 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2161 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar()) 
                            _2 
                   )
# 2161 "../pars.fsy"
                 : 'braceBarFieldDeclListCore));
# 6632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2165 "../pars.fsy"
                            [] 
                   )
# 2165 "../pars.fsy"
                 : 'braceBarFieldDeclListCore));
# 6643 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2169 "../pars.fsy"
                            libraryOnlyError (lhs parseState)
                            let lhsm = lhs parseState 
                            SynTypeDefnSimpleRepr.LibraryOnlyILAssembly (internalParseAssemblyCodeType _2 parseState.LexBuffer.SupportsFeature (rhs parseState 2), lhsm) 
                   )
# 2169 "../pars.fsy"
                 : 'inlineAssemblyTyconRepr));
# 6656 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2175 "../pars.fsy"
                            TyconClass 
                   )
# 2175 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2178 "../pars.fsy"
                            TyconInterface 
                   )
# 2178 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2181 "../pars.fsy"
                            TyconStruct 
                   )
# 2181 "../pars.fsy"
                 : 'classOrInterfaceOrStruct));
# 6686 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2184 "../pars.fsy"
                                     
                   )
# 2184 "../pars.fsy"
                 : 'interfaceMember));
# 6696 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2185 "../pars.fsy"
                                                
                   )
# 2185 "../pars.fsy"
                 : 'interfaceMember));
# 6706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2189 "../pars.fsy"
                             [], _2.Lid, false, [], _1, grabXmlDoc(parseState, 2) 
                   )
# 2189 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'prefixTyparDecls)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2192 "../pars.fsy"
                             _2, _3.Lid, false, [], _1, grabXmlDoc(parseState, 2) 
                   )
# 2192 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'postfixTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2195 "../pars.fsy"
                             let tps, tpcs = _3 
                             tps, _2.Lid, true, tpcs, _1, grabXmlDoc(parseState, 2) 
                   )
# 2195 "../pars.fsy"
                 : 'tyconNameAndTyparDecls));
# 6745 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2199 "../pars.fsy"
                                 [ TyparDecl([], _1) ] 
                   )
# 2199 "../pars.fsy"
                 : 'prefixTyparDecls));
# 6756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2200 "../pars.fsy"
                                                        List.rev _2 
                   )
# 2200 "../pars.fsy"
                 : 'prefixTyparDecls));
# 6768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2203 "../pars.fsy"
                                                         _3 :: _1 
                   )
# 2203 "../pars.fsy"
                 : 'typarDeclList));
# 6780 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2204 "../pars.fsy"
                                     [_1] 
                   )
# 2204 "../pars.fsy"
                 : 'typarDeclList));
# 6791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2208 "../pars.fsy"
                             TyparDecl(_1, _2) 
                   )
# 2208 "../pars.fsy"
                 : 'typarDecl));
# 6803 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2214 "../pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), rhs2 parseState 2 5))
                             List.rev _3, _4 
                   )
# 2214 "../pars.fsy"
                 : 'postfixTyparDecls));
# 6819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2221 "../pars.fsy"
                             (List.rev _1, true) 
                   )
# 2221 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6830 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2224 "../pars.fsy"
                             (List.rev _1, false) 
                   )
# 2224 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2227 "../pars.fsy"
                             ([], false) 
                   )
# 2227 "../pars.fsy"
                 : 'explicitValTyparDeclsCore));
# 6851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_TYAPP)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDeclsCore)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_typeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2231 "../pars.fsy"
                             if not _2 then warning(Error(FSComp.SR.parsNonAdjacentTypars(), rhs2 parseState 2 5))
                             let tps, flex = _3 
                             SynValTyparDecls(tps, flex, _4) 
                   )
# 2231 "../pars.fsy"
                 : 'explicitValTyparDecls));
# 6868 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2237 "../pars.fsy"
                             _1 
                   )
# 2237 "../pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6879 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2239 "../pars.fsy"
                             SynValTyparDecls([], true, []) 
                   )
# 2239 "../pars.fsy"
                 : 'opt_explicitValTyparDecls));
# 6889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2243 "../pars.fsy"
                             Some _1 
                   )
# 2243 "../pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2246 "../pars.fsy"
                             None 
                   )
# 2246 "../pars.fsy"
                 : 'opt_explicitValTyparDecls2));
# 6910 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2252 "../pars.fsy"
                            [] 
                   )
# 2252 "../pars.fsy"
                 : 'opt_typeConstraints));
# 6920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2255 "../pars.fsy"
                            List.rev _2 
                   )
# 2255 "../pars.fsy"
                 : 'opt_typeConstraints));
# 6931 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2261 "../pars.fsy"
                            _3 :: _1 
                   )
# 2261 "../pars.fsy"
                 : 'typeConstraints));
# 6943 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraint)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2264 "../pars.fsy"
                            [_1] 
                   )
# 2264 "../pars.fsy"
                 : 'typeConstraints));
# 6954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2270 "../pars.fsy"
                            libraryOnlyError (lhs parseState); WhereTyparDefaultsToType(_2, _4, lhs parseState) 
                   )
# 2270 "../pars.fsy"
                 : 'typeConstraint));
# 6966 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2273 "../pars.fsy"
                            WhereTyparSubtypeOfType(_1, _3, lhs parseState) 
                   )
# 2273 "../pars.fsy"
                 : 'typeConstraint));
# 6978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2276 "../pars.fsy"
                            WhereTyparIsValueType(_1, lhs parseState) 
                   )
# 2276 "../pars.fsy"
                 : 'typeConstraint));
# 6989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2279 "../pars.fsy"
                            if _3 <> "not" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(_3))  
                            WhereTyparIsReferenceType(_1, lhs parseState) 
                   )
# 2279 "../pars.fsy"
                 : 'typeConstraint));
# 7002 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2283 "../pars.fsy"
                            WhereTyparSupportsNull(_1, lhs parseState) 
                   )
# 2283 "../pars.fsy"
                 : 'typeConstraint));
# 7013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2286 "../pars.fsy"
                            let tp = _1
                            WhereTyparSupportsMember([ SynType.Var(tp, tp.Range) ], _4, lhs parseState) 
                   )
# 2286 "../pars.fsy"
                 : 'typeConstraint));
# 7027 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2290 "../pars.fsy"
                            WhereTyparSupportsMember(List.rev(_2), _6, lhs parseState) 
                   )
# 2290 "../pars.fsy"
                 : 'typeConstraint));
# 7041 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2293 "../pars.fsy"
                            let _ltm, _gtm, args, _commas, mWhole = _4 in WhereTyparIsDelegate(_1, args, unionRanges _1.Range mWhole) 
                   )
# 2293 "../pars.fsy"
                 : 'typeConstraint));
# 7053 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2296 "../pars.fsy"
                            match _3 with 
                            | "enum" -> let _ltm, _gtm, args, _commas, mWhole = _4 in WhereTyparIsEnum(_1, args, unionRanges _1.Range mWhole)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2296 "../pars.fsy"
                 : 'typeConstraint));
# 7068 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2301 "../pars.fsy"
                            match _3 with 
                            | "comparison" -> WhereTyparIsComparable(_1, lhs parseState)
                            | "equality" -> WhereTyparIsEquatable(_1, lhs parseState)
                            | "unmanaged" -> WhereTyparIsUnmanaged(_1, lhs parseState)
                            | nm -> raiseParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedIdentifier(nm)) 
                   )
# 2301 "../pars.fsy"
                 : 'typeConstraint));
# 7084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typarAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2309 "../pars.fsy"
                            _3 :: _1 
                   )
# 2309 "../pars.fsy"
                 : 'typarAlts));
# 7096 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2312 "../pars.fsy"
                            [_1] 
                   )
# 2312 "../pars.fsy"
                 : 'typarAlts));
# 7107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2319 "../pars.fsy"
                            _2 _1 
                   )
# 2319 "../pars.fsy"
                 : (SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase) Choice list));
# 7119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDeclOfMany)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2322 "../pars.fsy"
                            _1 :: _3 _2 
                   )
# 2322 "../pars.fsy"
                 : (SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase) Choice list));
# 7132 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2325 "../pars.fsy"
                            [_1] 
                   )
# 2325 "../pars.fsy"
                 : (SyntaxTree.SynEnumCase, SyntaxTree.SynUnionCase) Choice list));
# 7143 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2329 "../pars.fsy"
                            grabXmlDoc(parseState, 1) 
                   )
# 2329 "../pars.fsy"
                 : 'barAndgrabXmlDoc));
# 7153 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'barAndgrabXmlDoc)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2333 "../pars.fsy"
                            (fun xmlDoc -> _1 xmlDoc  :: _3 _2) 
                   )
# 2333 "../pars.fsy"
                 : 'attrUnionCaseDecls));
# 7166 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attrUnionCaseDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2336 "../pars.fsy"
                            (fun xmlDoc -> [ _1 xmlDoc ]) 
                   )
# 2336 "../pars.fsy"
                 : 'attrUnionCaseDecls));
# 7177 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2341 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs parseState 3
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3, UnionCaseFields [], xmlDoc, None, mDecl))) 
                   )
# 2341 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2346 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3, UnionCaseFields _5, xmlDoc, None, mDecl))) 
                   )
# 2346 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2351 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsUnionCasesCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             libraryOnlyWarning(lhs parseState)
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice2Of2 (UnionCase ( _1, _3, UnionCaseFullType _5, xmlDoc, None, mDecl))) 
                   )
# 2351 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7228 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseName)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2357 "../pars.fsy"
                             if Option.isSome _2 then errorR(Error(FSComp.SR.parsEnumFieldsCannotHaveVisibilityDeclarations(), rhs parseState 2))
                             let mDecl = rhs2 parseState 1 5
                             (fun xmlDoc -> Choice1Of2 (EnumCase ( _1, _3, _5, xmlDoc, mDecl))) 
                   )
# 2357 "../pars.fsy"
                 : 'attrUnionCaseDecl));
# 7245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2364 "../pars.fsy"
                             _1 
                   )
# 2364 "../pars.fsy"
                 : 'unionCaseName));
# 7256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2367 "../pars.fsy"
                              ident(opNameCons, rhs parseState 2) 
                   )
# 2367 "../pars.fsy"
                 : 'unionCaseName));
# 7267 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2370 "../pars.fsy"
                              ident(opNameNil, rhs2 parseState 2 3) 
                   )
# 2370 "../pars.fsy"
                 : 'unionCaseName));
# 7278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2374 "../pars.fsy"
                             Choice2Of2 (UnionCase ( [], _1, UnionCaseFields [], PreXmlDoc.Empty, None, rhs parseState 1)) 
                   )
# 2374 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2377 "../pars.fsy"
                             Choice1Of2 (EnumCase ([], _1, _3, PreXmlDoc.Empty, rhs2 parseState 1 3)) 
                   )
# 2377 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'firstUnionCaseDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2380 "../pars.fsy"
                             _1 
                   )
# 2380 "../pars.fsy"
                 : 'firstUnionCaseDeclOfMany));
# 7315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2384 "../pars.fsy"
                            Choice2Of2 (UnionCase ( [], _1, UnionCaseFields _3, PreXmlDoc.Empty, None, rhs2 parseState 1 3)) 
                   )
# 2384 "../pars.fsy"
                 : 'firstUnionCaseDecl));
# 7327 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2387 "../pars.fsy"
                             Choice1Of2 (EnumCase ([], _1, _3, PreXmlDoc.Empty, rhs2 parseState 1 3))  
                   )
# 2387 "../pars.fsy"
                 : 'firstUnionCaseDecl));
# 7340 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2391 "../pars.fsy"
                            _1 :: _3 
                   )
# 2391 "../pars.fsy"
                 : 'unionCaseReprElements));
# 7352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElement)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2394 "../pars.fsy"
                            [_1] 
                   )
# 2394 "../pars.fsy"
                 : 'unionCaseReprElements));
# 7363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2398 "../pars.fsy"
                            mkNamedField(_1, _3) 
                   )
# 2398 "../pars.fsy"
                 : 'unionCaseReprElement));
# 7375 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2401 "../pars.fsy"
                            mkAnonField _1 
                   )
# 2401 "../pars.fsy"
                 : 'unionCaseReprElement));
# 7386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2405 "../pars.fsy"
                            errorR(Deprecated(FSComp.SR.parsConsiderUsingSeparateRecordType(), lhs parseState)) 
                            _1 
                   )
# 2405 "../pars.fsy"
                 : 'unionCaseRepr));
# 7398 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseReprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2409 "../pars.fsy"
                            _1 
                   )
# 2409 "../pars.fsy"
                 : 'unionCaseRepr));
# 7409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDeclList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2414 "../pars.fsy"
                            _1 :: _3 
                   )
# 2414 "../pars.fsy"
                 : 'recdFieldDeclList));
# 7422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdFieldDecl)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2417 "../pars.fsy"
                            [_1] 
                   )
# 2417 "../pars.fsy"
                 : 'recdFieldDeclList));
# 7434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'fieldDecl)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2422 "../pars.fsy"
                            let wholeRange = rhs2 parseState 1 2
                            let fld = _2 _1 false wholeRange
                            let (Field (a, b, c, d, e, f, vis, wholeRange)) = fld
                            if Option.isSome vis then errorR (Error (FSComp.SR.parsRecordFieldsCannotHaveVisibilityDeclarations (), rhs parseState 2))
                            Field (a, b, c, d, e, f, None, wholeRange) 
                   )
# 2422 "../pars.fsy"
                 : 'recdFieldDecl));
# 7450 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2431 "../pars.fsy"
                            let xmlDoc = grabXmlDoc (parseState, 3)
                            fun attrs stat wholeRange -> Field(attrs, stat, Some _3, _5, _1, xmlDoc, _2, wholeRange) 
                   )
# 2431 "../pars.fsy"
                 : 'fieldDecl));
# 7465 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExceptionDefnRepr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_classDefn)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2437 "../pars.fsy"
                            SynExceptionDefn(_1, _2, (_1.Range, _2) ||> unionRangeWithListBy (fun cd -> cd.Range) ) 
                   )
# 2437 "../pars.fsy"
                 : SyntaxTree.SynExceptionDefn));
# 7477 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2442 "../pars.fsy"
                            grabXmlDoc(parseState, 1) 
                   )
# 2442 "../pars.fsy"
                 : 'exceptionAndGrabDoc));
# 7487 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'exceptionAndGrabDoc)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconIntro)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'exconRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2447 "../pars.fsy"
                            SynExceptionDefnRepr(_2, _4, _5, _1, _3, (match _5 with None -> rhs2 parseState 1 4 | Some p -> unionRanges (rangeOfLongIdent p) (rhs2 parseState 1 4))) 
                   )
# 2447 "../pars.fsy"
                 : SyntaxTree.SynExceptionDefnRepr));
# 7502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2452 "../pars.fsy"
                             UnionCase([], _1, UnionCaseFields [], PreXmlDoc.Empty, None, lhs parseState) 
                   )
# 2452 "../pars.fsy"
                 : 'exconIntro));
# 7513 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'unionCaseRepr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2455 "../pars.fsy"
                             UnionCase([], _1, UnionCaseFields _3, PreXmlDoc.Empty, None, lhs parseState) 
                   )
# 2455 "../pars.fsy"
                 : 'exconIntro));
# 7525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2459 "../pars.fsy"
                            None 
                   )
# 2459 "../pars.fsy"
                 : 'exconRepr));
# 7535 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2462 "../pars.fsy"
                            Some (_2.Lid) 
                   )
# 2462 "../pars.fsy"
                 : 'exconRepr));
# 7546 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2465 "../pars.fsy"
                                     _2 
                   )
# 2465 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 7557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2473 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2 
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs2 parseState 1 2 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // The first binding swallows any attributes prior to the 'let'
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                                 (fun attrs vis -> 
                                     // apply the builder
                                     let binds = localBindingsBuilder attrs vis mLetKwd
                                     if not isRec && not (isNilOrSingleton binds) then 
                                           reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                     [], binds),
                                 bindingSetRange) 
                   )
# 2473 "../pars.fsy"
                 : 'defnBindings));
# 7588 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cPrototype)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2495 "../pars.fsy"
                             let bindRange = lhs parseState
                             BindingSetPreAttrs(bindRange, false, false, _1, bindRange)  
                   )
# 2495 "../pars.fsy"
                 : 'defnBindings));
# 7600 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2502 "../pars.fsy"
                             let mDoKwd = rhs parseState 1 
                             let mWhole = unionRanges mDoKwd _2.Range
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mDoKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, mWhole)]), mWhole) 
                   )
# 2502 "../pars.fsy"
                 : 'doBinding));
# 7615 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_rec)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2512 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let isUse = _1
                             let isRec = _2
                             _4 (if isUse then "use" else "let") mLetKwd  // report unterminated error 
                             
                             let localBindingsLastRangeOpt, localBindingsBuilder = _3
                             
                             // Calculate the precise range of the binding set, up to the end of the last r.h.s. expression
                             let bindingSetRange = 
                                 match localBindingsLastRangeOpt with 
                                 | None -> rhs parseState 1 (* there was some error - this will be an approximate range *)
                                 | Some lastRange -> unionRanges mLetKwd lastRange
                             // the first binding swallow any attributes prior to the 'let' 
                             BindingSetPreAttrs(mLetKwd, isRec, isUse,
                               (fun attrs vis ->
                                 let binds = localBindingsBuilder attrs vis mLetKwd
                                 if not isRec && not (isNilOrSingleton binds) then
                                     reportParseErrorAt mLetKwd (FSComp.SR.parsLetAndForNonRecBindings())
                                 [], binds),
                               bindingSetRange), (unionRanges mLetKwd bindingSetRange) 
                   )
# 2512 "../pars.fsy"
                 : 'hardwhiteLetBindings));
# 7648 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2538 "../pars.fsy"
                             let mLetKwd = rhs parseState 1 
                             let bindingSetRange = unionRanges mLetKwd _2.Range 
                             let seqPt = NoDebugPointAtDoBinding 
                             // any attributes prior to the 'let' are left free, e.g. become top-level attributes 
                             // associated with the module, 'main' function or assembly depending on their target 
                             BindingSetPreAttrs(mLetKwd, false, false, (fun attrs vis -> attrs, [mkSynDoBinding (vis, true, _2, bindingSetRange)]), bindingSetRange), _2 
                   )
# 2538 "../pars.fsy"
                 : 'hardwhiteDoBinding));
# 7665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2549 "../pars.fsy"
                            _1 
                   )
# 2549 "../pars.fsy"
                 : 'classDefnBindings));
# 7676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'doBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2552 "../pars.fsy"
                            _1 
                   )
# 2552 "../pars.fsy"
                 : 'classDefnBindings));
# 7687 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2555 "../pars.fsy"
                            let b, m = _1 in b 
                   )
# 2555 "../pars.fsy"
                 : 'classDefnBindings));
# 7698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2558 "../pars.fsy"
                            fst _1 
                   )
# 2558 "../pars.fsy"
                 : 'classDefnBindings));
# 7709 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2564 "../pars.fsy"
                            (fun _ m -> ()) 
                   )
# 2564 "../pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7719 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2567 "../pars.fsy"
                            (fun kwd m ->
                              let msg = 
                                  match kwd with 
                                  | "let!" -> FSComp.SR.parsUnmatchedLetBang() 
                                  | "use!" -> FSComp.SR.parsUnmatchedUseBang() 
                                  | "use" -> FSComp.SR.parsUnmatchedUse() 
                                  | _ (*"let" *) -> FSComp.SR.parsUnmatchedLet()
                              reportParseErrorAt m msg) 
                   )
# 2567 "../pars.fsy"
                 : 'hardwhiteDefnBindingsTerminator));
# 7737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cRetType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_access)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArgs)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2579 "../pars.fsy"
                             let rty, vis, nm, args  = _2, _3, _4, _7 
                             let xmlDoc = grabXmlDoc(parseState, 1) 
                             let nmm = rhs parseState 3 
                             let argsm = rhs parseState 6 
                             let mBindLhs = lhs parseState
                             let mWhole = lhs parseState
                             let mRhs = lhs parseState 
                             let rhsExpr = SynExpr.App (ExprAtomicFlag.NonAtomic,
                                                       false,
                                                       SynExpr.Ident (ident("failwith", rhs parseState 6)),
                                                       SynExpr.Const (SynConst.String("extern was not given a DllImport attribute", rhs parseState 8), rhs parseState 8),
                                                       mRhs)
                             (fun attrs vis -> 
                                 let bindingId = SynPat.LongIdent (LongIdentWithDots([nm], []), None, Some noInferredTypars, SynArgPats.Pats [SynPat.Tuple(false, args, argsm)], vis, nmm)
                                 let binding = mkSynBinding 
                                                   (xmlDoc, bindingId) 
                                                   (vis, false, false, mBindLhs, NoDebugPointAtInvisibleBinding, Some rty, rhsExpr, mRhs, [], attrs, None)
                                 [], [binding]) 
                   )
# 2579 "../pars.fsy"
                 : 'cPrototype));
# 7770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2601 "../pars.fsy"
                            List.rev _1 
                   )
# 2601 "../pars.fsy"
                 : 'cArgs));
# 7781 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2604 "../pars.fsy"
                            [_1] 
                   )
# 2604 "../pars.fsy"
                 : 'cArgs));
# 7792 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2606 "../pars.fsy"
                            [] 
                   )
# 2606 "../pars.fsy"
                 : 'cArgs));
# 7802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cMoreArgs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2612 "../pars.fsy"
                            _3 :: _1 
                   )
# 2612 "../pars.fsy"
                 : 'cMoreArgs));
# 7814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'cArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2615 "../pars.fsy"
                            [_3; _1] 
                   )
# 2615 "../pars.fsy"
                 : 'cMoreArgs));
# 7826 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2621 "../pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Wild m, _2, m) |> addAttribs _1 
                   )
# 2621 "../pars.fsy"
                 : 'cArg));
# 7838 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2624 "../pars.fsy"
                            let m = lhs parseState in SynPat.Typed(SynPat.Named (SynPat.Wild m, _3, false, None, m), _2, m) |> addAttribs _1 
                   )
# 2624 "../pars.fsy"
                 : 'cArg));
# 7851 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2629 "../pars.fsy"
                            let m = _1.Range
                            SynType.App(SynType.LongIdent(_1), None, [], [], None, false, m) 
                   )
# 2629 "../pars.fsy"
                 : 'cType));
# 7863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2633 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("[]", m)], [])), None, [_1], [], None, true, m) 
                   )
# 2633 "../pars.fsy"
                 : 'cType));
# 7876 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2637 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeptr", m)], [])), None, [_1], [], None, true, m) 
                   )
# 2637 "../pars.fsy"
                 : 'cType));
# 7888 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2641 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("byref", m)], [])), None, [_1], [], None, true, m) 
                   )
# 2641 "../pars.fsy"
                 : 'cType));
# 7900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2645 "../pars.fsy"
                            let m = lhs parseState 
                            SynType.App(SynType.LongIdent(LongIdentWithDots([ident("nativeint", m)], [])), None, [], [], None, true, m) 
                   )
# 2645 "../pars.fsy"
                 : 'cType));
# 7911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'cType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2652 "../pars.fsy"
                            SynReturnInfo((_2, SynArgInfo(_1, false, None)), rhs parseState 2) 
                   )
# 2652 "../pars.fsy"
                 : 'cRetType));
# 7923 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2655 "../pars.fsy"
                            let m = rhs parseState 2 
                            SynReturnInfo((SynType.App(SynType.LongIdent(LongIdentWithDots([ident("unit", m)], [])), None, [], [], None, false, m), SynArgInfo(_1, false, None)), m) 
                   )
# 2655 "../pars.fsy"
                 : 'cRetType));
# 7935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2661 "../pars.fsy"
                             let (moreBindings, moreBindingRanges) = List.unzip _2
                             let moreLocalBindingsLastRange = if moreBindingRanges.IsEmpty then None else Some (List.last moreBindingRanges)
                             match _1 with 
                             | Some (localBindingRange, attrLocalBindingBuilder) -> 
                                let lastRange = 
                                    match moreLocalBindingsLastRange with 
                                    | None -> localBindingRange 
                                    | Some m -> m
                                Some lastRange, (fun attrs vis mLetKwd -> attrLocalBindingBuilder attrs vis mLetKwd true ::  moreBindings)
                             | None -> 
                                moreLocalBindingsLastRange, (fun _attrs _vis _letm -> moreBindings) 
                   )
# 2661 "../pars.fsy"
                 : 'localBindings));
# 7957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'attr_localBinding)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreLocalBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2676 "../pars.fsy"
                             let mLetKwd = rhs parseState 1
                             (match _2 with 
                              | Some (localBindingRange, attrLocalBindingBuilder) -> (attrLocalBindingBuilder [] None mLetKwd false, localBindingRange) :: _3 
                              | None -> _3) 
                   )
# 2676 "../pars.fsy"
                 : 'moreLocalBindings));
# 7972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2682 "../pars.fsy"
                             [] 
                   )
# 2682 "../pars.fsy"
                 : 'moreLocalBindings));
# 7982 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2688 "../pars.fsy"
                             let attrs2 = _1
                             let localBindingRange, localBindingBuilder = _2
                             let attrLocalBindingBuilder = (fun attrs vis mLetKwd _ -> localBindingBuilder (attrs@attrs2) vis mLetKwd)
                             Some(localBindingRange, attrLocalBindingBuilder) 
                   )
# 2688 "../pars.fsy"
                 : 'attr_localBinding));
# 7997 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2694 "../pars.fsy"
                             None 
                   )
# 2694 "../pars.fsy"
                 : 'attr_localBinding));
# 8007 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizationsBlock)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2700 "../pars.fsy"
                             let (expr:SynExpr), opts = _6
                             let eqm = rhs parseState 5 
                             let mRhs = expr.Range 
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingRange = unionRanges (rhs2 parseState 3 5) mRhs
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let mWhole = unionRanges mLetKwd mRhs
                                 let spBind = if IsControlFlowExpression expr then NoDebugPointAtLetBinding else DebugPointAtBinding mWhole
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, expr, mRhs, opts, attrs, None))
                             localBindingRange, localBindingBuilder 
                   )
# 2700 "../pars.fsy"
                 : 'localBinding));
# 8033 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2714 "../pars.fsy"
                             let mWhole = rhs2 parseState 3 5 
                             let mRhs = rhs parseState 5
                             let optReturnType = _4 
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = DebugPointAtBinding (unionRanges mLetKwd mRhs)
                                 let eqm = rhs parseState 5
                                 let zeroWidthAtEnd = eqm.EndRange
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, arbExpr("localBinding1", zeroWidthAtEnd), mRhs, [], attrs, None))  
                             mWhole, localBindingBuilder 
                   )
# 2714 "../pars.fsy"
                 : 'localBinding));
# 8057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inline)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_mutable)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bindingPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topReturnTypeWithTypeConstraints)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2727 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 5) (FSComp.SR.parsUnexpectedEndOfFileDefinition())
                             let optReturnType = _4 
                             let mWhole = match optReturnType with None -> rhs parseState 3 | Some _ -> rhs2 parseState 3 4
                             let mRhs = mWhole.EndRange  // zero-width range at end of last good token
                             let bindingBuilder, mBindLhs = _3 
                             let localBindingBuilder = 
                               (fun attrs vis mLetKwd -> 
                                 let spBind = DebugPointAtBinding (unionRanges mLetKwd mRhs)
                                 bindingBuilder (vis, _1, _2, mBindLhs, spBind, optReturnType, arbExpr("localBinding2", mRhs), mRhs, [], attrs, None))  
                             mWhole, localBindingBuilder 
                   )
# 2727 "../pars.fsy"
                 : 'localBinding));
# 8081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2742 "../pars.fsy"
                             _2 
                   )
# 2742 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 8093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2745 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFile())
                             let a, b = _2
                             (exprFromParseError a, b) 
                   )
# 2745 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 8107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedExprWithStaticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2750 "../pars.fsy"
                             _1 
                   )
# 2750 "../pars.fsy"
                 : 'typedExprWithStaticOptimizationsBlock));
# 8118 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2754 "../pars.fsy"
                             _1, List.rev _2 
                   )
# 2754 "../pars.fsy"
                 : 'typedExprWithStaticOptimizations));
# 8130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_staticOptimizations)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimization)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2758 "../pars.fsy"
                             _2 :: _1 
                   )
# 2758 "../pars.fsy"
                 : 'opt_staticOptimizations));
# 8142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2761 "../pars.fsy"
                             [] 
                   )
# 2761 "../pars.fsy"
                 : 'opt_staticOptimizations));
# 8152 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2765 "../pars.fsy"
                             (_2, _4) 
                   )
# 2765 "../pars.fsy"
                 : 'staticOptimization));
# 8164 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationConditions)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2769 "../pars.fsy"
                             _3 :: _1 
                   )
# 2769 "../pars.fsy"
                 : 'staticOptimizationConditions));
# 8176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticOptimizationCondition)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2772 "../pars.fsy"
                             [_1 ] 
                   )
# 2772 "../pars.fsy"
                 : 'staticOptimizationConditions));
# 8187 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2776 "../pars.fsy"
                             WhenTyparTyconEqualsTycon(_1, _3, lhs parseState) 
                   )
# 2776 "../pars.fsy"
                 : 'staticOptimizationCondition));
# 8199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2779 "../pars.fsy"
                             WhenTyparIsStruct(_1, lhs parseState) 
                   )
# 2779 "../pars.fsy"
                 : 'staticOptimizationCondition));
# 8210 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : sbyte * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2783 "../pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideEightBitSigned(), lhs parseState))
                           SynConst.SByte (fst _1) 
                   )
# 2783 "../pars.fsy"
                 : 'rawConstant));
# 8222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2787 "../pars.fsy"
                           SynConst.Byte _1 
                   )
# 2787 "../pars.fsy"
                 : 'rawConstant));
# 8233 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int16 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2790 "../pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixteenBitSigned(), lhs parseState))
                           SynConst.Int16 (fst _1) 
                   )
# 2790 "../pars.fsy"
                 : 'rawConstant));
# 8245 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint16)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2794 "../pars.fsy"
                           SynConst.UInt16 _1 
                   )
# 2794 "../pars.fsy"
                 : 'rawConstant));
# 8256 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2797 "../pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynConst.Int32 (fst _1) 
                   )
# 2797 "../pars.fsy"
                 : 'rawConstant));
# 8268 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint32)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2801 "../pars.fsy"
                           SynConst.UInt32 _1 
                   )
# 2801 "../pars.fsy"
                 : 'rawConstant));
# 8279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2804 "../pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideSixtyFourBitSigned(), lhs parseState))
                           SynConst.Int64 (fst _1) 
                   )
# 2804 "../pars.fsy"
                 : 'rawConstant));
# 8291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2808 "../pars.fsy"
                           SynConst.UInt64 _1 
                   )
# 2808 "../pars.fsy"
                 : 'rawConstant));
# 8302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2811 "../pars.fsy"
                           SynConst.IntPtr _1 
                   )
# 2811 "../pars.fsy"
                 : 'rawConstant));
# 8313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : uint64)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2814 "../pars.fsy"
                           SynConst.UIntPtr _1 
                   )
# 2814 "../pars.fsy"
                 : 'rawConstant));
# 8324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : single)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2817 "../pars.fsy"
                           SynConst.Single _1 
                   )
# 2817 "../pars.fsy"
                 : 'rawConstant));
# 8335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : double)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2820 "../pars.fsy"
                           SynConst.Double _1 
                   )
# 2820 "../pars.fsy"
                 : 'rawConstant));
# 8346 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2823 "../pars.fsy"
                           SynConst.Char _1 
                   )
# 2823 "../pars.fsy"
                 : 'rawConstant));
# 8357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : System.Decimal)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2826 "../pars.fsy"
                           SynConst.Decimal _1 
                   )
# 2826 "../pars.fsy"
                 : 'rawConstant));
# 8368 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : (string * string))) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2829 "../pars.fsy"
                           SynConst.UserNum _1 
                   )
# 2829 "../pars.fsy"
                 : 'rawConstant));
# 8379 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2832 "../pars.fsy"
                           SynConst.String (_1, lhs parseState) 
                   )
# 2832 "../pars.fsy"
                 : 'rawConstant));
# 8390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : byte[])) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2835 "../pars.fsy"
                           SynConst.Bytes (_1, lhs parseState) 
                   )
# 2835 "../pars.fsy"
                 : 'rawConstant));
# 8401 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2839 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _3 = 0 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _1) || (snd _3) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Rational(fst _1, fst _3, lhs parseState) 
                   )
# 2839 "../pars.fsy"
                 : 'rationalConstant));
# 8417 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2845 "../pars.fsy"
                           if _3 <> "/" then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure())
                           if fst _4 = 0 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsIllegalDenominatorForMeasureExponent())
                           if (snd _2) || (snd _4) then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Rational(fst _2, fst _4, lhs parseState)) 
                   )
# 2845 "../pars.fsy"
                 : 'rationalConstant));
# 8433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2851 "../pars.fsy"
                           if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Integer(fst _1) 
                   )
# 2851 "../pars.fsy"
                 : 'rationalConstant));
# 8445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2855 "../pars.fsy"
                           if snd _2 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                           SynRationalConst.Negate(SynRationalConst.Integer(fst _2)) 
                   )
# 2855 "../pars.fsy"
                 : 'rationalConstant));
# 8457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2859 "../pars.fsy"
                                 if snd _1 then errorR(Error(FSComp.SR.lexOutsideThirtyTwoBitSigned(), lhs parseState))
                                 SynRationalConst.Integer(fst _1) 
                   )
# 2859 "../pars.fsy"
                 : 'atomicUnsignedRationalConstant));
# 8469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rationalConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2863 "../pars.fsy"
                           _2 
                   )
# 2863 "../pars.fsy"
                 : 'atomicUnsignedRationalConstant));
# 8481 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2866 "../pars.fsy"
                                                          _1 
                   )
# 2866 "../pars.fsy"
                 : 'atomicRationalConstant));
# 8492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicUnsignedRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2869 "../pars.fsy"
                           SynRationalConst.Negate(_2) 
                   )
# 2869 "../pars.fsy"
                 : 'atomicRationalConstant));
# 8503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2873 "../pars.fsy"
                           _1 
                   )
# 2873 "../pars.fsy"
                 : 'constant));
# 8514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2876 "../pars.fsy"
                           SynConst.Measure(_1, _3) 
                   )
# 2876 "../pars.fsy"
                 : 'constant));
# 8526 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2880 "../pars.fsy"
                              let xmlDoc = grabXmlDoc(parseState, 1)
                              mkSynBinding (xmlDoc, _1), rhs parseState 1 
                   )
# 2880 "../pars.fsy"
                 : 'bindingPattern));
# 8538 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2888 "../pars.fsy"
                             let m = rhs parseState 1 
                             SynPat.Named(SynPat.Wild m, _1, false, None, m) 
                   )
# 2888 "../pars.fsy"
                 : 'simplePattern));
# 8550 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2892 "../pars.fsy"
                             SynPat.OptionalVal(_2, rhs parseState 2) 
                   )
# 2892 "../pars.fsy"
                 : 'simplePattern));
# 8561 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2895 "../pars.fsy"
                             SynPat.Typed(_1, _3, lhs parseState) 
                   )
# 2895 "../pars.fsy"
                 : 'simplePattern));
# 8573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2898 "../pars.fsy"
                             SynPat.Attrib(_2, _1, lhs parseState) 
                   )
# 2898 "../pars.fsy"
                 : 'simplePattern));
# 8585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2902 "../pars.fsy"
                             _1 
                   )
# 2902 "../pars.fsy"
                 : 'simplePatternCommaList));
# 8596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2905 "../pars.fsy"
                             match _3 with
                             | SynPat.Tuple(_, pats, _) -> SynPat.Tuple(false, _1 :: pats, rhs2 parseState 1 3)
                             | _ -> SynPat.Tuple(false, [_1; _3], rhs2 parseState 1 3) 
                   )
# 2905 "../pars.fsy"
                 : 'simplePatternCommaList));
# 8610 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2911 "../pars.fsy"
                             let parenPat = SynPat.Paren(_2, rhs2 parseState 1 3)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
# 2911 "../pars.fsy"
                 : 'simplePatterns));
# 8624 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2916 "../pars.fsy"
                             let pat = SynPat.Const(SynConst.Unit, rhs2 parseState 1 2)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
# 2916 "../pars.fsy"
                 : 'simplePatterns));
# 8637 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'simplePatternCommaList)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2921 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let parenPat = SynPat.Paren(SynPat.Tuple(false, [], rhs2 parseState 1 2), rhs2 parseState 1 2) // todo: report parsed pats anyway?
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
# 2921 "../pars.fsy"
                 : 'simplePatterns));
# 8652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2927 "../pars.fsy"
                             let parenPat = SynPat.Paren(SynPat.Wild(rhs parseState 2), rhs2 parseState 1 3) // silent recovery
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator parenPat
                             simplePats 
                   )
# 2927 "../pars.fsy"
                 : 'simplePatterns));
# 8665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2932 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let pat = SynPat.Wild(lhs parseState)
                             let simplePats, _ = SimplePatsOfPat parseState.SynArgNameGenerator pat
                             simplePats 
                   )
# 2932 "../pars.fsy"
                 : 'simplePatterns));
# 8679 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2940 "../pars.fsy"
                             SynPat.Named (_1, _3, false, None, rhs2 parseState 1 3) 
                   )
# 2940 "../pars.fsy"
                 : SyntaxTree.SynPat));
# 8691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2943 "../pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
# 2943 "../pars.fsy"
                 : SyntaxTree.SynPat));
# 8703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2946 "../pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3)], None, lhs parseState) 
                   )
# 2946 "../pars.fsy"
                 : SyntaxTree.SynPat));
# 8715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2949 "../pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
# 2949 "../pars.fsy"
                 : SyntaxTree.SynPat));
# 8726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2952 "../pars.fsy"
                             SynPat.Ands(List.rev _1, lhs parseState) 
                   )
# 2952 "../pars.fsy"
                 : SyntaxTree.SynPat));
# 8737 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2955 "../pars.fsy"
                             _1 
                   )
# 2955 "../pars.fsy"
                 : SyntaxTree.SynPat));
# 8748 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tuplePatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2959 "../pars.fsy"
                             _3 :: _1 
                   )
# 2959 "../pars.fsy"
                 : 'tuplePatternElements));
# 8760 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2962 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 2962 "../pars.fsy"
                 : 'tuplePatternElements));
# 8772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2966 "../pars.fsy"
                            _3 :: _1 
                   )
# 2966 "../pars.fsy"
                 : 'conjPatternElements));
# 8784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2969 "../pars.fsy"
                            _3 :: _1 :: [] 
                   )
# 2969 "../pars.fsy"
                 : 'conjPatternElements));
# 8796 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2973 "../pars.fsy"
                            [_1], lhs parseState 
                   )
# 2973 "../pars.fsy"
                 : 'namePatPairs));
# 8808 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPair)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2976 "../pars.fsy"
                            let (rs, _) = _3 in (_1 :: rs), lhs parseState 
                   )
# 2976 "../pars.fsy"
                 : 'namePatPairs));
# 8821 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2980 "../pars.fsy"
                            (_1, _3) 
                   )
# 2980 "../pars.fsy"
                 : 'namePatPair));
# 8833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'explicitValTyparDecls)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2984 "../pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, Some _2, SynArgPats.Pats [], vis, lhs parseState) 
                   )
# 2984 "../pars.fsy"
                 : 'constrPattern));
# 8845 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2987 "../pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _3, vis, lhs parseState) 
                   )
# 2987 "../pars.fsy"
                 : 'constrPattern));
# 8858 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2990 "../pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _4, vis, lhs parseState) 
                   )
# 2990 "../pars.fsy"
                 : 'constrPattern));
# 8871 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_explicitValTyparDecls2)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatsOrNamePatPairs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2993 "../pars.fsy"
                             let vis, lid = _1 in SynPat.LongIdent (lid, None, _2, _4, vis, lhs parseState) 
                   )
# 2993 "../pars.fsy"
                 : 'constrPattern));
# 8884 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2996 "../pars.fsy"
                             SynPat.IsInst(_2, lhs parseState) 
                   )
# 2996 "../pars.fsy"
                 : 'constrPattern));
# 8895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 2999 "../pars.fsy"
                             _1 
                   )
# 2999 "../pars.fsy"
                 : 'constrPattern));
# 8906 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'namePatPairs)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3003 "../pars.fsy"
                             SynArgPats.NamePatPairs _2 
                   )
# 3003 "../pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8918 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3006 "../pars.fsy"
                             SynArgPats.Pats _1 
                   )
# 3006 "../pars.fsy"
                 : 'atomicPatsOrNamePatPairs));
# 8929 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3010 "../pars.fsy"
                             _1 :: _2 
                   )
# 3010 "../pars.fsy"
                 : 'atomicPatterns));
# 8941 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3013 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
# 3013 "../pars.fsy"
                 : 'atomicPatterns));
# 8954 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3017 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessivePatternsShouldBeSpacedOrTupled())
                             _1 :: _3 
                   )
# 3017 "../pars.fsy"
                 : 'atomicPatterns));
# 8967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3021 "../pars.fsy"
                             [_1] 
                   )
# 3021 "../pars.fsy"
                 : 'atomicPatterns));
# 8978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3026 "../pars.fsy"
                             SynPat.QuoteExpr(_1, lhs parseState) 
                   )
# 3026 "../pars.fsy"
                 : 'atomicPattern));
# 8989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : char)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3029 "../pars.fsy"
                             SynPat.DeprecatedCharRange (_1, _3, rhs2 parseState 1 3) 
                   )
# 3029 "../pars.fsy"
                 : 'atomicPattern));
# 9001 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3032 "../pars.fsy"
                             let rs, m = _2 in SynPat.Record (rs, rhs2 parseState 1 3) 
                   )
# 3032 "../pars.fsy"
                 : 'atomicPattern));
# 9013 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3035 "../pars.fsy"
                             SynPat.ArrayOrList(false, _2, lhs parseState) 
                   )
# 3035 "../pars.fsy"
                 : 'atomicPattern));
# 9024 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3038 "../pars.fsy"
                             SynPat.ArrayOrList(true, _2, lhs parseState) 
                   )
# 3038 "../pars.fsy"
                 : 'atomicPattern));
# 9035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3041 "../pars.fsy"
                             SynPat.Wild (lhs parseState) 
                   )
# 3041 "../pars.fsy"
                 : 'atomicPattern));
# 9045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3044 "../pars.fsy"
                             SynPat.OptionalVal(_2, lhs parseState) 
                   )
# 3044 "../pars.fsy"
                 : 'atomicPattern));
# 9056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatternLongIdent)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3047 "../pars.fsy"
                             let vis, lidwd = _1 
                             if not (isNilOrSingleton lidwd.Lid) || (let c = (List.head lidwd.Lid).idText.[0] in Char.IsUpper(c) && not (Char.IsLower c)) 
                             then mkSynPatMaybeVar lidwd vis (lhs parseState)
                             else mkSynPatVar vis (List.head lidwd.Lid) 
                   )
# 3047 "../pars.fsy"
                 : 'atomicPattern));
# 9070 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3053 "../pars.fsy"
                             SynPat.Const (_1, _1.Range (lhs parseState)) 
                   )
# 3053 "../pars.fsy"
                 : 'atomicPattern));
# 9081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3056 "../pars.fsy"
                             SynPat.Const(SynConst.Bool false, lhs parseState) 
                   )
# 3056 "../pars.fsy"
                 : 'atomicPattern));
# 9091 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3059 "../pars.fsy"
                             SynPat.Const(SynConst.Bool true, lhs parseState) 
                   )
# 3059 "../pars.fsy"
                 : 'atomicPattern));
# 9101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3062 "../pars.fsy"
                             SynPat.Null(lhs parseState) 
                   )
# 3062 "../pars.fsy"
                 : 'atomicPattern));
# 9111 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3065 "../pars.fsy"
                             let m = (lhs parseState)
                             SynPat.Paren(_2 m, m) 
                   )
# 3065 "../pars.fsy"
                 : 'atomicPattern));
# 9124 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPatternBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3069 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             patFromParseError (_2 (rhs2 parseState 1 2)) 
                   )
# 3069 "../pars.fsy"
                 : 'atomicPattern));
# 9137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3073 "../pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 3073 "../pars.fsy"
                 : 'atomicPattern));
# 9148 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3076 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             SynPat.Wild (lhs parseState)
                   )
# 3076 "../pars.fsy"
                 : 'atomicPattern));
# 9160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3080 "../pars.fsy"
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
# 3080 "../pars.fsy"
                 : 'atomicPattern));
# 9172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3083 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                             SynPat.Tuple(true, List.rev _3, lhs parseState) 
                   )
# 3083 "../pars.fsy"
                 : 'atomicPattern));
# 9185 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3087 "../pars.fsy"
                             (* silent recovery *) SynPat.Wild (lhs parseState) 
                   )
# 3087 "../pars.fsy"
                 : 'atomicPattern));
# 9196 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3090 "../pars.fsy"
                              reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()); 
                              SynPat.Wild (lhs parseState)
                   )
# 3090 "../pars.fsy"
                 : 'atomicPattern));
# 9208 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3095 "../pars.fsy"
                             (fun m -> _1) 
                   )
# 3095 "../pars.fsy"
                 : 'parenPatternBody));
# 9219 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3098 "../pars.fsy"
                             (fun m -> SynPat.Const(SynConst.Unit, m)) 
                   )
# 3098 "../pars.fsy"
                 : 'parenPatternBody));
# 9229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3127 "../pars.fsy"
                             SynPat.Named (_1, _3, false, None, rhs2 parseState 1 3) 
                   )
# 3127 "../pars.fsy"
                 : 'parenPattern));
# 9241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3130 "../pars.fsy"
                             SynPat.Or(_1, _3, rhs2 parseState 1 3) 
                   )
# 3130 "../pars.fsy"
                 : 'parenPattern));
# 9253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3133 "../pars.fsy"
                             SynPat.Tuple(false, List.rev _1, lhs parseState) 
                   )
# 3133 "../pars.fsy"
                 : 'parenPattern));
# 9264 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3136 "../pars.fsy"
                             SynPat.Ands(List.rev _1, rhs2 parseState 1 3) 
                   )
# 3136 "../pars.fsy"
                 : 'parenPattern));
# 9275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3139 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Typed(_1, _3, lhsm) 
                   )
# 3139 "../pars.fsy"
                 : 'parenPattern));
# 9288 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3143 "../pars.fsy"
                             let lhsm = lhs parseState 
                             SynPat.Attrib(_2, _1, lhsm) 
                   )
# 3143 "../pars.fsy"
                 : 'parenPattern));
# 9301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3147 "../pars.fsy"
                             SynPat.LongIdent (LongIdentWithDots(mkSynCaseName (rhs parseState 2) opNameCons, []), None, None, SynArgPats.Pats [ SynPat.Tuple (false, [_1;_3], rhs2 parseState 1 3) ], None, lhs parseState) 
                   )
# 3147 "../pars.fsy"
                 : 'parenPattern));
# 9313 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constrPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3149 "../pars.fsy"
                                         _1 
                   )
# 3149 "../pars.fsy"
                 : 'parenPattern));
# 9324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3153 "../pars.fsy"
                             _3 :: _1 
                   )
# 3153 "../pars.fsy"
                 : 'tupleParenPatternElements));
# 9336 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3156 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 3156 "../pars.fsy"
                 : 'tupleParenPatternElements));
# 9348 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'conjParenPatternElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3160 "../pars.fsy"
                             _3 :: _1 
                   )
# 3160 "../pars.fsy"
                 : 'conjParenPatternElements));
# 9360 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3163 "../pars.fsy"
                             _3 :: _1 :: [] 
                   )
# 3163 "../pars.fsy"
                 : 'conjParenPatternElements));
# 9372 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3167 "../pars.fsy"
                             [_1], lhs parseState 
                   )
# 3167 "../pars.fsy"
                 : 'recordPatternElementsAux));
# 9384 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElement)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recordPatternElementsAux)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3170 "../pars.fsy"
                             let r = _1 in let (rs, dropMark) = _3 in (r :: rs), lhs parseState 
                   )
# 3170 "../pars.fsy"
                 : 'recordPatternElementsAux));
# 9397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3173 "../pars.fsy"
                                                    (List.frontAndBack _1.Lid, _3) 
                   )
# 3173 "../pars.fsy"
                 : 'recordPatternElement));
# 9409 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3177 "../pars.fsy"
                             [] 
                   )
# 3177 "../pars.fsy"
                 : 'listPatternElements));
# 9419 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3180 "../pars.fsy"
                             [_1] 
                   )
# 3180 "../pars.fsy"
                 : 'listPatternElements));
# 9431 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'listPatternElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3183 "../pars.fsy"
                             _1 :: _3 
                   )
# 3183 "../pars.fsy"
                 : 'listPatternElements));
# 9444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3188 "../pars.fsy"
                             _2 
                   )
# 3188 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9456 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3191 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                             exprFromParseError _2 
                   )
# 3191 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9469 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3195 "../pars.fsy"
                             _1 
                   )
# 3195 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9480 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3200 "../pars.fsy"
                             _2 
                   )
# 3200 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3203 "../pars.fsy"
                             _1 
                   )
# 3203 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9503 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3209 "../pars.fsy"
                           _1 
                   )
# 3209 "../pars.fsy"
                 : 'typedSeqExprBlockR));
# 9514 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3212 "../pars.fsy"
                           _1 
                   )
# 3212 "../pars.fsy"
                 : 'typedSeqExprBlockR));
# 9525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3216 "../pars.fsy"
                           SynExpr.Typed (_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 3216 "../pars.fsy"
                 : 'typedSeqExpr));
# 9537 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3219 "../pars.fsy"
                           _1 
                   )
# 3219 "../pars.fsy"
                 : 'typedSeqExpr));
# 9548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3223 "../pars.fsy"
                           checkEndOfFileError _2; _1 
                   )
# 3223 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3227 "../pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, true, _1, _3, unionRanges _1.Range _3.Range) 
                   )
# 3227 "../pars.fsy"
                 : 'seqExpr));
# 9573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3230 "../pars.fsy"
                             _1 
                   )
# 3230 "../pars.fsy"
                 : 'seqExpr));
# 9585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3233 "../pars.fsy"
                             _1 
                   )
# 3233 "../pars.fsy"
                 : 'seqExpr));
# 9596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3236 "../pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, false, _1, _3, unionRanges _1.Range _3.Range ) 
                   )
# 3236 "../pars.fsy"
                 : 'seqExpr));
# 9608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3239 "../pars.fsy"
                             SynExpr.Sequential (DebugPointAtSequential.Both, false, _1, _4, unionRanges _1.Range _4.Range) 
                   )
# 3239 "../pars.fsy"
                 : 'seqExpr));
# 9621 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3242 "../pars.fsy"
                            let hwlb, m = _1
                            let mLetKwd, isUse = match hwlb with (BindingSetPreAttrs(m, _, isUse, _, _))  -> m, isUse
                            let usedKeyword = if isUse then "use" else "let"
                            reportParseErrorAt mLetKwd (FSComp.SR.parsExpectedExpressionAfterLet(usedKeyword, usedKeyword))
                            let fauxRange = m.EndRange // zero width range at end of m
                            mkLocalBindings (m, hwlb, arbExpr("seqExpr", fauxRange)) 
                   )
# 3242 "../pars.fsy"
                 : 'seqExpr));
# 9637 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3255 "../pars.fsy"
                             debugPrint("recovering via error"); true 
                   )
# 3255 "../pars.fsy"
                 : 'recover));
# 9647 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3258 "../pars.fsy"
                             debugPrint("recovering via EOF"); false 
                   )
# 3258 "../pars.fsy"
                 : 'recover));
# 9658 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3262 "../pars.fsy"
                            let spBind = DebugPointAtBinding(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            (spBind, _1, true, _2, _4, m) :: _6 
                   )
# 3262 "../pars.fsy"
                 : 'moreBinders));
# 9674 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3267 "../pars.fsy"
                            _5 "and!" (rhs parseState 1)  // report unterminated error
                            let spBind = DebugPointAtBinding(rhs2 parseState 1 5) (* TODO Pretty sure this is wrong *)
                            let m = rhs parseState 1 (* TODO Pretty sure this is wrong *)
                            (spBind, _1, true, _2, _4, m) :: _7 
                   )
# 3267 "../pars.fsy"
                 : 'moreBinders));
# 9693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3273 "../pars.fsy"
                             [] 
                   )
# 3273 "../pars.fsy"
                 : 'moreBinders));
# 9703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3277 "../pars.fsy"
                            mkLocalBindings (unionRanges (rhs2 parseState 1 2) _3.Range, _1, _3) 
                   )
# 3277 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'defnBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3280 "../pars.fsy"
                            mkLocalBindings (rhs2 parseState 1 2, _1, arbExpr("declExpr1", (rhs parseState 3))) 
                   )
# 3280 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9726 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3286 "../pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _2.Range, hwlb, _2) 
                   )
# 3286 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3290 "../pars.fsy"
                            let hwlb, m = _1
                            reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (m, hwlb, arbExpr("declExpr2", (rhs parseState 2))) 
                   )
# 3290 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9752 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3295 "../pars.fsy"
                            let hwlb, m = _1
                            mkLocalBindings (unionRanges m _3.Range, hwlb, _3) 
                   )
# 3295 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9765 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteLetBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3299 "../pars.fsy"
                            let hwlb, m = _1
                            //reportParseErrorAt (match hwlb with (BindingSetPreAttrs(m, _, _, _, _))  -> m) (FSComp.SR.parsErrorInReturnForLetIncorrectIndentation())
                            mkLocalBindings (unionRanges m (rhs parseState 3), hwlb, arbExpr("declExpr3", (rhs parseState 3))) 
                   )
# 3299 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDoBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3304 "../pars.fsy"
                            let e = snd _1
                            SynExpr.Do (e, e.Range) 
                   )
# 3304 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9790 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonMatchingExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3308 "../pars.fsy"
                             _1 
                   )
# 3308 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9801 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonLambdaExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3311 "../pars.fsy"
                             _1 
                   )
# 3311 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9812 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3314 "../pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith, (clauses, mLast) = _3 
                             let spBind = DebugPointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.Match (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
# 3314 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9827 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3320 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 3320 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9841 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3325 "../pars.fsy"
                             let mMatch = (rhs parseState 1)
                             let mWith, (clauses, mLast) = _3 
                             let spBind = DebugPointAtBinding(unionRanges mMatch mWith) 
                             SynExpr.MatchBang (spBind, _2, clauses, unionRanges mMatch mLast) 
                   )
# 3325 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3331 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileMatch())
                             // Produce approximate expression during error recovery 
                             exprFromParseError _2 
                   )
# 3331 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9870 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'withClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3336 "../pars.fsy"
                             let mTry = (rhs parseState 1)
                             let spTry = DebugPointAtTry.Yes mTry
                             let mWith, (clauses, mLast) = _3 
                             let spWith = DebugPointAtWith.Yes mWith
                             let mTryToWith = unionRanges mTry mWith 
                             let mWithToLast = unionRanges mWith mLast 
                             let mTryToLast = unionRanges mTry mLast
                             SynExpr.TryWith (_2, mTryToWith, clauses, mWithToLast, mTryToLast, spTry, spWith) 
                   )
# 3336 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9889 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3346 "../pars.fsy"
                             // Produce approximate expression during error recovery 
                             // Include any expressions to make sure they gets type checked in case that generates useful results for intellisense 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTry())
                             exprFromParseError _2 
                   )
# 3346 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9904 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3352 "../pars.fsy"
                             let mTry = rhs parseState 1 
                             let spTry = DebugPointAtTry.Yes mTry
                             let spFinally = DebugPointAtFinally.Yes (rhs parseState 3) 
                             let mTryToLast = unionRanges mTry _4.Range 
                             SynExpr.TryFinally (_2, _4, mTryToLast, spTry, spFinally) 
                   )
# 3352 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9920 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3359 "../pars.fsy"
                             let mIf = (rhs parseState 1)
                             _3 _2 mIf 
                   )
# 3359 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9933 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3363 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf()) 
                             // Produce an approximate expression during error recovery. 
                             // Include expressions to make sure they get type checked in case that generates useful results for intellisense. 
                             // Generate a throwAway for the expression so it isn't forced to have a type 'bool' 
                             // from the context it is used in. 
                             exprFromParseError _2 
                   )
# 3363 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9950 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3371 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsIncompleteIf())
                             // Produce an approximate expression during error recovery. There can still be value in doing this even
                             // for this pathological case.
                             let m = rhs parseState 1
                             let mEnd = m.EndRange
                             let spIfToThen = DebugPointAtBinding mEnd
                             exprFromParseError (SynExpr.IfThenElse (arbExpr("ifGuard1", mEnd), arbExpr("thenBody1", mEnd), None, spIfToThen, true, m, m)) 
                   )
# 3371 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9967 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3380 "../pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3380 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3383 "../pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3383 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3386 "../pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3386 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 9999 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3389 "../pars.fsy"
                             SynExpr.Lazy (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3389 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3392 "../pars.fsy"
                             SynExpr.Assert (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3392 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3395 "../pars.fsy"
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.parsAssertIsNotFirstClassValue()) 
                   )
# 3395 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3398 "../pars.fsy"
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.While (spWhile, _2, _4, mWhileAll) 
                   )
# 3398 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10048 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3404 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.While (spWhile, _2, _4, mWhileAll)) 
                   )
# 3404 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10066 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3411 "../pars.fsy"
                             // silent recovery 
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = unionRanges (rhs parseState 4) (rhs parseState 5)
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 5)
                             SynExpr.While (spWhile, _2, arbExpr("whileBody1", mWhileBodyArb), mWhileAll) 
                   )
# 3411 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10084 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3419 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsWhileDoExpected())
                             let mWhileHeader = unionRanges (rhs parseState 1) _2.Range
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, _2, arbExpr("whileBody2", mWhileBodyArb), mWhileAll))  
                   )
# 3419 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10101 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3427 "../pars.fsy"
                             if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWhile())
                             arbExpr("whileLoop1", rhs parseState 1)  
                   )
# 3427 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10113 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3431 "../pars.fsy"
                             //silent recovery
                             let mWhileHeader = rhs parseState 1
                             let spWhile = DebugPointAtWhile.Yes mWhileHeader 
                             let mWhileBodyArb = rhs parseState 3
                             let mWhileAll = unionRanges (rhs parseState 1) (rhs parseState 3)
                             exprFromParseError (SynExpr.While (spWhile, arbExpr("whileGuard1", mWhileHeader), arbExpr("whileBody3", mWhileBodyArb), mWhileAll))  
                   )
# 3431 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10129 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3439 "../pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3439 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10146 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3445 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, _4, mForLoopAll) 
                   )
# 3445 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10165 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3453 "../pars.fsy"
                             // Silent recovery
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2a", mForLoopBodyArb), mForLoopAll) 
                   )
# 3453 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3462 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, _) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody2", mForLoopBodyArb), mForLoopAll) 
                   )
# 3462 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10203 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3471 "../pars.fsy"
                             let (a, b, ok) = _2 
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsForDoExpected())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, a, b, arbExpr("forLoopBody1", mForLoopBodyArb), mForLoopAll) 
                   )
# 3471 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3480 "../pars.fsy"
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             SynExpr.For (spBind, a, b, c, d, _4, mForLoopAll) 
                   )
# 3480 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3487 "../pars.fsy"
                             if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             // Still produce an expression
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, _4, mForLoopAll)) 
                   )
# 3487 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3496 "../pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = rhs parseState 5
                             let mForLoopAll = rhs2 parseState 1 5
                             SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll) 
                   )
# 3496 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10278 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3505 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 3
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = rhs parseState 3
                             let mForLoopAll = rhs2 parseState 1 3
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
# 3505 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10297 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3514 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let (a, b, c, d) = _2 
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.For (spBind, a, b, c, d, arbExpr("declExpr11", mForLoopBodyArb), mForLoopAll)) 
                   )
# 3514 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'doToken)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3524 "../pars.fsy"
                             // silent recovery 
                             let mForLoopHeader = rhs2 parseState 1 2
                             let mForLoopAll = unionRanges (rhs parseState 1) _4.Range
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             SynExpr.For (spBind, mkSynId mForLoopHeader "_loopVar", arbExpr("startLoopRange1", mForLoopHeader), true, arbExpr("endLoopRange1", rhs parseState 3), _4, mForLoopAll) 
                   )
# 3524 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10332 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3531 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsIdentifierExpected())
                             arbExpr("declExpr12", (rhs parseState 1)) 
                   )
# 3531 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'doneDeclEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3535 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsInOrEqualExpected())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = rhs parseState 4
                             let mForLoopAll = rhs2 parseState 1 4
                             SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll) 
                   )
# 3535 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10361 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3543 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFor())
                             let mForLoopHeader = rhs2 parseState 1 2
                             let spBind = DebugPointAtFor.Yes mForLoopHeader
                             let mForLoopBodyArb = (rhs parseState 2).EndRange
                             let mForLoopAll = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.ForEach (spBind, SeqExprOnly false, true, _2, arbExpr("forLoopCollection", mForLoopHeader), arbExpr("forLoopBody3", mForLoopBodyArb), mForLoopAll)) 
                   )
# 3543 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10378 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3551 "../pars.fsy"
                            SynExpr.YieldOrReturn ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3551 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10390 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3554 "../pars.fsy"
                            SynExpr.YieldOrReturnFrom ((_1, not _1), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3554 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10402 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3557 "../pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturn ((_1, not _1), arbExpr("yield", mYieldAll), mYieldAll) 
                   )
# 3557 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10415 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3561 "../pars.fsy"
                            let mYieldAll = rhs parseState 1
                            SynExpr.YieldOrReturnFrom ((_1, not _1), arbExpr("yield!", mYieldAll), mYieldAll) 
                   )
# 3561 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3565 "../pars.fsy"
                            let spBind = DebugPointAtBinding(rhs2 parseState 1 5)
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, _7, _8, m) 
                   )
# 3565 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10446 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _7 = (let data = parseState.GetInput(7) in (Microsoft.FSharp.Core.Operators.unbox data : 'moreBinders)) in
            let _8 = (let data = parseState.GetInput(8) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3570 "../pars.fsy"
                            _5 (if _1 = "use" then "use!" else "let!") (rhs parseState 1)  // report unterminated error 
                            let spBind = DebugPointAtBinding(unionRanges (rhs parseState 1) _4.Range)
                            let m = unionRanges (rhs parseState 1) _8.Range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, _7, _8, m) 
                   )
# 3570 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10466 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynPat)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3576 "../pars.fsy"
                            // error recovery that allows intellisense when writing incomplete computation expressions 
                            let spBind = DebugPointAtBinding(unionRanges (rhs parseState 1) _4.Range) 
                            let mAll = unionRanges (rhs parseState 1) (rhs parseState 7)
                            let m = _4.Range.EndRange // zero-width range
                            SynExpr.LetOrUseBang(spBind, (_1 = "use"), true, _2, _4, [], SynExpr.ImplicitZero m, mAll) 
                   )
# 3576 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10485 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3583 "../pars.fsy"
                            let spBind = NoDebugPointAtDoBinding
                            SynExpr.LetOrUseBang(spBind, false, true, SynPat.Const(SynConst.Unit, _2.Range), _2, [], _5, unionRanges (rhs parseState 1) _5.Range) 
                   )
# 3583 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10499 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'hardwhiteDefnBindingsTerminator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3587 "../pars.fsy"
                            SynExpr.DoBang (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3587 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10511 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopBinder)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrowThenExprR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3590 "../pars.fsy"
                            let spBind = DebugPointAtFor.Yes (rhs2 parseState 1 2)
                            let (a, b, _) = _2 in SynExpr.ForEach (spBind, SeqExprOnly true, true, a, b, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3590 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10525 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3594 "../pars.fsy"
                            SynExpr.Fixed (_2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
# 3594 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3597 "../pars.fsy"
                            errorR(Error(FSComp.SR.parsArrowUseIsLimited(), lhs parseState))
                            SynExpr.YieldOrReturn ((true, true), _2, (unionRanges (rhs parseState 1) _2.Range)) 
                   )
# 3597 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3601 "../pars.fsy"
                            SynExpr.TypeTest (_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 3601 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10560 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3604 "../pars.fsy"
                            SynExpr.Upcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 3604 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3607 "../pars.fsy"
                            SynExpr.Downcast (_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 3607 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3610 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ":=" _3 
                   )
# 3610 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3613 "../pars.fsy"
                            mkSynAssign _1 _3 
                   )
# 3613 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10608 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3616 "../pars.fsy"
                            let exprs, commas = _1
                            SynExpr.Tuple (false, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ) 
                   )
# 3616 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3620 "../pars.fsy"
                            SynExpr.JoinIn (_1, rhs parseState 2, _3, unionRanges _1.Range _3.Range) 
                   )
# 3620 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3623 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "||" _3 
                   )
# 3623 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10644 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3626 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3626 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10657 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3629 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "or" _3 
                   )
# 3629 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10669 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3632 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&" _3 
                   )
# 3632 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10681 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3635 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "&&" _3 
                   )
# 3635 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10693 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3638 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3638 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10706 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3641 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "=" _3 
                   )
# 3641 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10718 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3644 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3644 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10731 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3647 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "$" _3 
                   )
# 3647 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3650 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "<" _3 
                   )
# 3650 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10756 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3653 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<"))  
                            exprFromParseError (mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3653 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10770 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3657 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 ">" _3 
                   )
# 3657 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3660 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3660 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10796 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3663 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3663 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10809 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3666 "../pars.fsy"
                            let tupExpr = SynExpr.Tuple (false, [_1;_3], [rhs parseState 2], unionRanges _1.Range _3.Range)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range _3.Range) 
                   )
# 3666 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3670 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3670 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10835 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3673 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "-" _3 
                   )
# 3673 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10847 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3676 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 "*" _3 
                   )
# 3676 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10859 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3679 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3679 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10872 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3682 "../pars.fsy"
                            mkSynInfix (rhs parseState 2) _1 _2 _3 
                   )
# 3682 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10885 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3685 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("in")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "@in" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3685 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3689 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("||")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "||" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3689 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10909 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3693 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3693 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10922 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3697 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("or")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "or" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3697 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10934 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3701 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3701 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3705 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("&&")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "&&" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3705 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3709 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3709 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10971 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3713 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("=")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "=" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3713 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10983 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3717 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3717 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 10996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3721 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("$")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "$" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3721 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3725 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("<")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "<" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3725 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3729 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(">")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 ">" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3729 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3733 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3733 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11047 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3737 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3737 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11060 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3741 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("::")) 
                            let tupExpr = SynExpr.Tuple (false, [_1;(arbExpr("declExprInfix", (rhs parseState 3).StartRange))], [rhs parseState 2], unionRanges _1.Range (rhs parseState 3).StartRange)
                            SynExpr.App (ExprAtomicFlag.NonAtomic, true, mkSynIdGet (rhs parseState 2) opNameCons, tupExpr, unionRanges _1.Range (rhs parseState 3).StartRange) 
                   )
# 3741 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11073 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3746 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3746 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3750 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("-")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "-" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3750 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11098 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3754 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression("*")) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 "*" (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3754 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11110 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3758 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3758 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11123 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3762 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnfinishedExpression(_2)) 
                            exprFromParseError(mkSynInfix (rhs parseState 2) _1 _2 (arbExpr("declExprInfix", (rhs parseState 3).StartRange))) 
                   )
# 3762 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11136 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3765 "../pars.fsy"
                                                                  _1 
                   )
# 3765 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3769 "../pars.fsy"
                             let con = SynConst.String (_1, rhs parseState 1)
                             let arg2 = SynExpr.Const (con, con.Range (rhs parseState 1)) 
                             arg2 
                   )
# 3769 "../pars.fsy"
                 : 'dynamicArg));
# 11160 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3774 "../pars.fsy"
                             _2 
                   )
# 3774 "../pars.fsy"
                 : 'dynamicArg));
# 11172 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3778 "../pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3778 "../pars.fsy"
                 : 'withClauses));
# 11183 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3781 "../pars.fsy"
                             rhs parseState 1, _2 
                   )
# 3781 "../pars.fsy"
                 : 'withClauses));
# 11194 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3784 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileWith())
                             rhs parseState 1, _2 
                   )
# 3784 "../pars.fsy"
                 : 'withClauses));
# 11207 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3789 "../pars.fsy"
                             _1 
                   )
# 3789 "../pars.fsy"
                 : 'withPatternClauses));
# 11218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3792 "../pars.fsy"
                             _2 
                   )
# 3792 "../pars.fsy"
                 : 'withPatternClauses));
# 11229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3795 "../pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
# 3795 "../pars.fsy"
                 : 'withPatternClauses));
# 11241 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3800 "../pars.fsy"
                             // silent recovery 
                             let mLast = rhs parseState 1
                             [], mLast 
                   )
# 3800 "../pars.fsy"
                 : 'withPatternClauses));
# 11253 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3807 "../pars.fsy"
                             _1, _2, rhs parseState 1 
                   )
# 3807 "../pars.fsy"
                 : 'patternAndGuard));
# 11265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3811 "../pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = _2.Range 
                            [Clause(pat, guard, _2, patm, DebugPointForTarget.Yes)], mLast  
                   )
# 3811 "../pars.fsy"
                 : 'patternClauses));
# 11279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3816 "../pars.fsy"
                            let pat, guard, patm = _1 
                            let clauses, mLast = _4 
                            (Clause(pat, guard, _2, patm, DebugPointForTarget.Yes) :: clauses), mLast 
                   )
# 3816 "../pars.fsy"
                 : 'patternClauses));
# 11294 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3821 "../pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = rhs parseState 3 
                            // silent recovery 
                            [Clause(pat, guard, _2, patm, DebugPointForTarget.Yes)], mLast  
                   )
# 3821 "../pars.fsy"
                 : 'patternClauses));
# 11309 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3827 "../pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = _2.Range 
                            // silent recovery 
                            [Clause(pat, guard, _2, patm, DebugPointForTarget.Yes)], mLast 
                   )
# 3827 "../pars.fsy"
                 : 'patternClauses));
# 11324 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'patternAndGuard)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3833 "../pars.fsy"
                            let pat, guard, patm = _1 
                            let mLast = rhs parseState 2
                            // silent recovery 
                            [Clause(pat, guard, SynExpr.Const (SynConst.Unit, mLast.EndRange), patm, DebugPointForTarget.Yes)], mLast 
                   )
# 3833 "../pars.fsy"
                 : 'patternClauses));
# 11338 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3840 "../pars.fsy"
                            Some _2 
                   )
# 3840 "../pars.fsy"
                 : 'patternGuard));
# 11349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3843 "../pars.fsy"
                            None 
                   )
# 3843 "../pars.fsy"
                 : 'patternGuard));
# 11359 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3847 "../pars.fsy"
                            _2 
                   )
# 3847 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11370 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprThen)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprElifs)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3851 "../pars.fsy"
                             let exprThen, mThen = _1 
                             (fun exprGuard mIf -> 
                                 let mIfToThen = unionRanges mIf mThen
                                 let lastBranch : SynExpr = match _2 with None -> exprThen | Some e -> e
                                 let mIfToEndOfLastBranch = unionRanges mIf lastBranch.Range
                                 let spIfToThen = DebugPointAtBinding(mIfToThen)
                                 SynExpr.IfThenElse (exprGuard, exprThen, _2, spIfToThen, false, mIfToThen, mIfToEndOfLastBranch)) 
                   )
# 3851 "../pars.fsy"
                 : 'ifExprCases));
# 11388 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3861 "../pars.fsy"
                             _2, rhs parseState 1 
                   )
# 3861 "../pars.fsy"
                 : 'ifExprThen));
# 11399 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3864 "../pars.fsy"
                             _3, rhs parseState 1 
                   )
# 3864 "../pars.fsy"
                 : 'ifExprThen));
# 11411 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3867 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileThen())
                             exprFromParseError _3, rhs parseState 1 
                   )
# 3867 "../pars.fsy"
                 : 'ifExprThen));
# 11424 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3872 "../pars.fsy"
                             None 
                   )
# 3872 "../pars.fsy"
                 : 'ifExprElifs));
# 11434 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3875 "../pars.fsy"
                             Some _2 
                   )
# 3875 "../pars.fsy"
                 : 'ifExprElifs));
# 11445 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3878 "../pars.fsy"
                             Some _3 
                   )
# 3878 "../pars.fsy"
                 : 'ifExprElifs));
# 11457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3881 "../pars.fsy"
                             if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileElse())
                             Some (exprFromParseError _3) 
                   )
# 3881 "../pars.fsy"
                 : 'ifExprElifs));
# 11470 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ifExprCases)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3885 "../pars.fsy"
                             let mElif = rhs parseState 1 
                             Some (_3 _2 mElif) 
                   )
# 3885 "../pars.fsy"
                 : 'ifExprElifs));
# 11483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3889 "../pars.fsy"
                             Some (exprFromParseError _2) 
                   )
# 3889 "../pars.fsy"
                 : 'ifExprElifs));
# 11495 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3893 "../pars.fsy"
                             let exprs, commas = _1 in (_3 :: exprs), ((rhs parseState 2) :: commas) 
                   )
# 3893 "../pars.fsy"
                 : 'tupleExpr));
# 11507 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3896 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let exprs, commas = _1     
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange
                             ((arbExpr("tupleExpr1", zeroWidthAtNextToken)) :: exprs), (rhs parseState 2) :: commas 
                   )
# 3896 "../pars.fsy"
                 : 'tupleExpr));
# 11522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3902 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                             let zeroWidthAtNextToken = (rhs parseState 3).StartRange 
                             ((arbExpr("tupleExpr2", zeroWidthAtNextToken)) :: [_1]), [rhs parseState 2] 
                   )
# 3902 "../pars.fsy"
                 : 'tupleExpr));
# 11536 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3907 "../pars.fsy"
                             [_3 ; _1], [rhs parseState 2] 
                   )
# 3907 "../pars.fsy"
                 : 'tupleExpr));
# 11548 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3911 "../pars.fsy"
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) "~-" _2 
                   )
# 3911 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11559 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3914 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3914 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11572 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3918 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3918 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11585 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3922 "../pars.fsy"
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt _2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) _2.Range) ("~"^(_1)) _2 
                   )
# 3922 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11598 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3926 "../pars.fsy"
                             SynExpr.AddressOf (true, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3926 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11609 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3929 "../pars.fsy"
                             SynExpr.AddressOf (false, _2, rhs parseState 1, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3929 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11620 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3932 "../pars.fsy"
                             SynExpr.New (false, _2, _4, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 3932 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11633 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3935 "../pars.fsy"
                             SynExpr.New (false, _2, arbExpr("minusExpr", (rhs parseState 4)), unionRanges (rhs parseState 1) (_2).Range) 
                   )
# 3935 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11645 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3938 "../pars.fsy"
                             arbExpr("minusExpr2", (rhs parseState 1)) 
                   )
# 3938 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11655 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3941 "../pars.fsy"
                             SynExpr.InferredUpcast (_2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 3941 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11666 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3944 "../pars.fsy"
                             SynExpr.InferredDowncast (_2, unionRanges (rhs parseState 1) _2.Range)
                   )
# 3944 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11677 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3947 "../pars.fsy"
                             _1 
                   )
# 3947 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11688 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3951 "../pars.fsy"
                             SynExpr.App (ExprAtomicFlag.NonAtomic, false, _1, _2, unionRanges _1.Range _2.Range)  
                   )
# 3951 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11700 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3954 "../pars.fsy"
                             let arg, _ = _1 
                             arg 
                   )
# 3954 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3959 "../pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             if hpa2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             mkSynPrefix (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) ("~"^(_1)) arg2 
                   )
# 3959 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11727 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3965 "../pars.fsy"
                             let arg, hpa = _1 
                             if hpa then reportParseErrorAt arg.Range (FSComp.SR.parsSuccessiveArgsShouldBeSpacedOrTupled())
                             arg 
                   )
# 3965 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 11740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3971 "../pars.fsy"
                             let arg1, _ = _1 
                             let arg2, _ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), true  
                   )
# 3971 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3976 "../pars.fsy"
                             let arg1, _ = _1 
                             let arg2, _ = _3 
                             SynExpr.App (ExprAtomicFlag.Atomic, false, arg1, arg2, unionRanges arg1.Range arg2.Range), true  
                   )
# 3976 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3981 "../pars.fsy"
                             let arg1, _ = _1 
                             let mLessThan, mGreaterThan, _, args, commas, mTypeArgs = _3
                             let mWholeExpr = unionRanges arg1.Range mTypeArgs
                             SynExpr.TypeApp (arg1, mLessThan, args, commas, mGreaterThan, mTypeArgs, mWholeExpr), false 
                   )
# 3981 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11783 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3987 "../pars.fsy"
                             let arg2, hpa2 = _2 
                             if not (IsValidPrefixOperatorUse _1) then reportParseErrorAt arg2.Range (FSComp.SR.parsInvalidPrefixOperator())
                             mkSynPrefixPrim (rhs parseState 1) (unionRanges (rhs parseState 1) arg2.Range) _1 arg2, hpa2 
                   )
# 3987 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11797 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3992 "../pars.fsy"
                             let arg1, hpa1 = _1 
                             _3 arg1 (lhs parseState) (rhs parseState 2), hpa1 
                   )
# 3992 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11810 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicExprQualification)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 3996 "../pars.fsy"
                             let arg1 = SynExpr.Ident (ident("base", rhs parseState 1))
                             _3 arg1 (lhs parseState) (rhs parseState 2), false 
                   )
# 3996 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4000 "../pars.fsy"
                             SynExpr.LongIdent (true, LongIdentWithDots([_2], []), None, rhs parseState 2), false 
                   )
# 4000 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11833 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dynamicArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4003 "../pars.fsy"
                             let arg1, hpa1 = _1
                             mkSynInfix (rhs parseState 2) arg1 "?" _3, hpa1 
                   )
# 4003 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11846 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4007 "../pars.fsy"
                             SynExpr.Ident (ident(MangledGlobalName, rhs parseState 1)), false 
                   )
# 4007 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11856 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'nameop)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4010 "../pars.fsy"
                             SynExpr.Ident (_1), false 
                   )
# 4010 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11867 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4013 "../pars.fsy"
                             _2 (lhs parseState) false, false 
                   )
# 4013 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4016 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) false), false 
                   )
# 4016 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11891 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4020 "../pars.fsy"
                             // silent recovery 
                             SynExpr.ArrayOrList (false, [ ], lhs parseState), false  
                   )
# 4020 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11902 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4024 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             // silent recovery 
                             exprFromParseError (SynExpr.ArrayOrList (false, [ ], rhs parseState 1)), false  
                   )
# 4024 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4029 "../pars.fsy"
                             let exprs, commas = _3 in SynExpr.Tuple (true, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ), false 
                   )
# 4029 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11927 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4032 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedBracket()); 
                             let exprs, commas = _3 in SynExpr.Tuple (true, List.rev exprs, List.rev commas, (commas.Head, exprs) ||> unionRangeWithListBy (fun e -> e.Range) ), false 
                   )
# 4032 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11940 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4036 "../pars.fsy"
                             _1, false 
                   )
# 4036 "../pars.fsy"
                 : SyntaxTree.SynExpr * bool));
# 11951 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4040 "../pars.fsy"
                             let idm = rhs parseState 1 
                             (fun e lhsm dotm -> mkSynDot dotm lhsm e _1) 
                   )
# 4040 "../pars.fsy"
                 : 'atomicExprQualification));
# 11963 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4044 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt (rhs parseState 3) (FSComp.SR.nrGlobalUsedOnlyAsFirstName()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 4044 "../pars.fsy"
                 : 'atomicExprQualification));
# 11976 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4050 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 mkSynDotMissing dotm fixedLhsm e) 
                   )
# 4050 "../pars.fsy"
                 : 'atomicExprQualification));
# 11989 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4055 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 reportParseErrorAt dotm (FSComp.SR.parsMissingQualificationAfterDot()) 
                                 let fixedLhsm = mkRange lhsm.FileName lhsm.Start dotm.End // previous lhsm is wrong after 'recover'
                                 // Include 'e' in the returned expression but throw it away
                                 SynExpr.DiscardAfterMissingQualificationAfterDot (e, fixedLhsm)) 
                   )
# 4055 "../pars.fsy"
                 : 'atomicExprQualification));
# 12004 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4061 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 libraryOnlyError(lhs parseState)
                                 SynExpr.LibraryOnlyUnionCaseFieldGet (e, mkSynCaseName lhsm opNameCons, (fst _5), lhsm)) 
                   )
# 4061 "../pars.fsy"
                 : 'atomicExprQualification));
# 12018 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4066 "../pars.fsy"
                             (fun e lhsm dotm -> 
                                 mlCompatWarning (FSComp.SR.parsParenFormIsForML()) (lhs parseState) 
                                 mkSynDotParenGet lhsm dotm e _2) 
                   )
# 4066 "../pars.fsy"
                 : 'atomicExprQualification));
# 12032 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4071 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e _2 false)) 
                   )
# 4071 "../pars.fsy"
                 : 'atomicExprQualification));
# 12045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4075 "../pars.fsy"
                             (fun e lhsm dotm -> mkSynDotBrackSeqSliceGet lhsm dotm e _2) 
                   )
# 4075 "../pars.fsy"
                 : 'atomicExprQualification));
# 12056 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4078 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket()) 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackSeqSliceGet lhsm dotm e _2)) 
                   )
# 4078 "../pars.fsy"
                 : 'atomicExprQualification));
# 12069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4082 "../pars.fsy"
                             let mArg = rhs2 parseState 1 3
                             (fun e lhsm dotm -> mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr1", mArg)) false) 
                   )
# 4082 "../pars.fsy"
                 : 'atomicExprQualification));
# 12080 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4086 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracket())
                             let mArg = (rhs parseState 1).EndRange 
                             (fun e lhsm dotm -> exprFromParseError (mkSynDotBrackGet lhsm dotm e (arbExpr("indexerExpr2", mArg)) false)) 
                   )
# 4086 "../pars.fsy"
                 : 'atomicExprQualification));
# 12093 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRangeSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4092 "../pars.fsy"
                                                                            _1 :: _3 
                   )
# 4092 "../pars.fsy"
                 : 'optRangeSeqExpr));
# 12105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optRange)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4094 "../pars.fsy"
                                    [_1] 
                   )
# 4094 "../pars.fsy"
                 : 'optRangeSeqExpr));
# 12116 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4098 "../pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) (Some (fst _1)),
                               (snd _1),
                               mkSynOptionalExpr (rhs parseState 3) (Some (fst _3)),
                               (snd _3),
                               (rhs parseState 1),
                               (rhs parseState 3)) 
                   )
# 4098 "../pars.fsy"
                 : 'optRange));
# 12134 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4107 "../pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) (Some (fst _1)),
                               (snd _1),
                               mkSynOptionalExpr (rhs parseState 2) None,
                               false,
                               (rhs parseState 1),
                               (rhs parseState 2)) 
                   )
# 4107 "../pars.fsy"
                 : 'optRange));
# 12151 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4116 "../pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) None,
                               false,
                               mkSynOptionalExpr (rhs parseState 2) (Some (fst _2)),
                               (snd _2),
                               (rhs parseState 2),
                               (rhs parseState 1)) 
                   )
# 4116 "../pars.fsy"
                 : 'optRange));
# 12168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4125 "../pars.fsy"
                             SynIndexerArg.Two(
                               mkSynOptionalExpr (rhs parseState 1) None,
                               false,
                               (mkSynOptionalExpr (rhs parseState 1) None),
                               false,
                               (rhs parseState 1),
                               (rhs parseState 1)) 
                   )
# 4125 "../pars.fsy"
                 : 'optRange));
# 12184 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeDeclExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4134 "../pars.fsy"
                             SynIndexerArg.One((fst _1), (snd _1), (rhs parseState 1)) 
                   )
# 4134 "../pars.fsy"
                 : 'optRange));
# 12195 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4138 "../pars.fsy"
                           _1, false 
                   )
# 4138 "../pars.fsy"
                 : 'rangeDeclExpr));
# 12206 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4141 "../pars.fsy"
                           if not (parseState.LexBuffer.SupportsFeature LanguageFeature.FromEndSlicing) then 
                             raiseParseErrorAt (rhs parseState 1) (FSComp.SR.fromEndSlicingRequiresVFive())
                           if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidPrefixOperator())
                           _2, true 
                   )
# 4141 "../pars.fsy"
                 : 'rangeDeclExpr));
# 12221 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'constant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4149 "../pars.fsy"
                             SynExpr.Const (_1, _1.Range (lhs parseState)) 
                   )
# 4149 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12232 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4152 "../pars.fsy"
                             _1 
                   )
# 4152 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12243 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4155 "../pars.fsy"
                             _1 
                   )
# 4155 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12254 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4158 "../pars.fsy"
                             _1 
                   )
# 4158 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12265 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4161 "../pars.fsy"
                             SynExpr.Null (lhs parseState) 
                   )
# 4161 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12275 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4164 "../pars.fsy"
                             SynExpr.Const (SynConst.Bool false, lhs parseState) 
                   )
# 4164 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12285 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4167 "../pars.fsy"
                             SynExpr.Const (SynConst.Bool true, lhs parseState) 
                   )
# 4167 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12295 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'quoteExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4170 "../pars.fsy"
                             _1 
                   )
# 4170 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12306 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4173 "../pars.fsy"
                             _1 
                   )
# 4173 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12317 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'beginEndExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4176 "../pars.fsy"
                             _1 
                   )
# 4176 "../pars.fsy"
                 : SyntaxTree.SynExpr));
# 12328 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4180 "../pars.fsy"
                             SynExpr.Paren (_2, rhs parseState 1, Some(rhs parseState 3), rhs2 parseState 1 3) 
                   )
# 4180 "../pars.fsy"
                 : 'beginEndExpr));
# 12339 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4183 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBegin()); exprFromParseError _2 
                   )
# 4183 "../pars.fsy"
                 : 'beginEndExpr));
# 12351 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4186 "../pars.fsy"
                             (* silent recovery *) arbExpr("beginEndExpr", (lhs parseState))  
                   )
# 4186 "../pars.fsy"
                 : 'beginEndExpr));
# 12361 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4189 "../pars.fsy"
                             mkSynUnit (lhs parseState) 
                   )
# 4189 "../pars.fsy"
                 : 'beginEndExpr));
# 12371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4193 "../pars.fsy"
                             if _1 <> _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuote(fst _1))
                             (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, lhs parseState)) 
                   )
# 4193 "../pars.fsy"
                 : 'quoteExpr));
# 12385 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4197 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))  
                             let mExpr = rhs2 parseState 1 2
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, _2, false, mExpr))  
                   )
# 4197 "../pars.fsy"
                 : 'quoteExpr));
# 12400 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4202 "../pars.fsy"
                             (* silent recovery *) SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr", (rhs parseState 2)), false, lhs parseState)  
                   )
# 4202 "../pars.fsy"
                 : 'quoteExpr));
# 12412 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4205 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatched(fst _1))
                             exprFromParseError (SynExpr.Quote (mkSynIdGet (lhs parseState) (CompileOpName (fst _1)), snd _1, arbExpr("quoteExpr2", (rhs parseState 1).EndRange), false, rhs parseState 1))  
                   )
# 4205 "../pars.fsy"
                 : 'quoteExpr));
# 12425 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4210 "../pars.fsy"
                              _2 (lhs parseState) true 
                   )
# 4210 "../pars.fsy"
                 : 'arrayExpr));
# 12436 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'listExprElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4213 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar()) 
                             exprFromParseError (_2 (rhs2 parseState 1 2) true) 
                   )
# 4213 "../pars.fsy"
                 : 'arrayExpr));
# 12449 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4217 "../pars.fsy"
                              (* silent recovery *) SynExpr.ArrayOrList (true, [ ], lhs parseState) 
                   )
# 4217 "../pars.fsy"
                 : 'arrayExpr));
# 12459 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4220 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBracketBar())  
                             (* silent recovery *) 
                             exprFromParseError (SynExpr.ArrayOrList (true, [ ], rhs parseState 1)) 
                   )
# 4220 "../pars.fsy"
                 : 'arrayExpr));
# 12472 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4226 "../pars.fsy"
                             SynExpr.Const (SynConst.Unit, (rhs2 parseState 1 2)) 
                   )
# 4226 "../pars.fsy"
                 : 'parenExpr));
# 12483 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4229 "../pars.fsy"
                             let m = rhs2 parseState 1 3
                             SynExpr.Paren (_2 m, rhs parseState 1, Some(rhs parseState 3), m) 
                   )
# 4229 "../pars.fsy"
                 : 'parenExpr));
# 12496 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_other_than_rparen_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4233 "../pars.fsy"
                             if not _3 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).End
                             SynExpr.Paren (exprFromParseError (_2 lhsm), rhs parseState 1, None, lhsm) 
                   )
# 4233 "../pars.fsy"
                 : 'parenExpr));
# 12510 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4238 "../pars.fsy"
                             // silent recovery
                             SynExpr.Paren (arbExpr("parenExpr1", (rhs parseState 1).EndRange), (rhs parseState 1), Some(rhs parseState 3), (rhs2 parseState 1 3)) 
                   )
# 4238 "../pars.fsy"
                 : 'parenExpr));
# 12522 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4242 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2tcs", lhsm) 
                   )
# 4242 "../pars.fsy"
                 : 'parenExpr));
# 12534 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4247 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2mcs", lhsm) 
                   )
# 4247 "../pars.fsy"
                 : 'parenExpr));
# 12546 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4252 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen())
                             let lhsm = unionRangeWithPos (rhs parseState 1) (rhs parseState 2).Start
                             arbExpr("parenExpr2rbcs", lhsm) 
                   )
# 4252 "../pars.fsy"
                 : 'parenExpr));
# 12558 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4257 "../pars.fsy"
                             let lparenRange = (rhs parseState 1)
                             reportParseErrorAt lparenRange (FSComp.SR.parsUnmatchedParen())
                             SynExpr.Paren(arbExpr("parenExpr2obecs", lparenRange.EndRange), lparenRange, None, lparenRange) 
                   )
# 4257 "../pars.fsy"
                 : 'parenExpr));
# 12570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4262 "../pars.fsy"
                             reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                             arbExpr("parenExpr2", (lhs parseState))  
                   )
# 4262 "../pars.fsy"
                 : 'parenExpr));
# 12582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypars)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'classMemberSpfn)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4274 "../pars.fsy"
                             (fun m -> SynExpr.TraitCall (_1, _4, _6, m)) 
                   )
# 4274 "../pars.fsy"
                 : 'parenExprBody));
# 12596 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4277 "../pars.fsy"
                             (fun _m -> _1) 
                   )
# 4277 "../pars.fsy"
                 : 'parenExprBody));
# 12607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'inlineAssemblyExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4280 "../pars.fsy"
                             _1 
                   )
# 4280 "../pars.fsy"
                 : 'parenExprBody));
# 12618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4284 "../pars.fsy"
                             [_1] 
                   )
# 4284 "../pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4287 "../pars.fsy"
                             List.rev _2 
                   )
# 4287 "../pars.fsy"
                 : 'staticallyKnownHeadTypars));
# 12641 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTyparAlts)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4291 "../pars.fsy"
                            _3 :: _1
                   )
# 4291 "../pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12653 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4294 "../pars.fsy"
                             [_1] 
                   )
# 4294 "../pars.fsy"
                 : 'staticallyKnownHeadTyparAlts));
# 12664 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4298 "../pars.fsy"
                             let m, r = _2 in r (rhs2 parseState 1 3) 
                   )
# 4298 "../pars.fsy"
                 : 'braceExpr));
# 12676 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceExprBody)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4301 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            let m, r = _2 
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            r (unionRanges (rhs parseState 1) m) 
                   )
# 4301 "../pars.fsy"
                 : 'braceExpr));
# 12691 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4307 "../pars.fsy"
                            // silent recovery 
                            arbExpr("braceExpr", rhs2 parseState 1 3)  
                   )
# 4307 "../pars.fsy"
                 : 'braceExpr));
# 12703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4311 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBrace())  
                            // Note, we can't use 'exprFromParseError' because the extra syntax node interferes with some syntax-directed transformations for computation expressions
                            SynExpr.Record (None, None, [], rhs parseState 1) 
                   )
# 4311 "../pars.fsy"
                 : 'braceExpr));
# 12716 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4316 "../pars.fsy"
                             let m = rhs2 parseState 1 2 
                             SynExpr.Record (None, None, [], m) 
                   )
# 4316 "../pars.fsy"
                 : 'braceExpr));
# 12728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4321 "../pars.fsy"
                             (lhs parseState), (fun m -> let a, b, c = _1 in SynExpr.Record (a, b, c, m)) 
                   )
# 4321 "../pars.fsy"
                 : 'braceExprBody));
# 12739 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4324 "../pars.fsy"
                            _1 
                   )
# 4324 "../pars.fsy"
                 : 'braceExprBody));
# 12750 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4327 "../pars.fsy"
                            let m, r = _1 in (m, r false) 
                   )
# 4327 "../pars.fsy"
                 : 'braceExprBody));
# 12761 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'monadicExprInitial)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4331 "../pars.fsy"
                            let m, r = _1 in (fun lhsm isArray -> SynExpr.ArrayOrListOfSeqExpr (isArray, r true m, lhsm)) 
                   )
# 4331 "../pars.fsy"
                 : 'listExprElements));
# 12772 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4334 "../pars.fsy"
                            (fun lhsm isArray -> SynExpr.ArrayOrList (isArray, [ ], lhsm)) 
                   )
# 4334 "../pars.fsy"
                 : 'listExprElements));
# 12782 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seqExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4338 "../pars.fsy"
                            _1.Range, (fun isArrayOrList lhsm -> SynExpr.CompExpr (isArrayOrList, ref(isArrayOrList), _1, lhsm)) 
                   )
# 4338 "../pars.fsy"
                 : 'monadicExprInitial));
# 12793 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4341 "../pars.fsy"
                            _1 
                   )
# 4341 "../pars.fsy"
                 : 'monadicExprInitial));
# 12804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4345 "../pars.fsy"
                            let opm = (rhs parseState 2)
                            (unionRanges _1.Range _3.Range), (fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." _3) with
                                                                     | SynExpr.App (a, b, c, d, _) -> SynExpr.App (a, b, c, d, wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 4345 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12822 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4354 "../pars.fsy"
                            (unionRanges _1.Range _5.Range), (fun _isArray wholem -> mkSynTrifix wholem ".. .." _1 _3 _5) 
                   )
# 4354 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12835 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4357 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 3) (FSComp.SR.parsUnexpectedEndOfFileExpression())
                            let opm = (rhs parseState 2)
                            let e = arbExpr("rangeSeqError1", (rhs parseState 3).StartRange)
                            (unionRanges _1.Range e.Range), (fun _isArray wholem -> 
                                                                     // in the case of "{ 1 .. 10 }", we want the range of the expression to include the curlies, that comes from a higher level rule in the grammar,
                                                                     // passed down as 'wholem', so patch up that range here
                                                                     match (mkSynInfix opm _1 ".." e) with
                                                                     | SynExpr.App (a, b, c, d, _) -> SynExpr.App (a, b, c, d, wholem)
                                                                     | _ -> failwith "impossible") 
                   )
# 4357 "../pars.fsy"
                 : 'rangeSequenceExpr));
# 12855 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4370 "../pars.fsy"
                            SynExpr.YieldOrReturn ((true, false), _2, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 4370 "../pars.fsy"
                 : 'arrowThenExprR));
# 12866 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4375 "../pars.fsy"
                            (_1, _3, true) 
                   )
# 4375 "../pars.fsy"
                 : 'forLoopBinder));
# 12878 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4378 "../pars.fsy"
                            let m, r = _3 in (_1, r false m, true) 
                   )
# 4378 "../pars.fsy"
                 : 'forLoopBinder));
# 12890 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4381 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedExpressionAfterToken())
                            (_1, arbExpr("forLoopBinder", (rhs parseState 2)), false) 
                   )
# 4381 "../pars.fsy"
                 : 'forLoopBinder));
# 12903 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4385 "../pars.fsy"
                            if not _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInOrEqualExpected())
                            (_1, arbExpr("forLoopBinder2", (rhs parseState 1).EndRange), false) 
                   )
# 4385 "../pars.fsy"
                 : 'forLoopBinder));
# 12916 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'forLoopDirection)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4390 "../pars.fsy"
                             idOfPat parseState (rhs parseState 1) _1, _3, _4, _5 
                   )
# 4390 "../pars.fsy"
                 : 'forLoopRange));
# 12930 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'parenPattern)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rangeSequenceExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4393 "../pars.fsy"
                            raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedSymbolEqualsInsteadOfIn()) 
                   )
# 4393 "../pars.fsy"
                 : 'forLoopRange));
# 12942 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4396 "../pars.fsy"
                                  true 
                   )
# 4396 "../pars.fsy"
                 : 'forLoopDirection));
# 12952 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4398 "../pars.fsy"
                                  false 
                   )
# 4398 "../pars.fsy"
                 : 'forLoopDirection));
# 12962 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'stringOrKeywordString)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_inlineAssemblyTypeArg)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'optInlineAssemblyReturnTypes)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4402 "../pars.fsy"
                             libraryOnlyWarning (lhs parseState)
                             let s, sm = _2, rhs parseState 2
                             (fun m -> SynExpr.LibraryOnlyILAssembly (internalParseAssemblyCodeInstructions s parseState.LexBuffer.SupportsFeature sm, _3, List.rev _4, _5, m)) 
                   )
# 4402 "../pars.fsy"
                 : 'inlineAssemblyExpr));
# 12978 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'optCurriedArgExprs)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4408 "../pars.fsy"
                             _2 :: _1 
                   )
# 4408 "../pars.fsy"
                 : 'optCurriedArgExprs));
# 12990 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4411 "../pars.fsy"
                             [] 
                   )
# 4411 "../pars.fsy"
                 : 'optCurriedArgExprs));
# 13000 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4415 "../pars.fsy"
                             None 
                   )
# 4415 "../pars.fsy"
                 : 'opt_atomicExprAfterType));
# 13010 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4418 "../pars.fsy"
                             Some(_1) 
                   )
# 4418 "../pars.fsy"
                 : 'opt_atomicExprAfterType));
# 13021 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4422 "../pars.fsy"
                             [] 
                   )
# 4422 "../pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 13031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4425 "../pars.fsy"
                              [_3] 
                   )
# 4425 "../pars.fsy"
                 : 'opt_inlineAssemblyTypeArg));
# 13044 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4429 "../pars.fsy"
                            [] 
                   )
# 4429 "../pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
# 13054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4432 "../pars.fsy"
                            [_2] 
                   )
# 4432 "../pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
# 13065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4435 "../pars.fsy"
                             [] 
                   )
# 4435 "../pars.fsy"
                 : 'optInlineAssemblyReturnTypes));
# 13076 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_atomicExprAfterType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4439 "../pars.fsy"
                            let arg = match _4 with None -> mkSynUnit (lhs parseState) | Some e -> e 
                            let l = List.rev _5
                            let dummyField = mkRecdField (LongIdentWithDots([], [])) // dummy identifier, it will be discarded
                            let l = rebindRanges (dummyField, None) l _6 
                            let (_, _, inheritsSep) = List.head l
                            let bindings = List.tail l
                            (Some (_2, arg, rhs2 parseState 2 4, inheritsSep, rhs parseState 1), None, bindings) 
                   )
# 4439 "../pars.fsy"
                 : 'recdExpr));
# 13097 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4448 "../pars.fsy"
                           let a, b = _1 in (None, a, b) 
                   )
# 4448 "../pars.fsy"
                 : 'recdExpr));
# 13108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4452 "../pars.fsy"
                            match _1 with 
                            | LongOrSingleIdent(false, (LongIdentWithDots(_, _) as f), None, m) ->  
                                 let f = mkRecdField f
                                 let l = List.rev _4
                                 let l = rebindRanges (f, Some _3) l _5
                                 (None, l)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsFieldBinding()) 
                   )
# 4452 "../pars.fsy"
                 : 'recdExprCore));
# 13128 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4465 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           reportParseErrorAt m (FSComp.SR.parsFieldBinding())
                           let f = mkUnderscoreRecdField m
                           (None, [ (f, None, None)  ]) 
                   )
# 4465 "../pars.fsy"
                 : 'recdExprCore));
# 13142 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4472 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())      
                           let f = mkUnderscoreRecdField m
                           reportParseErrorAt (rhs2 parseState 1 2) (FSComp.SR.parsFieldBinding())
                           
                           (None, [ (f, None, None) ]) 
                   )
# 4472 "../pars.fsy"
                 : 'recdExprCore));
# 13157 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4481 "../pars.fsy"
                           reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnderscoreInvalidFieldName())
                           let f = mkUnderscoreRecdField (rhs parseState 1)
                           let l = List.rev _4
                           let l = rebindRanges (f, Some _3) l _5
                           (None, l) 
                   )
# 4481 "../pars.fsy"
                 : 'recdExprCore));
# 13174 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4489 "../pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
# 4489 "../pars.fsy"
                 : 'recdExprCore));
# 13190 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4494 "../pars.fsy"
                            (Some (_1, (rhs parseState 2, None)), []) 
                   )
# 4494 "../pars.fsy"
                 : 'recdExprCore));
# 13202 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4497 "../pars.fsy"
                             let l = List.rev _4
                             let l = rebindRanges _3 l _5
                             (Some (_1, (rhs parseState 2, None)), l) 
                   )
# 4497 "../pars.fsy"
                 : 'recdExprCore));
# 13218 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4503 "../pars.fsy"
                            Some _1 
                   )
# 4503 "../pars.fsy"
                 : 'opt_seps_recd));
# 13229 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4506 "../pars.fsy"
                            None 
                   )
# 4506 "../pars.fsy"
                 : 'opt_seps_recd));
# 13239 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4510 "../pars.fsy"
                            (rhs parseState 1), None 
                   )
# 4510 "../pars.fsy"
                 : 'seps_recd));
# 13249 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4513 "../pars.fsy"
                            let m = (rhs parseState 1) in (m, Some m.End) 
                   )
# 4513 "../pars.fsy"
                 : 'seps_recd));
# 13259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4516 "../pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 1).End 
                   )
# 4516 "../pars.fsy"
                 : 'seps_recd));
# 13269 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4519 "../pars.fsy"
                            (rhs2 parseState 1 2), Some (rhs parseState 2).End 
                   )
# 4519 "../pars.fsy"
                 : 'seps_recd));
# 13279 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4525 "../pars.fsy"
                           mkRecdField _1 
                   )
# 4525 "../pars.fsy"
                 : 'pathOrUnderscore));
# 13290 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4528 "../pars.fsy"
                           let m = rhs parseState 1
                           reportParseErrorAt m (FSComp.SR.parsUnderscoreInvalidFieldName())
                           mkUnderscoreRecdField m 
                   )
# 4528 "../pars.fsy"
                 : 'pathOrUnderscore));
# 13302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprBindings)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps_recd)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdBinding)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4534 "../pars.fsy"
                            (_3, Some _2) :: _1 
                   )
# 4534 "../pars.fsy"
                 : 'recdExprBindings));
# 13315 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4537 "../pars.fsy"
                            [] 
                   )
# 4537 "../pars.fsy"
                 : 'recdExprBindings));
# 13325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4541 "../pars.fsy"
                            (_1, Some _3) 
                   )
# 4541 "../pars.fsy"
                 : 'recdBinding));
# 13337 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4544 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
# 4544 "../pars.fsy"
                 : 'recdBinding));
# 13349 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4548 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
# 4548 "../pars.fsy"
                 : 'recdBinding));
# 13362 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4552 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
# 4552 "../pars.fsy"
                 : 'recdBinding));
# 13374 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'pathOrUnderscore)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4556 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsFieldBinding())
                            (_1, None) 
                   )
# 4556 "../pars.fsy"
                 : 'recdBinding));
# 13387 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4567 "../pars.fsy"
                            let mNewExpr = rhs parseState 1
                            let fullRange = match _4 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 4)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, _2, _4, mNewExpr, m)) 
                   )
# 4567 "../pars.fsy"
                 : 'objExpr));
# 13403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBaseCall)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4572 "../pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            let fullRange = match _3 with [] -> (rhs parseState 1) | _ -> (rhs2 parseState 1 3)
                            fullRange, (fun m -> let (a, b) = _1 in SynExpr.ObjExpr (a, b, [], _3, mNewExpr, m)) 
                   )
# 4572 "../pars.fsy"
                 : 'objExpr));
# 13418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4577 "../pars.fsy"
                            let mNewExpr = rhs parseState 1 
                            (rhs2 parseState 1 2), (fun m -> let (a, b) = _2, None in SynExpr.ObjExpr (a, b, [], [], mNewExpr, m)) 
                   )
# 4577 "../pars.fsy"
                 : 'objExpr));
# 13430 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'baseSpec)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4582 "../pars.fsy"
                            (_2, Some(_4, Some(_5))) 
                   )
# 4582 "../pars.fsy"
                 : 'objExprBaseCall));
# 13444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_HIGH_PRECEDENCE_APP)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4585 "../pars.fsy"
                            (_2, Some(_4, None)) 
                   )
# 4585 "../pars.fsy"
                 : 'objExprBaseCall));
# 13457 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeNonAtomicDeprecated)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4588 "../pars.fsy"
                            _2, None 
                   )
# 4588 "../pars.fsy"
                 : 'objExprBaseCall));
# 13468 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4594 "../pars.fsy"
                            _1 
                   )
# 4594 "../pars.fsy"
                 : 'opt_objExprBindings));
# 13479 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4597 "../pars.fsy"
                            [] 
                   )
# 4597 "../pars.fsy"
                 : 'opt_objExprBindings));
# 13489 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4601 "../pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4601 "../pars.fsy"
                 : 'objExprBindings));
# 13502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'localBindings)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4606 "../pars.fsy"
                             let mWithKwd = (rhs parseState 1)
                             let _localBindingsLastRange, localBindingsBuilder = _2 
                             localBindingsBuilder [] None mWithKwd 
                   )
# 4606 "../pars.fsy"
                 : 'objExprBindings));
# 13515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'objectImplementationBlock)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4611 "../pars.fsy"
                             _2 |> 
                             (List.choose (function 
                                               | SynMemberDefn.Member(b, m) -> Some b
                                               | SynMemberDefn.AutoProperty(_, _, _, _, _, _, _, _, _, _, m) -> errorR(Error(FSComp.SR.parsIllegalMemberVarInObjectImplementation(), m)); None
                                               | x -> errorR(Error(FSComp.SR.parsMemberIllegalInObjectImplementation(), x.Range)); None)) 
                   )
# 4611 "../pars.fsy"
                 : 'objExprBindings));
# 13531 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4618 "../pars.fsy"
                                                                  _1 :: _2 
                   )
# 4618 "../pars.fsy"
                 : 'objExprInterfaces));
# 13543 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4622 "../pars.fsy"
                            [] 
                   )
# 4622 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 13553 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'objExprInterface)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4625 "../pars.fsy"
                            _1 :: _2 
                   )
# 4625 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 13565 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprInterfaces)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4628 "../pars.fsy"
                            (* silent recovery *) _2 
                   )
# 4628 "../pars.fsy"
                 : 'opt_objExprInterfaces));
# 13576 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'interfaceMember)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_objExprBindings)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_declEnd)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_OBLOCKSEP)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4632 "../pars.fsy"
                           InterfaceImpl(_2, _3, lhs parseState) 
                   )
# 4632 "../pars.fsy"
                 : 'objExprInterface));
# 13591 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4636 "../pars.fsy"
                             _2 true 
                   )
# 4636 "../pars.fsy"
                 : 'braceBarExpr));
# 13602 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'braceBarExprCore)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4639 "../pars.fsy"
                             _1 false 
                   )
# 4639 "../pars.fsy"
                 : 'braceBarExpr));
# 13613 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4643 "../pars.fsy"
                            let orig, flds = _2
                            let flds = 
                                flds |> List.choose (function 
                                  | ((LongIdentWithDots([id], _), _), Some e, _) -> Some (id, e) 
                                  | ((LongIdentWithDots([id], _), _), None, _) -> Some (id, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 3
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
# 4643 "../pars.fsy"
                 : 'braceBarExprCore));
# 13632 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recdExprCore)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4653 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let orig, flds = _2 
                            let flds = 
                                flds |> List.choose (function 
                                  | ((LongIdentWithDots([id], _), _), Some e, _) -> Some (id, e) 
                                  | ((LongIdentWithDots([id], _), _), None, _) -> Some (id, arbExpr("anonField", id.idRange)) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None) 
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, orig, flds, m)) 
                   )
# 4653 "../pars.fsy"
                 : 'braceBarExprCore));
# 13652 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4664 "../pars.fsy"
                            // silent recovery 
                            let m = rhs2 parseState 1 3
                            (fun _ -> arbExpr("braceBarExpr", m)) 
                   )
# 4664 "../pars.fsy"
                 : 'braceBarExprCore));
# 13665 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4669 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedBraceBar())  
                            let m = rhs2 parseState 1 1
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
# 4669 "../pars.fsy"
                 : 'braceBarExprCore));
# 13678 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'bar_rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4674 "../pars.fsy"
                            let m = rhs2 parseState 1 2
                            (fun isStruct -> SynExpr.AnonRecd (isStruct, None, [], m)) 
                   )
# 4674 "../pars.fsy"
                 : 'braceBarExprCore));
# 13690 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4679 "../pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4679 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13703 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4683 "../pars.fsy"
                            let mAll = rhs2 parseState 1 3
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 (arbExpr("anonLambdaExpr1", (rhs parseState 4))) 
                   )
# 4683 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13715 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4687 "../pars.fsy"
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4 
                   )
# 4687 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13728 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typedSeqExprBlockR)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4691 "../pars.fsy"
                            if not _5 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody());
                            let mAll = unionRanges (rhs parseState 1) _4.Range
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false mAll _2 _4) 
                   )
# 4691 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13743 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4696 "../pars.fsy"
                            reportParseErrorAt (rhs2 parseState 1 3) (FSComp.SR.parsMissingFunctionBody())
                            mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr2", (rhs parseState 4))) 
                   )
# 4696 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13755 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4700 "../pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileFunBody())
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 3) _2 (arbExpr("anonLambdaExpr3", (rhs parseState 4)))) 
                   )
# 4700 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13768 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicPatterns)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4704 "../pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs2 parseState 1 2) _2 (arbExpr("anonLambdaExpr4", (rhs parseState 3)))) 
                   )
# 4704 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13779 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4707 "../pars.fsy"
                            exprFromParseError (mkSynFunMatchLambdas parseState.SynArgNameGenerator false (rhs parseState 1) [] (arbExpr("anonLambdaExpr5", (rhs parseState 2)))) 
                   )
# 4707 "../pars.fsy"
                 : 'anonLambdaExpr));
# 13789 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4711 "../pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, NoDebugPointAtInvisibleBinding, mAll) 
                   )
# 4711 "../pars.fsy"
                 : 'anonMatchingExpr));
# 13802 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'withPatternClauses)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4716 "../pars.fsy"
                            let clauses, mLast = _2
                            let mAll = unionRanges (rhs parseState 1) mLast
                            SynExpr.MatchLambda (false, (rhs parseState 1), clauses, NoDebugPointAtInvisibleBinding, mAll) 
                   )
# 4716 "../pars.fsy"
                 : 'anonMatchingExpr));
# 13815 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4725 "../pars.fsy"
                            _1 
                   )
# 4725 "../pars.fsy"
                 : 'typeWithTypeConstraints));
# 13826 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4728 "../pars.fsy"
                            SynType.WithGlobalConstraints(_1, List.rev _3, lhs parseState) 
                   )
# 4728 "../pars.fsy"
                 : 'typeWithTypeConstraints));
# 13838 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4732 "../pars.fsy"
                            _1 
                   )
# 4732 "../pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13849 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4735 "../pars.fsy"
                            let ty, arity = _1 
                            // nb. it doesn't matter where the constraints go in the structure of the type. 
                            SynType.WithGlobalConstraints(ty, List.rev _3, lhs parseState), arity 
                   )
# 4735 "../pars.fsy"
                 : 'topTypeWithTypeConstraints));
# 13863 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4741 "../pars.fsy"
                            None 
                   )
# 4741 "../pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13873 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTypeWithTypeConstraints)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4744 "../pars.fsy"
                            let ty, arity = _2 
                            let arity = (match arity with SynValInfo([], rmdata)-> rmdata | _ -> SynInfo.unnamedRetVal)
                            Some (SynReturnInfo((ty, arity), rhs parseState 2)) 
                   )
# 4744 "../pars.fsy"
                 : 'opt_topReturnTypeWithTypeConstraints));
# 13886 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4750 "../pars.fsy"
                            let dty, dmdata= _1 
                            let rty, (SynValInfo(dmdatas, rmdata)) = _3 
                            SynType.Fun(dty, rty, lhs parseState), (SynValInfo(dmdata :: dmdatas, rmdata)) 
                   )
# 4750 "../pars.fsy"
                 : 'topType));
# 13900 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4755 "../pars.fsy"
                            let ty, rmdata = _1 in ty, (SynValInfo([], (match rmdata with [md] -> md | _ -> SynInfo.unnamedRetVal))) 
                   )
# 4755 "../pars.fsy"
                 : 'topType));
# 13911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4759 "../pars.fsy"
                            let ty, mdata = _1 in let tys, mdatas = List.unzip _3 in (SynType.Tuple(false, List.map (fun ty -> (false, ty)) (ty :: tys), lhs parseState)), (mdata :: mdatas) 
                   )
# 4759 "../pars.fsy"
                 : 'topTupleType));
# 13923 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4762 "../pars.fsy"
                            let ty, mdata = _1 in ty, [mdata] 
                   )
# 4762 "../pars.fsy"
                 : 'topTupleType));
# 13934 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'topTupleTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4766 "../pars.fsy"
                            _1 :: _3 
                   )
# 4766 "../pars.fsy"
                 : 'topTupleTypeElements));
# 13946 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topAppType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4769 "../pars.fsy"
                            [_1] 
                   )
# 4769 "../pars.fsy"
                 : 'topTupleTypeElements));
# 13957 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4773 "../pars.fsy"
                            match _2 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _4, SynArgInfo(_1, false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4773 "../pars.fsy"
                 : 'topAppType));
# 13972 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4778 "../pars.fsy"
                            _5, SynArgInfo(_1, true, Some _3) 
                   )
# 4778 "../pars.fsy"
                 : 'topAppType));
# 13985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'attributes)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4781 "../pars.fsy"
                            (_2, SynArgInfo(_1, false, None)) 
                   )
# 4781 "../pars.fsy"
                 : 'topAppType));
# 13997 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4784 "../pars.fsy"
                            match _1 with 
                            | SynType.LongIdent(LongIdentWithDots([id], _)) -> _3, SynArgInfo([], false, Some id)
                            | _ -> raiseParseErrorAt (rhs parseState 2) (FSComp.SR.parsSyntaxErrorInLabeledType())  
                   )
# 4784 "../pars.fsy"
                 : 'topAppType));
# 14011 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4789 "../pars.fsy"
                            _4, SynArgInfo([], true, Some _2) 
                   )
# 4789 "../pars.fsy"
                 : 'topAppType));
# 14023 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4792 "../pars.fsy"
                            _1, SynArgInfo([], false, None) 
                   )
# 4792 "../pars.fsy"
                 : 'topAppType));
# 14034 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4798 "../pars.fsy"
                            SynType.Fun(_1, _3, lhs parseState) 
                   )
# 4798 "../pars.fsy"
                 : SyntaxTree.SynType));
# 14046 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4801 "../pars.fsy"
                            _1 
                   )
# 4801 "../pars.fsy"
                 : SyntaxTree.SynType));
# 14057 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : ParseHelpers.LexerWhitespaceContinuation)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4804 "../pars.fsy"
                                   checkEndOfFileError _2; _1 
                   )
# 4804 "../pars.fsy"
                 : SyntaxTree.SynType));
# 14069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4809 "../pars.fsy"
                           SynType.Tuple(false, (false, _1) :: _3, lhs parseState) 
                   )
# 4809 "../pars.fsy"
                 : 'tupleType));
# 14081 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4812 "../pars.fsy"
                           if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, SynType.StaticConstant (SynConst.Int32 1, lhs parseState)) :: _2, lhs parseState) 
                   )
# 4812 "../pars.fsy"
                 : 'tupleType));
# 14094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4816 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           SynType.Tuple(false, (true, _1) :: _3, lhs parseState) 
                   )
# 4816 "../pars.fsy"
                 : 'tupleType));
# 14108 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4820 "../pars.fsy"
                           _1 
                   )
# 4820 "../pars.fsy"
                 : 'tupleType));
# 14119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4824 "../pars.fsy"
                           (false, _1) :: _3 
                   )
# 4824 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 14131 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4827 "../pars.fsy"
                           if _2 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedInfixOperator());
                           (true, _1) :: _3 
                   )
# 4827 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 14145 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4831 "../pars.fsy"
                           [(false, _1)] 
                   )
# 4831 "../pars.fsy"
                 : 'tupleOrQuotTypeElements));
# 14156 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4835 "../pars.fsy"
                           SynType.LongIdent(_1) 
                   )
# 4835 "../pars.fsy"
                 : 'appTypeCon));
# 14167 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4838 "../pars.fsy"
                           SynType.Var(_1, lhs parseState) 
                   )
# 4838 "../pars.fsy"
                 : 'appTypeCon));
# 14178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4842 "../pars.fsy"
                           if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                           if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                           else SynType.MeasurePower(_1, _3, lhs parseState)  
                   )
# 4842 "../pars.fsy"
                 : 'appTypeConPower));
# 14193 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4847 "../pars.fsy"
                           _1 
                   )
# 4847 "../pars.fsy"
                 : 'appTypeConPower));
# 14204 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4851 "../pars.fsy"
                              SynType.Array(_2, _1, lhs parseState) 
                   )
# 4851 "../pars.fsy"
                 : 'appType));
# 14216 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'arrayTypeSuffix)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4854 "../pars.fsy"
                              SynType.Array(_3, _1, lhs parseState) 
                   )
# 4854 "../pars.fsy"
                 : 'appType));
# 14228 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4858 "../pars.fsy"
                             SynType.App(_2, None, [_1], [], None, true, unionRanges (rhs parseState 1) _2.Range) 
                   )
# 4858 "../pars.fsy"
                 : 'appType));
# 14240 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4861 "../pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4861 "../pars.fsy"
                 : 'appType));
# 14255 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'powerType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4866 "../pars.fsy"
                             _1 
                   )
# 4866 "../pars.fsy"
                 : 'appType));
# 14266 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4869 "../pars.fsy"
                              let tp, typ = _1, _3 
                              let m = lhs parseState 
                              SynType.WithGlobalConstraints(SynType.Var (tp, rhs parseState 1), [WhereTyparSubtypeOfType(tp, typ, m)], m)  
                   )
# 4869 "../pars.fsy"
                 : 'appType));
# 14280 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4874 "../pars.fsy"
                              SynType.HashConstraint(_3, lhs parseState) 
                   )
# 4874 "../pars.fsy"
                 : 'appType));
# 14291 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4878 "../pars.fsy"
                             1 
                   )
# 4878 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 14301 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4881 "../pars.fsy"
                             2 
                   )
# 4881 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 14311 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4884 "../pars.fsy"
                             3 
                   )
# 4884 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 14321 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4887 "../pars.fsy"
                             4 
                   )
# 4887 "../pars.fsy"
                 : 'arrayTypeSuffix));
# 14331 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4891 "../pars.fsy"
                             let typeArgs, commas = _4 in _1 :: _3 :: List.rev typeArgs, (rhs parseState 2) :: (List.rev commas) 
                   )
# 4891 "../pars.fsy"
                 : 'appTypePrefixArguments));
# 14344 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4895 "../pars.fsy"
                             let typeArgs, commas = _1
                             _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
# 4895 "../pars.fsy"
                 : 'typeArgListElements));
# 14357 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4899 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let typeArgs, commas = _1
                            _3 :: typeArgs, (rhs parseState 2) :: commas 
                   )
# 4899 "../pars.fsy"
                 : 'typeArgListElements));
# 14371 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4904 "../pars.fsy"
                             [], [] 
                   )
# 4904 "../pars.fsy"
                 : 'typeArgListElements));
# 14381 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4908 "../pars.fsy"
                           _1 
                   )
# 4908 "../pars.fsy"
                 : 'powerType));
# 14392 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomTypeOrAnonRecdType)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4911 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedInfixOperator());
                            if _2 = "^-" then SynType.MeasurePower(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynType.MeasurePower(_1, _3, lhs parseState) 
                   )
# 4911 "../pars.fsy"
                 : 'powerType));
# 14407 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypePrefixArguments)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4920 "../pars.fsy"
                             let args, commas = _2
                             mlCompatWarning (FSComp.SR.parsMultiArgumentGenericTypeFormDeprecated()) (unionRanges (rhs parseState 1) _4.Range); 
                             SynType.App(_4, None, args, commas, None, true, unionRanges (rhs parseState 1) _4.Range) 
                   )
# 4920 "../pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
# 14422 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4925 "../pars.fsy"
                             _1 
                   )
# 4925 "../pars.fsy"
                 : 'atomTypeNonAtomicDeprecated));
# 14433 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4929 "../pars.fsy"
                            _1 
                   )
# 4929 "../pars.fsy"
                 : 'atomTypeOrAnonRecdType));
# 14444 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'anonRecdType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4932 "../pars.fsy"
                            let flds, isStruct = _1
                            let flds2 = 
                                flds |> List.choose (function 
                                  | (Field([], false, Some id, ty, false, _xmldoc, None, _m)) -> Some (id, ty) 
                                  | _ -> reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsInvalidAnonRecdType()); None)
                            SynType.AnonRecd (isStruct, flds2, rhs parseState 1) 
                   )
# 4932 "../pars.fsy"
                 : 'atomTypeOrAnonRecdType));
# 14460 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4943 "../pars.fsy"
                            SynType.HashConstraint(_2, lhs parseState) 
                   )
# 4943 "../pars.fsy"
                 : 'atomType));
# 14471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeConPower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4946 "../pars.fsy"
                            _1 
                   )
# 4946 "../pars.fsy"
                 : 'atomType));
# 14482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4949 "../pars.fsy"
                            SynType.Anon (lhs parseState) 
                   )
# 4949 "../pars.fsy"
                 : 'atomType));
# 14492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4952 "../pars.fsy"
                             _2 
                   )
# 4952 "../pars.fsy"
                 : 'atomType));
# 14504 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4955 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnmatchedParen()) 
                            _2 
                   )
# 4955 "../pars.fsy"
                 : 'atomType));
# 14517 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4959 "../pars.fsy"
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
# 4959 "../pars.fsy"
                 : 'atomType));
# 14530 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'tupleOrQuotTypeElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4962 "../pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Tuple(true, (false, _3) :: _5, lhs parseState) 
                   )
# 4962 "../pars.fsy"
                 : 'atomType));
# 14544 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4966 "../pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
# 4966 "../pars.fsy"
                 : 'atomType));
# 14557 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'appType)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4970 "../pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
# 4970 "../pars.fsy"
                 : 'atomType));
# 14570 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4974 "../pars.fsy"
                           reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnmatchedParen()) 
                           SynType.Anon (lhs parseState) 
                   )
# 4974 "../pars.fsy"
                 : 'atomType));
# 14582 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'rawConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4978 "../pars.fsy"
                            SynType.StaticConstant(_1, rhs parseState 1) 
                   )
# 4978 "../pars.fsy"
                 : 'atomType));
# 14593 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4981 "../pars.fsy"
                            let m = rhs parseState 1
                            SynType.StaticConstant(SynConst.String (null, m), m) 
                   )
# 4981 "../pars.fsy"
                 : 'atomType));
# 14604 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynExpr * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4985 "../pars.fsy"
                             let e, _ = _2
                             SynType.StaticConstantExpr(e, e.Range) 
                   )
# 4985 "../pars.fsy"
                 : 'atomType));
# 14616 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4989 "../pars.fsy"
                             SynType.StaticConstant(SynConst.Bool false, lhs parseState) 
                   )
# 4989 "../pars.fsy"
                 : 'atomType));
# 14626 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4992 "../pars.fsy"
                             SynType.StaticConstant(SynConst.Bool true, lhs parseState) 
                   )
# 4992 "../pars.fsy"
                 : 'atomType));
# 14636 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4995 "../pars.fsy"
                            (* silent recovery *) SynType.Anon (lhs parseState) 
                   )
# 4995 "../pars.fsy"
                 : 'atomType));
# 14647 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 4998 "../pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _2 in SynType.App(_1, Some(mLessThan), args, commas, mGreaterThan, false, unionRanges _1.Range mWhole) 
                   )
# 4998 "../pars.fsy"
                 : 'atomType));
# 14659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5001 "../pars.fsy"
                            SynType.LongIdentApp(_1, _3, None, [], [], None, unionRanges (rhs parseState 1) _3.Range) 
                   )
# 5001 "../pars.fsy"
                 : 'atomType));
# 14671 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5004 "../pars.fsy"
                            let mLessThan, mGreaterThan, args, commas, mWhole = _4 
                            SynType.LongIdentApp(_1, _3, Some(mLessThan), args, commas, mGreaterThan, unionRanges _1.Range mWhole) 
                   )
# 5004 "../pars.fsy"
                 : 'atomType));
# 14685 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'appTypeCon)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5008 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            _1 
                   )
# 5008 "../pars.fsy"
                 : 'atomType));
# 14698 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5013 "../pars.fsy"
                            let mLessThan, mGreaterThan, parsedOk, args, commas, mAll = _1
                            if parsedOk then // if someone has "foo<bar" without a closing greater-than, then the lexfilter does not introduce a HPA, even though it is adjacent
                                warning(Error(FSComp.SR.parsNonAdjacentTyargs(), rhs parseState 1))
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 5013 "../pars.fsy"
                 : range * range option * SyntaxTree.SynType list * range list * range));
# 14712 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : range * range option * bool     * SyntaxTree.SynType list * range list * range)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5019 "../pars.fsy"
                            let mLessThan, mGreaterThan, _, args, commas, mAll = _2
                            mLessThan, mGreaterThan, args, commas, mAll 
                   )
# 5019 "../pars.fsy"
                 : range * range option * SyntaxTree.SynType list * range list * range));
# 14724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5024 "../pars.fsy"
                            let typeArgs, commas = _5
                            (rhs parseState 1), Some(rhs parseState 6), true, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), lhs parseState 
                   )
# 5024 "../pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
# 14740 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _5 = (let data = parseState.GetInput(5) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgListElements)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5028 "../pars.fsy"
                            if not _6 then 
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedEndOfFileTypeArgs())
                            else
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingGreaterThan())
                            let typeArgs, commas = _5
                            let nextToken = rhs parseState 6
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, (_2 :: _4 :: List.rev typeArgs), (rhs parseState 3) :: (List.rev commas), unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 5028 "../pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
# 14762 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActualOrDummyIfEmpty)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5038 "../pars.fsy"
                            if not _4 then reportParseErrorAt (rhs parseState 4) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 4
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [rhs parseState 3], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 5038 "../pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
# 14778 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5044 "../pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 3), true, [_2], [], lhs parseState 
                   )
# 5044 "../pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
# 14791 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5047 "../pars.fsy"
                            let nextToken = rhs parseState 3
                            if not _3 then reportParseErrorAt nextToken (FSComp.SR.parsMissingTypeArgs())
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [_2], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 5047 "../pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
# 14807 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5053 "../pars.fsy"
                            (rhs parseState 1), Some(rhs parseState 2), true, [], [], lhs parseState 
                   )
# 5053 "../pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
# 14819 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5056 "../pars.fsy"
                            if not _2 then  
                                reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsExpectedTypeAfterToken())
                            else
                                reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let nextToken = rhs parseState 2
                            let zeroWidthAtStartOfNextToken = nextToken.StartRange
                            (rhs parseState 1), None, false, [], [], unionRanges (rhs parseState 1) zeroWidthAtStartOfNextToken 
                   )
# 5056 "../pars.fsy"
                 : range * range option * bool     * SyntaxTree.SynType list * range list * range));
# 14837 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5066 "../pars.fsy"
                            _1 
                   )
# 5066 "../pars.fsy"
                 : 'typeArgActual));
# 14848 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5069 "../pars.fsy"
                            SynType.StaticConstantNamed(_1, _3, unionRanges _1.Range _3.Range) 
                   )
# 5069 "../pars.fsy"
                 : 'typeArgActual));
# 14860 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynType)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5072 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsMissingTypeArgs())
                            let dummy = SynType.StaticConstant(SynConst.Int32(0), rhs parseState 2)
                            SynType.StaticConstantNamed(_1, dummy, (rhs2 parseState 1 2))
                          
                   )
# 5072 "../pars.fsy"
                 : 'typeArgActual));
# 14874 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeArgActual)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5079 "../pars.fsy"
                            _1 
                   )
# 5079 "../pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14885 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'dummyTypeArg)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5082 "../pars.fsy"
                            reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMissingTypeArgs())
                            _1 
                   )
# 5082 "../pars.fsy"
                 : 'typeArgActualOrDummyIfEmpty));
# 14897 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5087 "../pars.fsy"
                            let m = rhs parseState 1
                            let dummyStatVal = SynType.StaticConstant(SynConst.Int32(0), m)
                            let dummyName = SynType.LongIdent(LongIdentWithDots([ident("", m)], []))
                            let dummyTypeArg = SynType.StaticConstantNamed(dummyName, dummyStatVal, m)
                            dummyTypeArg 
                   )
# 5087 "../pars.fsy"
                 : 'dummyTypeArg));
# 14911 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5095 "../pars.fsy"
                            _2 
                   )
# 5095 "../pars.fsy"
                 : 'measureTypeArg));
# 14924 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5098 "../pars.fsy"
                            SynMeasure.Anon (lhs parseState) 
                   )
# 5098 "../pars.fsy"
                 : 'measureTypeArg));
# 14936 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5102 "../pars.fsy"
                            SynMeasure.Named(_1.Lid, _1.Range) 
                   )
# 5102 "../pars.fsy"
                 : 'measureTypeAtom));
# 14947 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.SynTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5105 "../pars.fsy"
                            SynMeasure.Var(_1, lhs parseState) 
                   )
# 5105 "../pars.fsy"
                 : 'measureTypeAtom));
# 14958 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5108 "../pars.fsy"
                            _2 
                   )
# 5108 "../pars.fsy"
                 : 'measureTypeAtom));
# 14970 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5112 "../pars.fsy"
                             _1 
                   )
# 5112 "../pars.fsy"
                 : 'measureTypePower));
# 14981 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeAtom)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'atomicRationalConstant)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5115 "../pars.fsy"
                            if _2 <> "^" && _2 <> "^-" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            if _2 = "^-" then SynMeasure.Power(_1, SynRationalConst.Negate(_3), lhs parseState)
                            else SynMeasure.Power(_1, _3, lhs parseState) 
                   )
# 5115 "../pars.fsy"
                 : 'measureTypePower));
# 14996 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : int32 * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5120 "../pars.fsy"
                            if fst _1 <> 1 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedIntegerLiteralForUnitOfMeasure());
                            SynMeasure.One 
                   )
# 5120 "../pars.fsy"
                 : 'measureTypePower));
# 15008 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5125 "../pars.fsy"
                           [_1] 
                   )
# 5125 "../pars.fsy"
                 : 'measureTypeSeq));
# 15019 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypePower)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5128 "../pars.fsy"
                           _1 :: _2 
                   )
# 5128 "../pars.fsy"
                 : 'measureTypeSeq));
# 15031 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeSeq)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5132 "../pars.fsy"
                           SynMeasure.Seq(_1, lhs parseState) 
                   )
# 5132 "../pars.fsy"
                 : 'measureTypeExpr));
# 15042 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5135 "../pars.fsy"
                           SynMeasure.Product(_1, _3, lhs parseState) 
                   )
# 5135 "../pars.fsy"
                 : 'measureTypeExpr));
# 15054 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5138 "../pars.fsy"
                           if _2 <> "*" && _2 <> "/" then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                           if _2 = "*" then SynMeasure.Product(_1, _3, lhs parseState)
                           else SynMeasure.Divide(_1, _3, lhs parseState) 
                   )
# 5138 "../pars.fsy"
                 : 'measureTypeExpr));
# 15069 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'measureTypeExpr)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5143 "../pars.fsy"
                            if _1 <> "/" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedOperatorForUnitOfMeasure());
                            SynMeasure.Divide(SynMeasure.One, _2, lhs parseState) 
                   )
# 5143 "../pars.fsy"
                 : 'measureTypeExpr));
# 15082 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5148 "../pars.fsy"
                             let id = mkSynId (lhs parseState) (_2).idText
                             Typar(id, NoStaticReq, false) 
                   )
# 5148 "../pars.fsy"
                 : SyntaxTree.SynTypar));
# 15094 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'staticallyKnownHeadTypar)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5152 "../pars.fsy"
                            _1 
                   )
# 5152 "../pars.fsy"
                 : SyntaxTree.SynTypar));
# 15105 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5156 "../pars.fsy"
                            if _1 <> "^" then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsUnexpectedTypeParameter());
                            let id = mkSynId (lhs parseState) (_2).idText
                            Typar(id, HeadTypeStaticReq, false) 
                   )
# 5156 "../pars.fsy"
                 : 'staticallyKnownHeadTypar));
# 15119 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5162 "../pars.fsy"
                            ident(_1, rhs parseState 1) 
                   )
# 5162 "../pars.fsy"
                 : SyntaxTree.Ident));
# 15130 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5167 "../pars.fsy"
                             LongIdentWithDots([ident(MangledGlobalName, rhs parseState 1)], []) 
                   )
# 5167 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15140 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5170 "../pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
# 5170 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15151 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5173 "../pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid @ [_3], dotms @ [rhs parseState 2]) 
                   )
# 5173 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15163 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'ends_coming_soon_or_recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5176 "../pars.fsy"
                            if not _3 then reportParseErrorAt (rhs parseState 2) (FSComp.SR.parsExpectedNameAfterToken())
                            let (LongIdentWithDots(lid, dotms)) = _1 in LongIdentWithDots(lid, dotms @ [rhs parseState 2])  
                   )
# 5176 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15176 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'operatorName)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5183 "../pars.fsy"
                             ident(CompileOpName _2, rhs parseState 2) 
                   )
# 5183 "../pars.fsy"
                 : 'opName));
# 15188 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5186 "../pars.fsy"
                             reportParseErrorAt (lhs parseState) (FSComp.SR.parsErrorParsingAsOperatorName()); ident(CompileOpName "****", rhs parseState 2) 
                   )
# 5186 "../pars.fsy"
                 : 'opName));
# 15199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5189 "../pars.fsy"
                             ident(CompileOpName "*", rhs parseState 1) 
                   )
# 5189 "../pars.fsy"
                 : 'opName));
# 15209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _4 = (let data = parseState.GetInput(4) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5193 "../pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|")
                            ident(text, rhs2 parseState 2 3) 
                   )
# 5193 "../pars.fsy"
                 : 'opName));
# 15222 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _6 = (let data = parseState.GetInput(6) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5198 "../pars.fsy"
                            let text = ("|" + String.concat "|" (List.rev _2) + "|_|" )
                            ident(text, rhs2 parseState 2 5) 
                   )
# 5198 "../pars.fsy"
                 : 'opName));
# 15235 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5204 "../pars.fsy"
                            if not (IsValidPrefixOperatorDefinitionName _1) then 
                                reportParseErrorAt (lhs parseState) (FSComp.SR.parsInvalidPrefixOperatorDefinition());
                            _1 
                   )
# 5204 "../pars.fsy"
                 : 'operatorName));
# 15248 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5209 "../pars.fsy"
                            _1 
                   )
# 5209 "../pars.fsy"
                 : 'operatorName));
# 15259 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5212 "../pars.fsy"
                            _1 
                   )
# 5212 "../pars.fsy"
                 : 'operatorName));
# 15270 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5215 "../pars.fsy"
                            _1 
                   )
# 5215 "../pars.fsy"
                 : 'operatorName));
# 15281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5218 "../pars.fsy"
                            _1 
                   )
# 5218 "../pars.fsy"
                 : 'operatorName));
# 15292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5221 "../pars.fsy"
                            _1 
                   )
# 5221 "../pars.fsy"
                 : 'operatorName));
# 15303 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5224 "../pars.fsy"
                            _1 
                   )
# 5224 "../pars.fsy"
                 : 'operatorName));
# 15314 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5227 "../pars.fsy"
                            _1 
                   )
# 5227 "../pars.fsy"
                 : 'operatorName));
# 15325 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5230 "../pars.fsy"
                            "$" 
                   )
# 5230 "../pars.fsy"
                 : 'operatorName));
# 15335 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5233 "../pars.fsy"
                            _1 
                   )
# 5233 "../pars.fsy"
                 : 'operatorName));
# 15346 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5236 "../pars.fsy"
                            "-" 
                   )
# 5236 "../pars.fsy"
                 : 'operatorName));
# 15356 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5239 "../pars.fsy"
                            "*" 
                   )
# 5239 "../pars.fsy"
                 : 'operatorName));
# 15366 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5242 "../pars.fsy"
                            "=" 
                   )
# 5242 "../pars.fsy"
                 : 'operatorName));
# 15376 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5245 "../pars.fsy"
                            "or" 
                   )
# 5245 "../pars.fsy"
                 : 'operatorName));
# 15386 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5248 "../pars.fsy"
                            "<" 
                   )
# 5248 "../pars.fsy"
                 : 'operatorName));
# 15397 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5251 "../pars.fsy"
                            ">" 
                   )
# 5251 "../pars.fsy"
                 : 'operatorName));
# 15408 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5254 "../pars.fsy"
                            "?" 
                   )
# 5254 "../pars.fsy"
                 : 'operatorName));
# 15418 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5257 "../pars.fsy"
                            "&" 
                   )
# 5257 "../pars.fsy"
                 : 'operatorName));
# 15428 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5260 "../pars.fsy"
                            "&&" 
                   )
# 5260 "../pars.fsy"
                 : 'operatorName));
# 15438 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5263 "../pars.fsy"
                            "||" 
                   )
# 5263 "../pars.fsy"
                 : 'operatorName));
# 15448 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5266 "../pars.fsy"
                            ":=" 
                   )
# 5266 "../pars.fsy"
                 : 'operatorName));
# 15458 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5269 "../pars.fsy"
                            if _1 <> ".[]"  && _1 <> ".()" && _1 <> ".()<-" then 
                                 deprecatedOperator (lhs parseState); 
                            _1 
                   )
# 5269 "../pars.fsy"
                 : 'operatorName));
# 15471 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5274 "../pars.fsy"
                            _1 
                   )
# 5274 "../pars.fsy"
                 : 'operatorName));
# 15482 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5277 "../pars.fsy"
                            ".." 
                   )
# 5277 "../pars.fsy"
                 : 'operatorName));
# 15492 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5280 "../pars.fsy"
                            ".. .." 
                   )
# 5280 "../pars.fsy"
                 : 'operatorName));
# 15502 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : string * bool)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5283 "../pars.fsy"
                            if _1 <> _2 then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsMismatchedQuotationName(fst _1));  
                            fst _1 
                   )
# 5283 "../pars.fsy"
                 : 'operatorName));
# 15515 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5289 "../pars.fsy"
                            if not (String.isUpper _1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseMustBeginWithUpperCase());  
                            if (_1.IndexOf('|') <> -1) then reportParseErrorAt (rhs parseState 1) (FSComp.SR.parsActivePatternCaseContainsPipe());  
                            _1 
                   )
# 5289 "../pars.fsy"
                 : 'activePatternCaseName));
# 15528 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5296 "../pars.fsy"
                            [_2] 
                   )
# 5296 "../pars.fsy"
                 : 'activePatternCaseNames));
# 15539 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseNames)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : 'activePatternCaseName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5299 "../pars.fsy"
                            _3 :: _1 
                   )
# 5299 "../pars.fsy"
                 : 'activePatternCaseNames));
# 15551 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5304 "../pars.fsy"
                            _1 
                   )
# 5304 "../pars.fsy"
                 : 'identOrOp));
# 15562 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5307 "../pars.fsy"
                            _1 
                   )
# 5307 "../pars.fsy"
                 : 'identOrOp));
# 15573 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5313 "../pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
# 5313 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15584 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'opName)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5316 "../pars.fsy"
                            LongIdentWithDots([_1], []) 
                   )
# 5316 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15595 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            let _3 = (let data = parseState.GetInput(3) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.LongIdentWithDots)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5319 "../pars.fsy"
                            let (LongIdentWithDots(lid, dotms)) = _3 in LongIdentWithDots(_1 :: lid, rhs parseState 2 :: dotms) 
                   )
# 5319 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15607 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : SyntaxTree.Ident)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5322 "../pars.fsy"
                            (* silent recovery *) LongIdentWithDots([_1], [rhs parseState 2]) 
                   )
# 5322 "../pars.fsy"
                 : SyntaxTree.LongIdentWithDots));
# 15618 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'identOrOp)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5327 "../pars.fsy"
                                     _1 
                   )
# 5327 "../pars.fsy"
                 : 'nameop));
# 15629 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5330 "../pars.fsy"
                                     
                   )
# 5330 "../pars.fsy"
                 : 'topSeparator));
# 15639 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5331 "../pars.fsy"
                                               
                   )
# 5331 "../pars.fsy"
                 : 'topSeparator));
# 15649 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5332 "../pars.fsy"
                                     
                   )
# 5332 "../pars.fsy"
                 : 'topSeparator));
# 15659 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5335 "../pars.fsy"
                                        
                   )
# 5335 "../pars.fsy"
                 : 'topSeparators));
# 15670 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5336 "../pars.fsy"
                                                      
                   )
# 5336 "../pars.fsy"
                 : 'topSeparators));
# 15682 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'topSeparator)) in
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'opt_topSeparators)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5339 "../pars.fsy"
                                                          
                   )
# 5339 "../pars.fsy"
                 : 'opt_topSeparators));
# 15694 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5340 "../pars.fsy"
                                                          
                   )
# 5340 "../pars.fsy"
                 : 'opt_topSeparators));
# 15704 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5344 "../pars.fsy"
                                     
                   )
# 5344 "../pars.fsy"
                 : 'seps));
# 15714 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5345 "../pars.fsy"
                                     
                   )
# 5345 "../pars.fsy"
                 : 'seps));
# 15724 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5346 "../pars.fsy"
                                               
                   )
# 5346 "../pars.fsy"
                 : 'seps));
# 15734 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5347 "../pars.fsy"
                                               
                   )
# 5347 "../pars.fsy"
                 : 'seps));
# 15744 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5352 "../pars.fsy"
                             
                   )
# 5352 "../pars.fsy"
                 : 'declEnd));
# 15754 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5354 "../pars.fsy"
                               
                   )
# 5354 "../pars.fsy"
                 : 'declEnd));
# 15764 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5356 "../pars.fsy"
                             
                   )
# 5356 "../pars.fsy"
                 : 'declEnd));
# 15774 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5361 "../pars.fsy"
                            
                   )
# 5361 "../pars.fsy"
                 : 'opt_declEnd));
# 15784 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5363 "../pars.fsy"
                             
                   )
# 5363 "../pars.fsy"
                 : 'opt_declEnd));
# 15794 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5365 "../pars.fsy"
                            
                   )
# 5365 "../pars.fsy"
                 : 'opt_declEnd));
# 15804 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5367 "../pars.fsy"
                            
                   )
# 5367 "../pars.fsy"
                 : 'opt_declEnd));
# 15814 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5370 "../pars.fsy"
                                       
                   )
# 5370 "../pars.fsy"
                 : 'opt_ODECLEND));
# 15824 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5371 "../pars.fsy"
                                       
                   )
# 5371 "../pars.fsy"
                 : 'opt_ODECLEND));
# 15834 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5374 "../pars.fsy"
                                       deprecatedWithError (FSComp.SR.parsNoEqualShouldFollowNamespace()) (lhs parseState); () 
                   )
# 5374 "../pars.fsy"
                 : 'deprecated_opt_equals));
# 15844 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5375 "../pars.fsy"
                                        
                   )
# 5375 "../pars.fsy"
                 : 'deprecated_opt_equals));
# 15854 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5378 "../pars.fsy"
                                       
                   )
# 5378 "../pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15864 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5379 "../pars.fsy"
                                       
                   )
# 5379 "../pars.fsy"
                 : 'opt_OBLOCKSEP));
# 15874 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'seps)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5382 "../pars.fsy"
                                       
                   )
# 5382 "../pars.fsy"
                 : 'opt_seps));
# 15885 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5383 "../pars.fsy"
                                       
                   )
# 5383 "../pars.fsy"
                 : 'opt_seps));
# 15895 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5386 "../pars.fsy"
                                       true 
                   )
# 5386 "../pars.fsy"
                 : 'opt_rec));
# 15905 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5387 "../pars.fsy"
                                       false 
                   )
# 5387 "../pars.fsy"
                 : 'opt_rec));
# 15915 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5390 "../pars.fsy"
                                       
                   )
# 5390 "../pars.fsy"
                 : 'opt_bar));
# 15925 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5391 "../pars.fsy"
                                       
                   )
# 5391 "../pars.fsy"
                 : 'opt_bar));
# 15935 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5394 "../pars.fsy"
                                       true 
                   )
# 5394 "../pars.fsy"
                 : 'opt_inline));
# 15945 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5395 "../pars.fsy"
                                       false 
                   )
# 5395 "../pars.fsy"
                 : 'opt_inline));
# 15955 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5398 "../pars.fsy"
                                       true 
                   )
# 5398 "../pars.fsy"
                 : 'opt_mutable));
# 15965 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5399 "../pars.fsy"
                                       false 
                   )
# 5399 "../pars.fsy"
                 : 'opt_mutable));
# 15975 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5403 "../pars.fsy"
                               
                   )
# 5403 "../pars.fsy"
                 : 'doToken));
# 15985 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5404 "../pars.fsy"
                               
                   )
# 5404 "../pars.fsy"
                 : 'doToken));
# 15995 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5407 "../pars.fsy"
                                
                   )
# 5407 "../pars.fsy"
                 : 'doneDeclEnd));
# 16005 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5408 "../pars.fsy"
                                    
                   )
# 5408 "../pars.fsy"
                 : 'doneDeclEnd));
# 16015 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5411 "../pars.fsy"
                                  mlCompatWarning (FSComp.SR.parsSyntaxModuleStructEndDeprecated()) (lhs parseState); 
                   )
# 5411 "../pars.fsy"
                 : 'structOrBegin));
# 16025 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5412 "../pars.fsy"
                                 
                   )
# 5412 "../pars.fsy"
                 : 'structOrBegin));
# 16035 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5415 "../pars.fsy"
                               mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 5415 "../pars.fsy"
                 : 'sigOrBegin));
# 16045 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5416 "../pars.fsy"
                                 
                   )
# 5416 "../pars.fsy"
                 : 'sigOrBegin));
# 16055 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5419 "../pars.fsy"
                                 mlCompatWarning (FSComp.SR.parsSyntaxModuleSigEndDeprecated()) (lhs parseState); 
                   )
# 5419 "../pars.fsy"
                 : 'colonOrEquals));
# 16065 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5420 "../pars.fsy"
                                  
                   )
# 5420 "../pars.fsy"
                 : 'colonOrEquals));
# 16075 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5424 "../pars.fsy"
                                  _1 
                   )
# 5424 "../pars.fsy"
                 : 'stringOrKeywordString));
# 16086 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : string)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5425 "../pars.fsy"
                                          _1 
                   )
# 5425 "../pars.fsy"
                 : 'stringOrKeywordString));
# 16097 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5428 "../pars.fsy"
                                                     
                   )
# 5428 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 16107 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5429 "../pars.fsy"
                                                     
                   )
# 5429 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 16117 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5430 "../pars.fsy"
                                         
                   )
# 5430 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_APP));
# 16127 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5433 "../pars.fsy"
                                                 
                   )
# 5433 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 16137 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5434 "../pars.fsy"
                                         
                   )
# 5434 "../pars.fsy"
                 : 'opt_HIGH_PRECEDENCE_TYAPP));
# 16147 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'typeKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5438 "../pars.fsy"
                                                        
                   )
# 5438 "../pars.fsy"
                 : 'typeKeyword));
# 16158 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5439 "../pars.fsy"
                                        
                   )
# 5439 "../pars.fsy"
                 : 'typeKeyword));
# 16168 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5440 "../pars.fsy"
                                
                   )
# 5440 "../pars.fsy"
                 : 'typeKeyword));
# 16178 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'moduleKeyword)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5444 "../pars.fsy"
                                                            
                   )
# 5444 "../pars.fsy"
                 : 'moduleKeyword));
# 16189 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5445 "../pars.fsy"
                                          
                   )
# 5445 "../pars.fsy"
                 : 'moduleKeyword));
# 16199 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5446 "../pars.fsy"
                                  
                   )
# 5446 "../pars.fsy"
                 : 'moduleKeyword));
# 16209 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rbrace)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5449 "../pars.fsy"
                                                     
                   )
# 5449 "../pars.fsy"
                 : 'rbrace));
# 16220 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5450 "../pars.fsy"
                                          
                   )
# 5450 "../pars.fsy"
                 : 'rbrace));
# 16230 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5451 "../pars.fsy"
                                  
                   )
# 5451 "../pars.fsy"
                 : 'rbrace));
# 16240 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5454 "../pars.fsy"
                                      
                   )
# 5454 "../pars.fsy"
                 : 'bar_rbrace));
# 16250 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'rparen)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5457 "../pars.fsy"
                                                     
                   )
# 5457 "../pars.fsy"
                 : 'rparen));
# 16261 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5458 "../pars.fsy"
                                          
                   )
# 5458 "../pars.fsy"
                 : 'rparen));
# 16271 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5459 "../pars.fsy"
                                  
                   )
# 5459 "../pars.fsy"
                 : 'rparen));
# 16281 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _2 = (let data = parseState.GetInput(2) in (Microsoft.FSharp.Core.Operators.unbox data : 'oblockend)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5462 "../pars.fsy"
                                                           
                   )
# 5462 "../pars.fsy"
                 : 'oblockend));
# 16292 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5463 "../pars.fsy"
                                             
                   )
# 5463 "../pars.fsy"
                 : 'oblockend));
# 16302 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5464 "../pars.fsy"
                                     
                   )
# 5464 "../pars.fsy"
                 : 'oblockend));
# 16312 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5467 "../pars.fsy"
                                            false 
                   )
# 5467 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 16322 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5468 "../pars.fsy"
                                              false 
                   )
# 5468 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 16332 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5469 "../pars.fsy"
                                              false 
                   )
# 5469 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 16342 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5470 "../pars.fsy"
                                                 false 
                   )
# 5470 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 16352 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5471 "../pars.fsy"
                                   _1 
                   )
# 5471 "../pars.fsy"
                 : 'ends_other_than_rparen_coming_soon_or_recover));
# 16363 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5474 "../pars.fsy"
                                            false 
                   )
# 5474 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16373 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5475 "../pars.fsy"
                                              false 
                   )
# 5475 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16383 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5476 "../pars.fsy"
                                              false 
                   )
# 5476 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16393 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5477 "../pars.fsy"
                                              false 
                   )
# 5477 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16403 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5478 "../pars.fsy"
                                                 false 
                   )
# 5478 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
# 16413 "pars.fs"
        (fun (parseState : Internal.Utilities.Text.Parsing.IParseState) ->
            let _1 = (let data = parseState.GetInput(1) in (Microsoft.FSharp.Core.Operators.unbox data : 'recover)) in
            Microsoft.FSharp.Core.Operators.box
                (
                   (
# 5479 "../pars.fsy"
                                   _1 
                   )
# 5479 "../pars.fsy"
                 : 'ends_coming_soon_or_recover));
|]
# 16425 "pars.fs"
let tables () : Internal.Utilities.Text.Parsing.Tables<_> = 
  { reductions= _fsyacc_reductions ();
    endOfInputTag = _fsyacc_endOfInputTag;
    tagOfToken = tagOfToken;
    dataOfToken = _fsyacc_dataOfToken; 
    actionTableElements = _fsyacc_actionTableElements;
    actionTableRowOffsets = _fsyacc_actionTableRowOffsets;
    stateToProdIdxsTableElements = _fsyacc_stateToProdIdxsTableElements;
    stateToProdIdxsTableRowOffsets = _fsyacc_stateToProdIdxsTableRowOffsets;
    reductionSymbolCounts = _fsyacc_reductionSymbolCounts;
    immediateActions = _fsyacc_immediateActions;
    gotos = _fsyacc_gotos;
    sparseGotoTableRowOffsets = _fsyacc_sparseGotoTableRowOffsets;
    tagOfErrorTerminal = _fsyacc_tagOfErrorTerminal;
    parseError = (fun (ctxt:Internal.Utilities.Text.Parsing.ParseErrorContext<_>) -> 
                              match parse_error_rich with 
                              | Some f -> f ctxt
                              | None -> parse_error ctxt.Message);
    numTerminals = 200;
    productionToNonTerminalTable = _fsyacc_productionToNonTerminalTable  }
let engine lexer lexbuf startState = (tables ()).Interpret(lexer, lexbuf, startState)
let signatureFile lexer lexbuf : SyntaxTree.ParsedSigFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 0))
let implementationFile lexer lexbuf : SyntaxTree.ParsedImplFile =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 2))
let interaction lexer lexbuf : SyntaxTree.ParsedFsiInteraction =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 4))
let typedSeqExprEOF lexer lexbuf : SyntaxTree.SynExpr =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 6))
let typEOF lexer lexbuf : SyntaxTree.SynType =
    Microsoft.FSharp.Core.Operators.unbox ((tables ()).Interpret(lexer, lexbuf, 8))
